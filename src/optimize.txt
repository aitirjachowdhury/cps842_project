
.I 1
preliminary report internation algebraic language 
.I 2
extraction roots repeate subtractions digital computers 
.I 3
techniques department matrix program schemes 
.I 4
glossary computer engineer programm terminology 
.I 5
square root approximations 
.I 6
computer inspection procedures 
.I 7
glossary computer engineer programm terminology 
.I 8
equivalence transformate program schemes 
.I 9
proposal uncol 
.I 10
glossary computer engineer programm terminology 
.I 11
problem programm communicate chang machines propos solution part 
.I 12
error estimate runge kutta procedures 
.I 13
glossary computer engineer programm terminology 
.I 14
problem programm communicate chang machines propos solution part 
.I 15
recursive curve fitt technique 
.I 16
secant modificate newtons method 
.I 17
programm arithmetic operations 
.I 18
simple automatic cod systems 
.I 19
glossary computer engineer programm terminology 
.I 20
accelerate convergence iterative process technique discuss appli iterative procedure solution equate accelerate rate convergence iterate converges induces convergence iterate diverges illustrative 
.I 21
algebraic formulate flow diagrams 
.I 22
unusual applications department automatic implementate computer logic 
.I 23
binary truth function operations decimal computer extract command 
.I 24
improve decimal redundancy check 
.I 25
general purpose programm systems 
.I 26
subroutine method calculate logarithms 
.I 27
note empirical bounds generate bessel function 
.I 28
request method program 
.I 29
ne algorithm 
.I 30
algorithm analyz logical statements produce truth function table 
.I 31
ibm code nundrums 
.I 32
variable width table binary search facility 
.I 33
programm binary counter ibm type calculate 
.I 34
table automatic computate 
.I 35
machine method square root computate 
.I 36
queue network simulate ibm burroughs 
.I 37
impact computer developments 
.I 38
propos interpretate algol 
.I 39
secant method simultaneous nonlinear equations procedure simultaneous solution system necessarily linear equations generalize secant method single function variable 
.I 40
fingers fists choice decimal binary representate binary number system offers advantages decimal representate high performance general purpose computer greater simplicity binary arithmetic unit greater compactness binary number contribute direct arithmetic spe obvious important binary address instruction formats increase performance binary address essential powerful operations practical decimal instruction formats hand decimal number essential communicate man computer applications requir process large volume inherent decimal input output data time decimal binary conversion need pure binary computer significant slower decimal adder take time fast binary adder addition conversion careful review significance decimal binary address binary decimal data arithmetic supplement efficient conversion instruction 
.I 41
note computer research eastern europe 
.I 42
method computate square root division 
.I 43
technique handl macro instruction 
.I 44
runcible algebraic translate limit computer 
.I 45
flow outlin substitute flow chart 
.I 46
multiprogramm stretch feasible considerations tendency increas parallelism computer exploitate parallelism presents number problem machine design programm system minimum requirements successful concurrent execution independent problem program discuss requirements met stretch system carefully balanc combinate built programm logic technique describ place burden programm logic system program supervisory program compiler problem program 
.I 47
russian visit computer 
.I 48
shift register code index applications communicate shift register code describ call wireless telemeter stations fix cyclical order high degree redundancy permitt single error correct code minimum distance code bit code words employ state identificate code embedd shift register code period permits code employ punctuate telemeter state receivers simply putt receive zeros shift register time code combinate arises identify state barr tuitous error combinations low probable call communicate describes property applicate code detail find employ ural soviet built drum computer donate indian statistical institute unit nations technical aid administrate untaa 
.I 49
scientific business applications oracle curve plotter 
.I 50
statistical program ibm part ii 
.I 51
construction micro flowcharts 
.I 52
efficient method generate uniformly distribut points surface dimensional sphere corrigendum 
.I 53
recommendations share algol committee 
.I 54
sale simple algebraic language engineer 
.I 55
algebraic translate 
.I 56
propos standard flow chart symbols 
.I 57
jeida computer center 
.I 58
lem small size general purpose digital computer magnetic ferrite elements paper examines questions development construction general purpose digital computer contactless magnetic ferrite capacitive dezu long durate capacitive memory elements develop laboratory electrical model vinityi sssr supervision professor li gutenmacher 
.I 59
survey progress trend development automatic data process business management control system federal government december iii 
.I 60
alpha vector transformate system linear constraints 
.I 61
ibm tape matrix compiler 
.I 62
multi dimensional square polynomial curve fitt 
.I 63
octal diagrams binary conception applicable computer design logic paper dates back genesis binary conception circa years ago octal diagrams years ago derive chinese ancients analyzes applicable binary trinity octal diagrams modern electronic digital computer design logic 
.I 64
remarks algol symbol manipulate 
.I 65
algol committee report extensions 
.I 66
proposal generalize card code characters 
.I 67
central european computer 
.I 68
role university computer data process relate fields study made university program unit state fields computer data process operations research close relate fields university policy organize administrate faculty students researches curricula equipment financ investigate integrate university program recommend reflect conviction present activity relate computer develop disciplines legitimate province university scholar detail recommend graduate school computer sciences 
.I 69
statistical program ibm part collection descriptions statistical program university comput center ibm 
.I 70
construction set test matrices paper develop equations property set test matrices determinate accuracy routines find inverse determinant andor eigenvalues matrix 
.I 71
proposal feasible programm system paper proposes design programm facility involve digital computer program assist preparate large scale real time program facility capable prepar program variety machine characteristics similar facility computer basic assumptions random access storage avoid necessity segment construct program fashion trivial assumption unrealistic intend provide opportunity concentrate aspects program construction programm system stress discovery source program statements error attempt construct object program computer characteristics advocate program interrupt scheme large set characters indirect address 
.I 72
education program comput 
.I 73
real time data assimilate 
.I 74
high spe sort procedure 
.I 75
parameter estimate simple nonlinear model 
.I 76
binary conversion fix decimal precision decimal fraction 
.I 77
gat construction translators 
.I 78
remarks practical solution characteristic problem paper concern practical solution characteristic problem ordinary differential equate apparent sequential computer digital analog solve initial problem boundary problem mathematical process found compensate machine inadequacy compensate machine imperfection course normal active numerical analyst number paper appli devices problem purpose note establish mathematical framework model practical procedure assist extension ideas problem 
.I 79
programm machine extend address calculation mechanism 
.I 80
technique comput critical rotation speeds flexible shafts automatic computer 
.I 81
norc high spe printer 
.I 82
handl identifiers internal symbol language processors substitution computer orient symbol programmer orient symbol language processors examin feasible method present 
.I 83
visit computate center soviet union 
.I 84
survey progress trend development automatic data process business management control system federal government december ii part ca 
.I 85
error analysis floate point arithmetic 
.I 86
survey progress trend development automatic data process business management control system federal government december 
.I 87
note method generate point uniformly dimensional sphere 
.I 88
efficient method generate uniformly distribut point surface dimensional sphere 
.I 89
routine find solution simultaneous linear equations polynomial coefficients 
.I 90
binary arithmetic discrete variable word length serial computer 
.I 91
mathematical procedure machine division 
.I 92
checklist intelligence programm system remarkable variate exists degree sophisticate programm system manifestate jungle assort devices reproduc limit human decision procedure attempt made begin systematic classificate devices educate computer take decision mak function human operators demonstrate feasible date highly desirable future 
.I 93
formulas computer orient language technique shown enable computer translate simple algebraic formulas address computer code 
.I 94
iterative method fitt logistic curve iterative method find logistic curve square fit set dimensional point 
.I 95
eliminate special function differential equations set ordinary differential equations mathematical function requir subroutine numerical solution electronic computer tabular data numerical solution hand calculate function generators analog method appli expand equivalent set equations function practical function satisfy sufficient simple differential equations function eliminate procedure trigonometric inverse trigonometric exponential transcendental function 
.I 96
comput radiate integrals relative merit cost evaluate typical radiate integrals spherical bessel function investigate method desk machine evaluate finite series integrate differential equate reeves electronic analog computer litton ibm computer results general applicable equations separate helmholtz wave equate 
.I 97
signal corps research development automatic programm digital computer 
.I 98
arithmetic translate compiler ibm fortran automatic cod system 
.I 99
modifications internation algebraic language 
.I 100
recursive subscript compiler list type memory 
.I 101
nuclear reactor code 
.I 102
comparison programm method 
.I 103
cope console operate proficiency examinate year electronic computer sophisticate program process complex thisdependence comput skill experience operators increas time selection train qualifi operators grows difficult meet ne quick accurate uniform operate test train aid authors develop cope console operate proficiency examinate outlin examinate programm specifical ibm model ii tape record coordinators similar program develop computer 
.I 104
digital simulate discrete flow system discrete flow system discuss characterize movement randomly arrive items interact channels program digital computer simulate system utilizes technique common approaches physical problem principal portion paper discussion simulate study illustrate programm problem involve extensive package handl plant objective optimize parameter storage capacity process rate air traffic flow control procedure simulate compare effects alternative control decision 
.I 105
method word inversion ibm 
.I 106
method overlapp erasure list important property newell shaw simon scheme computer storage list data multiple occurrences ne stor place computer list overlapp unfortunate overlapp poses problem subsequent erasure list longer need desir erase part overlap list lisp mccarthy employ elegant inefficient solution problem present paper describes general method enable efficient erasure method employ interspers reference counts describe extent overlapp 
.I 107
multiple precision arithmetic 
.I 108
programm error correction project mercury 
.I 109
note approximate 
.I 110
fibonaccian search 
.I 111
programm numerical solution polynomial equations numerical technique present comput root polynomial equations apply recommend scal inversion rules basic bairstow newton raphson iterative technique appli great reliable high degree accuracy rapid convergence realize numerical shown illustrate pitfalls show circumvent applicate recommend procedure 
.I 112
numerical solution polynomial equate algorithm 
.I 113
survey cod character representate 
.I 114
survey punch card code 
.I 115
optimizers structure 
.I 116
sumador chino recent motor trip mexico writer came add device referr sumador chino chinese adder survey literature history mathematics instruments calculate uncover reference device purpose communicate enlist help members bring light known concern evolution present status sumador chino 
.I 117
estimate relative efficiency internal sort method 
.I 118
character scann ibm 
.I 119
note eigenvalue computate 
.I 120
simple technique cod differential equations 
.I 121
computate control labell 
.I 122
square fitt great circle point sphere 
.I 123
compilate computer neliac neliac compiler bas algol develop navy electronic laboratory san diegocalifornia aboot strap compiler remington rand univac countess computer compiler generate version runn countess program generate machine code control data corporate cdc version neliac accept essential identical input language 
.I 124
algorithm assignment problem assignment problem formulate briefly discuss efficient algorithm solution present algol code empirical relate solution time size problem bas extensive experiments carri digital computer 
.I 125
polynomial transformer algorithm 
.I 126
square fit orthogonal polynomial algorithm 
.I 127
assignment algorithm 
.I 128
rootfinder iii algorithm 
.I 129
rootfinder ii algorithm 
.I 130
real zeros arbitrary function algorithm 
.I 131
solution tri diagonal linear equations algorithm 
.I 132
math sort algorithm 
.I 133
riccati bessel function kind algorithm 
.I 134
bessel function set integer ordersalgorithm 
.I 135
digital computer university iv 
.I 136
note calculate interest 
.I 137
evaluate number express strings english word 
.I 138
thoughts reconcil character set proposal corrigenda 
.I 139
binomial coefficients algorithm 
.I 140
crout pivot algorithm 
.I 141
thoughts parallel process 
.I 142
comments technique count 
.I 143
list computer system program ibm datatron univac 
.I 144
number digital shorthand present communications system transmit single character groups cod pulses simple terminal equipment english word form sparse set alphabetic combinations present method inefficient computer system substitut terminal numeric representations entire word common phrases character character representations requires approximate present transmission time save reflect cost benefits accrue code language translate scheme provision made transmission pure numeric andor binary streams single character transmission non dictionary word names people place 
.I 145
automatic graders programm class 
.I 146
computer engineer classroom instruction april computer committee college engineer university michigan acts steer committee ford foundate project computer engineer educate held special conference discuss time topics pertinent ford project report condens transcription key ideas offer conference attendees select topics 
.I 147
report conference university comput center directors 
.I 148
digital computer university iii 
.I 149
decision rule improve efficiency solve linear programm problem simplex algorithm 
.I 150
ration interpolate continu fraction algorithm 
.I 151
trdiag algorithm 
.I 152
crout pivot algorithm 
.I 153
comments fortran user 
.I 154
rapidly convergent expressions evaluate 
.I 155
trie memory 
.I 156
introductory problem symbol manipulate student 
.I 157
digital computer university ii 
.I 158
rootfinder ii algorithm 
.I 159
rootfinder algorithm 
.I 160
rootfinder ii algorithm 
.I 161
abbreviate word systematical corrigendum 
.I 162
variant technique count 
.I 163
count ibm 
.I 164
short study notate efficiency 
.I 165
neliac dialect algol 
.I 166
programm compatible family close relate digital computer 
.I 167
combin algol statement analysis validity check 
.I 168
multiprogram schedul part schedul algorithm external constraints 
.I 169
multilingual terminology project 
.I 170
thoughts reconcil character set proposal 
.I 171
digital computer university part 
.I 172
complex exponential integral algorithm 
.I 173
atlas concept large computer design 
.I 174
interval estimate time state total time ratio doubleexponential process 
.I 175
solution simultaneous ordinary differential equations general purpose digital computer 
.I 176
symbol manipulate thread list corrigendum 
.I 177
solution polynomial equate bairstow hitchcock method grau communications acm february algorithm 
.I 178
rootfinder algorithm 
.I 179
evaluate legendre polynomial pnx recursion algorithm 
.I 180
evaluate laguerre polynomial lnx recursion algorithm 
.I 181
evaluate hermite polynomial hnx recursion algorithm 
.I 182
evaluate chebyshev polynomial tnx recursion algorithm 
.I 183
conversion floate point representations 
.I 184
short method measur error square power series 
.I 185
multiprogram schedul part introduction theory order exploit fully fast computer possess simultaneous process ability large extent schedule workload schedul routine capable extreme rapid execution prove defeate construction schedule entails determin program run concurrent sequential respect concise schedul algorithm describ tends minimize time execut entire pend workload subset subject external constraints precedence urgency algorithm applicable wide class machine 
.I 186
algorithm defin algol assignment statement addendum 
.I 187
compil connectives 
.I 188
department computer mathematics moscow state university 
.I 189
future automatic digital computer 
.I 190
bendix system 
.I 191
abbreviate word systematical 
.I 192
technique count binary computer 
.I 193
start automatic storage assignment 
.I 194
divisionless computate square root continu squar 
.I 195
code 
.I 196
report algorithmic language algol naur backus 
.I 197
imaginary number system 
.I 198
high spe multiplicate process digital computer 
.I 199
euclidian algorithm algorithm 
.I 200
bessel function asymptotic expansion algorithm 
.I 201
bessel funtion series expansion algorithm 
.I 202
control system logical block diagnosis data load paper describe section integrate diagnostic monitor system facilitates check section instruction subroutine object program method diagnostic operations format similar computer program makes system convenient relative simple understand paper describe number diagnostic features includ system 
.I 203
decod combinations integer time 
.I 204
prove theorems pattern recognition 
.I 205
macro instruction extension compiler language macroinstruction compiler construct small set function made extreme powerful condition assemble nest definitions parenthetical notate serve make compiler capable accept general extension ground language 
.I 206
symbol manipulate xtran 
.I 207
syntactic semantic augments algol 
.I 208
introduction informate process language 
.I 209
symbol manipulate thread list 
.I 210
recursive function symbolic expressions computate machine part 
.I 211
share standard flow chart symbol 
.I 212
bisection routine algorithm 
.I 213
numerical inversion laplace transforms 
.I 214
algorithm defin algol assignment statement 
.I 215
execute operations fourth mode instruction sequenc 
.I 216
note abacus number conversion 
.I 217
soviet computer technology 
.I 218
computer preparate poetry concordance 
.I 219
marriage problem 
.I 220
method computate square root division 
.I 221
basic side tape label 
.I 222
cod isomorphisms cod external symbol symbol internal compute carri relevant information property preserve form easily dealt case point present 
.I 223
selfcipher programm 
.I 224
sequential formula translate syntax algorithmic language algol convenient describ sequence state element call cellar transitions controll admissible state symbol pairs represent transition matrix description syntax furnishes time extreme simple rule translate machine program statement algorithmic language sequential treatment feasible case optimize process recursive address calculate 
.I 225
techniquefor handl macro instruction corrigendum 
.I 226
solution polynomial equate bairstow hitchcock method algorithm 
.I 227
rootfinder algorithm 
.I 228
quadi algorithm 
.I 229
terminology proposal 
.I 230
proposal character code compatible 
.I 231
proposal set publicate standard acm 
.I 232
high spe sort procedure 
.I 233
abstracts addition nuclear reactor code 
.I 234
sap assemble program ibm 
.I 235
think pieces 
.I 236
soviet cybernetics computer article record observations soviet research technology cybernetics computer science made author dur visit soviet union delegate ifac congress automatic control held moscow summer 
.I 237
computer production peek boo sheets 
.I 238
simulate analysis biochemical system 
.I 239
inefficiency boolean function informate retrieval system 
.I 240
process magnetic tape variable block 
.I 241
machine calculate moments probable distribution method present calculate machine moments probable distribution necessitate addition reference memory moment minimum multiplicate addition reference memory requir straightforward method number entry probable distribution method direct applicable tabulate distribution exists comput repeate convolution case conserves time accuracy 
.I 242
note geometric weight check digit verificate note describe method utilize geometric weight modulus check digit computer multiplicate division addition attempt made show limitations system 
.I 243
dimensional code detect correct multiple error paper introduces family code detect correct multiple error binary cod message message arrang conceptual multidimensional rectangular array process encod error detection bas parity evaluations prescrib dimensions array effectiveness code increas introduc system check bit essential parity check parity bit dimensional code discuss paper parity evaluations horizontal vertical main diagonal family code restrict dimensions evidenc discussion minnick ashenhurst similar multidimensional single bit selection plan purpose dimensional code correct detect error develop extension higher dimensional code greater correction power straightforward 
.I 244
incomplete elliptic integral algorithm 
.I 245
set associate legendre polynomial kind algorithm 
.I 246
square fit orthogonal polynomial algorithm 
.I 247
incomplete elliptic integral algorithm 
.I 248
proprietary mathematical programm impressions panel discussion panel discussion proprietary mathematical programm sponsor special interest committee mathematical programm acm dur hall discussionon september th th nation acm meet los angeles note consists sole impressions garner moderate panel necessarily represent position panelists participants discussion 
.I 249
specificate language mechanical language processors bakers dozen 
.I 250
engineer applicate logic structure table 
.I 251
ballistic cam design paper present digital computer program rapid calculate manufactur data essential design preproduction cam utilize ballistic computer tank fire control system cam profile generate introduces superelevate angle requir tank main armament type ammunition 
.I 252
programm duplex computer system paper describe method duplex computer programm computer military defense system method combines special program basic data process program package duplex operate system greater reliable achieve requir level integrate computer similar process input continual cross check intermediate final results 
.I 253
program ray chaudhuris algorithm minimum cover abstract complex 
.I 254
smalgol prior dur western joint computer conference people joint user groups express interest defin smalgol language algol language compiler relative small size computer preliminary report result acm nation conference months later consider counter proposal final version agre subcommittee recommendations subcommittee standard subset algol small computer present 
.I 255
augmentate algorithm 
.I 256
set test matrices algorithm 
.I 257
invert algorithm 
.I 258
composition generate algorithm 
.I 259
permutate algorithm 
.I 260
interpolate aitken algorithm 
.I 261
tape splitt 
.I 262
map 
.I 263
library load alternate routine selection 
.I 264
generalize polyphase merge algorithm 
.I 265
low level language subroutine fortran paper describe subroutine cod symbolic language fortran cod program deal special arithmetic multi precision arithmetic symbol manipulate bit manipulate expand character set input output visual display 
.I 266
fitt sphere method square 
.I 267
proposal improve efficiency algol 
.I 268
stochastic evaluate static storage allocate 
.I 269
core allocate bas probable 
.I 270
technique storage allocate algorithm 
.I 271
semi automatic storage allocate system load time 
.I 272
storage allocate scheme algol storage allocate scheme machine instruction core store magnetic drum describ drum stor program block andor data direct programmer auxiliary informate algol program administrative routine controll storage run time describ full detail 
.I 273
experience automatic storage allocate 
.I 274
dynamic storage allocate atlas computer includ automatic back store 
.I 275
dynamic storage allocate informate retrieval system 
.I 276
program organize record dynamic storage allocate material present paper part design plan core allocate portion ascii matic programm system project ascii matic concern applicate computer technique activity headquarters military intelligence operations army 
.I 277
problem storage allocate multiprocessor multiprogramm system 
.I 278
general formulate storage allocate formalize general computer storage allocate process attempt computer associate fictitious computer essential identical respect possession unbound primary storage mappings total storage set internal external direct address set introduc program sequence term admissible relative specific execution time period mapp underwhich effective data referents locate direct address set storage allocate consider process establish arbitrary program sequence mappings decoupl program admissible subprograms link set interludes existence proof term complete interpretive program special case discuss restrictions general program consider practical realize allocate process tractable 
.I 279
case dynamic storage allocate 
.I 280
preplann approach storage allocate compiler 
.I 281
putt hex recent note approximate natural antilogy consider indirect formulations describ note produce family fast high precision eminent practical exponential evaluate formula derive formulate 
.I 282
optimum tape writ procedure consider magnetic tape system read check writ error occurs writ record programm error routine bypass area tape try rewrite record area paper evaluate procedure basis expect los computer time develop decision rule select optimum procedure rule depends critical number time tape written future case optimum procedure bypass area decision size area bypass formula develop determine optimum area bypass procedure 
.I 283
inversion complex matrix 
.I 284
manipulate algebraic expressions algorithm algebraical manipulate expressions form sumcipi develop conjunction development program system analysis problem algorithm enablesus derive system transfer function algebraical describ block diagrams linear continuous multi loop feedback system machine representate derive expression virtue algorithm form simplify task compil algorithm develop purpose connection system analysis study applicate mathematical device extend confines original problem 
.I 285
solution tridiagonal matrices 
.I 286
iterative method inversion power series 
.I 287
generalize important event technique 
.I 288
syntactical chart algol 
.I 289
critical path schedul algorithm 
.I 290
chain trac algorithm 
.I 291
mobol preparingretrieval program 
.I 292
informate retrieval language legal study 
.I 293
appli mathematics laboratory david taylor model basin 
.I 294
imaginary number system 
.I 295
ration approximations error function similar function 
.I 296
note multiple precision arithmetic 
.I 297
note fitt great circle square 
.I 298
bit pseudo random number generate bit pseudo random number generate suitable computer test statistical randomness determine adequacy monte carlo program frequency test distribution low order moment run run mean appli half million generate number ly interval set integer obtain specifi bit generate number test substantiate randomness number set integer com significant bit 
.I 299
generalize polyphase merge algorithm 
.I 300
cobol sample problem simplifi merchandise control problem chosen present cobol user potential user comput system mythical department store language bros programm cobol language run computer 
.I 301
set test matrices algorithm 
.I 302
augmentate algorithm 
.I 303
basic terminology connect mechanical language processors suggestions paper part terminology work university pennsylvanias office computer research educate work joint support nation science foundate air force office scientific research 
.I 304
nth root complex number algorithm 
.I 305
cram algorithm 
.I 306
invrs algorithm 
.I 307
find algorithm 
.I 308
quicksort algorithm 
.I 309
partition algorithm 
.I 310
set associate legendre polynomial kind algorithm 
.I 311
procedure range arithmetic algorithm 
.I 312
note approximate 
.I 313
iterative method inversion power series 
.I 314
divisionless method integer conversion 
.I 315
solution tridiagonal matrices 
.I 316
algorithm equivalence declarations 
.I 317
approximate curve line segment dynamic programm 
.I 318
combat vehicle fir stable active suspension 
.I 319
class iterate formula historical note class iterate formula obtainable ration approximations eulers formula derive correspond error estimate historical note iterative procedure follow derivate eulers formula associate error estimate notate simplify error estimate suggests generalizations final section consider pade approximants euler polynomial show number known formula derive unifi approach short discussion formula 
.I 320
logic structure table logic table excellent develop express logic requir procedure operations system circuits set rule writ logic table explain mean simple logic structure vend machine logic table logic table dimensional nature enable fully express consider sequential parallel aspects logic compil direct computer program eliminate ne flow chart hand cod 
.I 321
algol confidential algol report encounter describe complex language difficult learn metalinguistic formulae admirable serve purpose precise language certainly readable beginner experience shown report explain fact easy learn algol write algorithm language general powerful handle enormous class problem hard learn part algol present compiler language write assignment statement inde lot unnecessary restrictions impos compil language final lift algol unobvious things written later lies problem algol general restrictions lift lot technical detail crop hard learn correct paper obscure features language consider usefulness discuss remarks bas author interpretations algol report 
.I 322
operation compatible system conventions general standard committee share organize devot considerable effort problem operate computer efficient view grow number programm system programm system cod utilize fix set hardware components recognize fact occupy storage medium requir incompatibility resolve sett computer system requir follow set conventions consider minimize computer set time sufficient broad interest feel computer user aware george ryckman chairman 
.I 323
state digital computer technology europe 
.I 324
romberg integrate algorithm 
.I 325
numerical solution polynomial equate algorithm 
.I 326
mathsort algorithm 
.I 327
zeros real polynomial resultant procedure algorithm 
.I 328
matrix inversion algorithm 
.I 329
automatic abstract index survey recommendations preparate widespread automatic scanners read documents transmit contents machine analysis report present concept automatic analysis relative frequency approach measur significance word word groups sentences relative frequency approach discuss detail applicate problem automatic index automatic abstract includ report summary automatic analysis study publish date writ conclusions point sophisticate mathematical linguistic technique solution problem automatic analysis 
.I 330
method evaluate area normal function 
.I 331
successive approximations computer storage problem ordinary differential equations 
.I 332
indirect chain method address secondary key method enter random access basis key briefly survey wide chain method bas pseudo random key transformate review detail efficient generalize chain method permits recovery addition key present 
.I 333
design improve transmissiondata process code 
.I 334
division square root quater imaginary number system 
.I 335
numerical experiments newton method nonlinear parabolic ellipticboundary problem generalize newton method nonlinear parabolic equate form ut uxxgu nonlinear elliptic equate uxxuyyexpu solve numerical comparison result result obtain picard iterate procedure show case quisi linearize method offer substantial advantages time accuracy 
.I 336
practical technique determinate optimum relaxate factor successive relaxate method 
.I 337
survey punch card code 
.I 338
grout ii algorithm 
.I 339
real exponential integral algorithm 
.I 340
legendre polynomial algorithm 
.I 341
chebyschev polynomial algorithm 
.I 342
solution polynomial equate barstow hitchcock algorithm 
.I 343
frequent occurr error algol program algorithm 
.I 344
ber bei function algorithm 
.I 345
complete elliptic integral kind algorithm 
.I 346
complete elliptic integral kind algorithm 
.I 347
gamma function range algorithm 
.I 348
nth root complex number algorithm 
.I 349
set test matrices 
.I 350
adjust inverse matrix element perturb algorithm 
.I 351
inverse finite segment hilbert matrix algorithm 
.I 352
spherical neumant function algorithm 
.I 353
logarithm complex number algorithm 
.I 354
associate legendre function kind real imaginary arguments algorithm 
.I 355
exponential complex number algorithm 
.I 356
interest algorithm 
.I 357
bessel function comput recursive algorithm 
.I 358
crout pivot ii algorithm 
.I 359
invert algorithm 
.I 360
evaluate determinant algorithm 
.I 361
programm error correction decimal computer 
.I 362
table look technique 
.I 363
approximate transcendental number continu fraction 
.I 364
compilate subscript variable 
.I 365
bessel function integral order complex argument 
.I 366
eigenvalue symmetric matrix 
.I 367
topological order list randomly number element network network direct line segment free circular element assum line identifi terminal nodes nodes assum number non topological system list line numeric order simple technique create high spe list topological order 
.I 368
real zeros arbitrary function algorithm 
.I 369
crout pivot algorithm 
.I 370
bisection routine algorithm 
.I 371
remarks algorithm algorithm algorithm 
.I 372
critical path schedul algorithm 
.I 373
correlate coefficients matrix multiplicate algorithm 
.I 374
telescope algorithm 
.I 375
telescope algorithm 
.I 376
tchebycheff algorithm 
.I 377
sieve algorithm 
.I 378
generalize technique symbol manipulate numerical calculate 
.I 379
bitwise operation 
.I 380
comparison iterative method calculate nth root iterative method calculate nth root includ propos author compar theoretical convergence estimate macrocompiler estimate machine runn time compare runn time method variety input data 
.I 381
alternate form uncol diagram 
.I 382
statistical program university north carolina 
.I 383
find minimum routes network turn penalty 
.I 384
gamma function algorithm 
.I 385
factorial algorithm 
.I 386
multint algorithm 
.I 387
gamma function algorithm 
.I 388
solution polynomial equations bairstow hitchcock method algorithm 
.I 389
real exponential integral algorithm 
.I 390
complex exponential integral algorithm 
.I 391
bks system philco 
.I 392
comment paper parallel process 
.I 393
subroutine symbol manipulate algebraic compiler 
.I 394
multiple programm data process 
.I 395
multiple precision division 
.I 396
automate program debugg automatic debugg substantial reduce lead time cod effective complex program enforces analysis debugg criteria result verifiable accurate program programmer program debugg memory area set input data maximum repetition loop checkpoint informate set data executive debugg program run program debugg perform check function create trace record later analysis locate error applications flexible system conjunction debugg technique 
.I 397
card format reference informate process paper proposes card format suitable variety reference informate process column ibm card divid fields reference material field column identificate field column format reference material flexible format identificate rigid reference material includes basical index title source class summary cross reference entry identificate includes basical code matrix descriptors entry number kind major interest source reference identificate provide choice identify material personal general card format sufficient identify material normal associate reference books article programm term hardware term equipment machine system abbreviations suitable standard card reference informate process 
.I 398
slang system 
.I 399
compil technique boolean expression condition statement algol 
.I 400
comment implementate recursive procedure block algol 
.I 401
allocate storage array algol 
.I 402
dynamic declarations 
.I 403
thunks compil procedure statement comment procedure declarations 
.I 404
syntax direct compiler algol 
.I 405
algorithm cod efficient arithmetic operation exist formula translate scheme yield inefficient cod method describ reduce number store fetch operation evaluate constant subexpressions dur compilate recognize equivalent subexpressions 
.I 406
thread list construct combin algol machine assemble processor 
.I 407
madcap scientific compiler display formula textbook language 
.I 408
internal organize mad translate 
.I 409
cl environment compiler flexible large scale programm system facilitate solution informate process problem provide intercommunicate program andor programmer develop realize ibm computer system bas master concept provision accept stor retrieve description instances large complex data set algorithm defin data set data algorithm express family command descriptive language concept distinct data description content description discuss detail 
.I 410
clip translate 
.I 411
magnetic tape data storage oracle algol translate 
.I 412
recursive process algol translate 
.I 413
basic compiler arithmetic expression 
.I 414
ibm data process system features unit ibm data process system announc recent internation business machine corporate features disk storage drive interchangeable disk packs newly develop unit 
.I 415
digital computer western germany 
.I 416
multiple shoot method point boundary problem 
.I 417
legal implications computer paper point variety computer system business industry involve legal entanglements suggests computer specialists responsible call assistance forestall minimize entanglements dur plann stage technique suggest mak legal clearance effective burden technology achieve favorable legal climate general computer specialists alert potential opportunity interpret lawyers technical aspects computer system involve legal situations 
.I 418
random algorithm 
.I 419
magic square algorithm 
.I 420
perm algorithm 
.I 421
position point relative polygon algorithm 
.I 422
combinate algorithm 
.I 423
matrix inversion algorithm 
.I 424
gamma function algorithm 
.I 425
complete elliptic integral algorithm 
.I 426
term magic square algorithm 
.I 427
psif algorithm 
.I 428
multiple integrate algorithm 
.I 429
adaptive nimerical integrate simpsons rule algorithm 
.I 430
treesort algorithm 
.I 431
treesort algorithm 
.I 432
triangular regression algorithm 
.I 433
fix world length array variable word length computer 
.I 434
character manipulate fortran ii 
.I 435
decision matrix basis simple data input routine great deal time effort spent development bigger compiler language multiprogram executive system implementate method procedure instantaneous occurs evolutionary process concern problem maintain improve incorporate ideas exist system neglect area author interest method employ decision matrix present handl standard system programm problemthat provid data input routine 
.I 436
evaluate polynomial computer 
.I 437
compil matrix operation 
.I 438
mechanical pragmatics time motion study miniature mechanical linguistic system 
.I 439
line digital computer measurement neurological control system 
.I 440
record linkage special difficulty encounter devis reliable system search update large documents identifi primarily basis names personal underly problem mak nearly maximum items identify informate individual unreliable collective considerable discriminate power rule appli general retrieval system develop methodological study linkage vital health record family groupings demographic research purpose rule describ informate utilize match optimize discuss 
.I 441
topological sort large network topological sort procedure requir problem involve analysis network problem pert present paper present general method obtain topological order permits treatment larger network handl present procedure achieve greater efficiency procedure adapt machine discuss term pert network activity order hour machine time method develop byproduct procedure need westinghouse baltimore programm present plan implement regard technique describ westinghouse present anticipate need complete serve lockhe program 
.I 442
crout equilibrate iterate algorithm 
.I 443
complex number real power algorithm 
.I 444
evaluate jacobi symbol algorithm 
.I 445
combinate algorithm 
.I 446
simpsons integrate algorithm 
.I 447
certificate calculate easter 
.I 448
path matrix algorithm 
.I 449
matrix inversionalgorithm 
.I 450
solution diophantine equate algorithm 
.I 451
nest statement ii algorithm 
.I 452
nest statement algorithm 
.I 453
enlargement group algorithm 
.I 454
crout equilibrate iterate algorithm 
.I 455
exponentiate series algorithm 
.I 456
random algorithm 
.I 457
quantum mechanical integral slater type integral 
.I 458
coefficient determinate algorithm 
.I 459
permute algorithm 
.I 460
minifun algorithm 
.I 461
cod medical case history data computer analysis 
.I 462
computer pattern recognition technique electrocardiographic diagnosis programm digital computer general pattern classificate recognition device phase live interest artificial intelligence important choose class signal present undergo good deal visual inspection train people purpose pattern recognition comparison machine human performance obtain practical result serve addition motivate clinical electrocardiograms make class signal approach problem present center multiple adaptive match filters classify normalize signal present report background applicate method 
.I 463
ambiguity phrase structure language 
.I 464
syntactic analysis digital computer paper provide account shadow language describe syntax correspond subroutine enable computer perform syntactic analysis input subroutine consists str analyz description syntax syntax express shadow language output consists trace table express result syntactic analysis tabular form version subroutine associate program year present account language subroutine summary material describ previous unpublish report addition discussion work relate general questions problem orient language str transformations 
.I 465
perm algorithm 
.I 466
general order arithmetic algorithm 
.I 467
permutate generate algorithm 
.I 468
incomplete elliptic integral algorithm 
.I 469
critical path schedul algorithm 
.I 470
summate fourier series algorithm 
.I 471
ortho algorithm 
.I 472
gauss method algorithm 
.I 473
weightcoeff algorithm 
.I 474
input data organize fortran 
.I 475
test matrix inversion procedure 
.I 476
remarks sampl tape ii 
.I 477
remarks sampl tape 
.I 478
implement stack 
.I 479
dispersion pass algorithm polyphase merge paper present manner dispers strings polyphase merge number strings dispers level acceptable polyphase merge economical technique reach level polyphase merge shown prove 
.I 480
quick calculate jacobian elliptic function corrigendum 
.I 481
day look comput 
.I 482
tall list processor philco computer 
.I 483
nonexistence phrase structure grammar algol algol defin part formal mechanism phrase structure grammar part informal state restrictions shown formal mechanism type sufficient define algol 
.I 484
hankel function algorithm 
.I 485
real error function erfx algorithm 
.I 486
tridiagonal matrix algorithm 
.I 487
normdev algorithm 
.I 488
heuristic page turn multiprogramm computer 
.I 489
status ipl philco computer june 
.I 490
programm method printer graphical output 
.I 491
multiprogramm design low cost digital computer 
.I 492
analysis address method paper present address method bas calculate address identificate record large recirculate type advantageous customary probable distribution displacement record calculate address number probes requir address record comput basis markov chain model reader interest mathematics introduction summary sufficient 
.I 493
property classificate method design process 
.I 494
finite sequential compact process adjoints matrices arbitrary integral domains 
.I 495
procedure invert large symmetric matrices square method simultaneous adjustment parameter coefficient normal equations element symmetric positive definite matrix order solve normal equations evaluate precision measures result parameter inversion matrix coefficient requir procedure matrix inversion take advantage symmetry programm high spe computer element stor manipulate independent order allow computer memory capacity handle larger matrix follow procedure invert symmetric matrix devis 
.I 496
set matrices test computer program 
.I 497
remarks line segment curve fitt dynamic programm recent paper bellman show dynamic programm determine solution problem previous consider stone problem comprises determinate point subdivision interval ab correspond line segment give square fit function gx interval bellman confin primarily analytical derivate suggest briefly solution equate derive point subdivision ui reduc discrete search paper computation procedure consider fully similarity stone equations shown equate ui involve minimize found addition shown bellman method appli curve fitt problem addition constraints add ends line segment curve 
.I 498
magic square algorithm 
.I 499
permutate generate algorithm 
.I 500
permute algorithm 
.I 501
jacobi algorithm 
.I 502
simpsons integrate algorithm 
.I 503
ration root polynomial integer coefficient algorithm 
.I 504
factor algorithm 
.I 505
composition generate algorithm 
.I 506
permutate algorithm 
.I 507
partition quicksort find algorithm 
.I 508
matrix inversion algorithm 
.I 509
matrix inversion algorithm 
.I 510
ber bei function algorithm 
.I 511
set test matrices algorithm 
.I 512
telescope algorithm 
.I 513
sieve algorithm 
.I 514
binomial coefficient algorithm 
.I 515
ration interpolate continu fraction algorithm 
.I 516
matrix inversion ii algorithm 
.I 517
evaluate pert network algorithm 
.I 518
magic square odd order algorithm 
.I 519
magic square order algorithm 
.I 520
complex division algorithm 
.I 521
perm algorithm 
.I 522
generate partition constraints algorithm 
.I 523
treesort algorithm 
.I 524
position point relative polygon algorithm 
.I 525
computer technique handl analysis variance 
.I 526
character manipulate fortran 
.I 527
description list concept concept defin class object members distinguish process property property defin mean partition set object disjoint class formal definition concept recursive nature concept describ list structure correspondence establish recursive definition concept description list structure definition description list structure concept built elementary list structure recursive process list structure obtain compar description list structure discuss author previous publicate 
.I 528
fortran business data process 
.I 529
regression cod pattern data edit 
.I 530
computer method radiate treatment plann 
.I 531
person match electronic method record linkage update accomplish establishments preassign number payroll number customer number social security number vital health record unique number general preassign individual purpose report services receive health department order determine physician report refer individual identificate compar laborious operate subject error misspellings marriage problem interest maintenance psychiatric case register maryland report hundr psychiatric agency refer patient record link order provide unduplicate count individual care longitudinal record psychiatric history earlier paper describe general procedure register maintenance digital computer honeywell present detail initial procedure person match process order elicit comment suggestions person experience match 
.I 532
computate ration approximations continuous function 
.I 533
digital synthesis correlate stationary noise note propose method generate stationary noise prescrib auto covariance function digital method ne technique arises test performance data process engineer system input corrupt correlate noise known form requir technique simple produce strict sense stationary noise agrees approximate rt prescrib auto covariance function acf interval method consists approximate spectral density periodic process spectral line synthesize periodic noise random phase amplitudes order simplify discussion statistical property noise generate technique present term exact harmonic analysis practice discrete harmonic analysis present section 
.I 534
quick calculate jacobian elliptic function 
.I 535
triangular walk pattern hill method solve transcendental equate 
.I 536
nonlinear regression solution simultaneous equations set observables zzm bound relate parameter aan equate sza frequent problem determin set ai minimize sum square differences observe calculate distinguish observable say zm solution equate zm zmnza give rise function nonlinear ai re version gaussian regression iterate scheme converges minimize set shown minimize technique solution simultaneous necessarily linear equations 
.I 537
machine program theorem prove program proof procedure discuss connection trial run improvements 
.I 538
quantum mechanical integral slater type orbitals algorithm 
.I 539
definite exponential integral algorithm 
.I 540
definite exponential integral algorithm 
.I 541
simpsons integrate algorithm 
.I 542
factor algorithm 
.I 543
interpolate aitken algorithm 
.I 544
ber bei function algorithm 
.I 545
adjust inverse matrix element perturb algorithm 
.I 546
logarithm complex number algorithm 
.I 547
gamma function algorithm 
.I 548
molecular orbital calculate molecular interactions 
.I 549
quantum mechanical integral slater type orbital 
.I 550
definite exponential integral algorithm 
.I 551
definite exponential integral algorithm 
.I 552
gauss method algorithm 
.I 553
complex number real power algorithm 
.I 554
newton maehly algorithm 
.I 555
reduction jacobi algorithm 
.I 556
translate boolean expression 
.I 557
simulate computer tim device 
.I 558
modifi inversion procedure product form inverse linear programm code paper describe algorithm selection pivot row matrix inversion product form inverse algorithm develop linear programm code valuable inversion non dense matrix procedure describ paper test operate esso research engineer ibm computer months substantial computer cost savings realize procedure 
.I 559
solution eigenvalue problem approximate known eigenvectors 
.I 560
communicate independent translate block 
.I 561
analytic differentiate computer 
.I 562
avint algorithm 
.I 563
sort procedure algorithm 
.I 564
cram algorithm 
.I 565
invrs algorithm 
.I 566
matrix inversion algorithm 
.I 567
logarithm complex number algorithm 
.I 568
exponential complex number algorithm 
.I 569
binomial coefficient algorithm 
.I 570
simpsons rule integrate algorithm 
.I 571
permutate lexicographical order algorithm 
.I 572
add item chain link list algorithm 
.I 573
remove item chain link list algorithm 
.I 574
evaluate jacobi symbol algorithm 
.I 575
evaluate definite complex line integral algorithm 
.I 576
shortest path algorithm 
.I 577
ancestor algorithm 
.I 578
generate partition part count form algorithm 
.I 579
combinate algorithm 
.I 580
general order arithmetic algorithm 
.I 581
note sampl tape 
.I 582
lost bit 
.I 583
redundancy check algol program 
.I 584
report algorithmic language fortran ii 
.I 585
initial experience operate multiprogramm system lewis research center form degree program simultaneity operate modifi sperry rand univac scientific model computer dur year simultaneity evolve initial achievement search input output automatic time shar independent cod problem important machine program system modifications accomplish evolution addition modifications requir add facilitate ease cod operate modifications proce relative temperate pace insure basic data reduction work load comput center complet schedule educational valuable mistakes made suggest cures point future improvements emphasize basic principles multiprogramm system material follow description evolution programm hardware system develop present multiprogramm system lewis research center 
.I 586
simultaneous system equations matrix inversion routine algorithm 
.I 587
romberg integrate algorithm 
.I 588
chebyshev curve fit algorithm 
.I 589
evaluate fresnel cosine integral algorithm 
.I 590
evaluate fresnel sine integral algorithm 
.I 591
evaluate asymptotic expression fresnel sine cosine integral algorithm 
.I 592
cobol batch problem 
.I 593
introduction machine independent data division 
.I 594
advanc input output system cobol compiler 
.I 595
guides teach cobol teach cobol divid main subject area syntax cobol syntax solve problem programm concept general accept knowledge hardware computer logic possess programmer teach problem arises determin student know hardware logic computer write cobol program unfortunate historical data concern student programm proficiency non existent difficult measure approach solve problem 
.I 596
floate point arithmetic cobol paper basic operation floate point arithmetic examin cobol procedure carry specificate work storage paper concludes procedure 
.I 597
modular data process system written cobol 
.I 598
cobol librarian key object program efficiency answers question cobol compiler forc generate efficient object program purpose article present answer create full utilize construct cobol library 
.I 599
report writer cobol 
.I 600
syntactical chart cobol 
.I 601
interim report bureau ships cobol evaluate program 
.I 602
cobol compatible 
.I 603
basic element cobol 
.I 604
cobol 
.I 605
computer simulate city traffic simulate traffic flow city streets nation bureau standard data process technique tabulate make motion pictures vehicle movement model vehicle assign digital identificate give point entry exit type vehicle desir spe actual spe proportions simulate field data model made observe consequences determine able real street carry load expect future 
.I 606
method eliminate ambiguity due signal coincidence digital design 
.I 607
calculate easter 
.I 608
permutate algorithm 
.I 609
permutate algorithm 
.I 610
sieve algorithm 
.I 611
permutate generate algorithm 
.I 612
permute algorithm 
.I 613
jacobi algorithm 
.I 614
simpsons integrate algorithm 
.I 615
address multidimensional array method represent function variable consider function assume select point dimensional space picture analyst element dimensional array exist convention storage linear array vector mean perform transformate set indices locate array element space locate address element storage vector subject paper index address transformate computational identical conversion number fix mix radix number system implement transformate describ 
.I 616
informate algebra phase report language structure group codasyl development committee report represent result phase work language structure group goal work arrive proper structure machine independent problem defin language system level data process report bas part mathematical model call informate algebra develop primarily bosak hop report read avid interest programm language designers implementors interest develop theoretical approach data process interest understand professional programmer system analyst appreciate businessman analyst manager author attempt exhaustive discourse report tri present philosophy professional people vital concern provid work language system analyst trust ideas report stimulate think similar line question comment welcom address members language structure group robert bosak system development corporate richard clippinger honeywell edp division carey dobbs remington rand univac division roy goldfinger chairman ibm corporate renee jasper navy management office william keate nation cash register george kendrick general electric company jean sammet ibm corporate 
.I 617
poseidon computer form part control system complete automatic part human work spe control system perform calculation data process fast result requir instants action control system known work real time 
.I 618
computer key total system control industrial viewpoint man man machine process characterize main type markets type shown estimate 
.I 619
retrieval misspell airlines passenger record system paper discuss limit problem recognition retrieval misspell roster hundr reservate inventory flight large jet airliner program develop operate telefile stor program core drum memory solid state computer retrieve passenger record successfully despite significant misspellings original entry time retrieval time procedure involve automatic scor technique matches condens form close resemble request phone number annex present agents final selecton program successfully isolate retrieve subject number unusual usual misspellings 
.I 620
ratfact algorithm 
.I 621
romberg integrate algorithm 
.I 622
optimal classificate object algorithm 
.I 623
economis sequence algorithm 
.I 624
economis sequence algorithm 
.I 625
reciprocal gamma function real argument algorithm 
.I 626
method representate storage retrieval random code digit number random code digit number 
.I 627
knott list structure 
.I 628
floate point number representate algorithmic language 
.I 629
wir binary decimal conversion scheme 
.I 630
evaluate autocode readable requirements autocode pair requirements easy read easy write compatible paper argues readable add automatical translate process programmer enjoy utmost economy expression management full valid cobol version print give advantage readable compatible 
.I 631
automatic programm language translate syntactical analysis 
.I 632
vectorcardiographic diagnosis aid algol 
.I 633
simulate analysis biochemical system iii analysis pattern recognition 
.I 634
manipulate trees informate retrieval 
.I 635
note multiply boolean matrices 
.I 636
tape splitt iterative program 
.I 637
neliac generate compiler neliac system machine generate original neliac system develop naval electronic laboratory san diego basic bootstrap process generate system describ neliac language generate exist neliac compiler experience shown inherent difficulty build compiler compiler inde point advantage pol construct programm system report present result project complet neliac system generate compiler ibm compiler run produce program describ neliac language generate neliac system reduction programm time improvement documentate system significant 
.I 638
surge recod cobol merchandise control algorithm 
.I 639
difference expression coefficient algorithm 
.I 640
ration root polynomial integer coefficient algorithm 
.I 641
interpolate differentiate integrate algorithm 
.I 642
introduction algol 
.I 643
simulate analysis biochemcial system ii solution differential equations 
.I 644
str language symbol manipulate bas algol artificial computer programm language propos describ manipulate strings character symbol concept strings introduc algol report extend add declarate strings substrings str array explicit length able concatenate shift strings rank symbol compar stings boolean relations primer informal description language follow description experiments language ibm computer formal description algol report define propos str language 
.I 645
invrs algorithm 
.I 646
inverse finite segment hilbert matrix algorithm 
.I 647
numerical solution polynomial equate algorithm 
.I 648
sort procedure algorithm 
.I 649
factor algorithm 
.I 650
curve fitt constraints algorithm 
.I 651
survey language system informate retrieval 
.I 652
semantic structure informate system 
.I 653
translate retrieval request couch semiformal english language 
.I 654
language problem pos heavily structur data 
.I 655
comit ir language features make comit good symbol manipulate language render suit type informate retrieval program present general discussion unique programm language examinate applications 
.I 656
informate system able extract intelligence data 
.I 657
informate structure process retrieve 
.I 658
discussion pros cons special ir language 
.I 659
reversion series algorithm 
.I 660
test matrices determinant inverse pracnique 
.I 661
index lambda notate method index sequential stor element sparse multi dimensional array describ scheme notate 
.I 662
shuttle sort algorithm 
.I 663
determinant algorithm 
.I 664
assignment algorithm 
.I 665
gauss seidel algorithm 
.I 666
topological order pert network algorithm 
.I 667
kutta merson algorithm 
.I 668
minimum excess cost curve algorithm 
.I 669
specificate jovial 
.I 670
legal implications computer bank business introduction computer bank business wide variety legal implications merit careful attention early stage industry highly regulate government subject statutes regulations affect important common law rule establish courts legal ramifications involve mechanize significant economical attractive phenomenon premises process essential identify provide legal aspects system practice crystallize order avoid later impact unanticipate physical complications expense legal aspects computerize bank business especial diverse state basic question bank authorize law invest facility direct cooperatives challeng question relate premises processor respect obligate disclose informate concern bank customer adequacy fidelity bond coverage extent liable improper refusal pay check susceptible regulate government agency pertinent propriety data process bank nonbank entity render service charge bank depositors 
.I 671
telefile case study line savings bank applicate development line computer system savings bank institution trac early conceptual need bank consummate design teleregister corporate bank equipment criteria specifi development telefile system teleregister corporate operate line line program describ statistics cit reliable performance system benefits bank discuss bankers point view future trend line savings bank field discuss 
.I 672
recent development affect adp tax administrate 
.I 673
account classificate automate bank 
.I 674
applicate ibm edp method calculate formate constant complex irons 
.I 675
cod clinical laboratory data automatic storage retrieval series clinical laboratory code develop accept store urin analysis blood chemistry hematology test result automatic data process code construct part computerize hospital simulate able handle result laboratory test encounter unique feature code accept conventional record qualitative quantitative test result consequent clinical test result ne arbitrarily stratifi standardize alter cod paper describe code develop present list urin analysis code criteria develop code outlin problem multiple synonymous terminology discuss solution problem describ flexible computer produc composite laboratory report discuss reproduction report paper concludes problem remain unsolve ten year witness emergence practical automate informate system laboratory 
.I 676
computate type incompletebeta function 
.I 677
length strings merge sort detail statistics length maximal sort strings result form internal sort phase merge sort tape shown strings produc alternate method produce ascend descend strings alternate tend fourth long method produce ascend strings contrary statement previous literature slight modificate read backward polyphase merge algorithm suggest 
.I 678
optimize bit time computer simulate major component bit time computer simulate program boolean compiler compiler accept boolean function represent simulate computer digital circuits generate correspond set machine instruction subsequent execut host computer technique discuss increas sophisticate boolean compiler optimize bit time computer simulate technique applicable general purpose computer 
.I 679
recent improvement madcap madcap programm language admitt subscript superscripts form display formula basic implementate language describ previous paper madcap scientific compiler display formula textbook language comm acm jan paper discuss recent improvement language area complex display logical control subprogramm area complex display prominent improvement notate integrate binomial coefficient area logical control chief feature notate variable nest loop discussion subprogramm focus madcap notate procedure 
.I 680
error correct parse algorithm 
.I 681
flexible abbreviate word computer language 
.I 682
recursive programm fortran ii 
.I 683
serial technique determine minimum path 
.I 684
interpolate differentiate integrate algorithm 
.I 685
euler summate algorithm 
.I 686
smooth algorithm 
.I 687
shanks algorithm 
.I 688
bessel function intalgorithm 
.I 689
report visit discuss common programm language czechoslovakia poland 
.I 690
usa participate internation standard glossary informate process 
.I 691
description apt language apt automatical programm tools language numerical control programm describ metalinguistic notate introduc algol report apt usage includ present historical summary development apt statement concern present status 
.I 692
inverse test matrix 
.I 693
extension fibonaccian search variable technique fibonaccian search concept develop solve optimize problem involve unimodal function variable technique proven optimal sense dimensional fibonaccian search valuable kind calculation 
.I 694
comparison disk tape principal characteristic magnetic disk tape unit summarize compar characteristic disk illustrate sort compar tapesort conclusion present disk competitive tape important applications 
.I 695
disk stretch paper begin briefly describ stretch ibm computer special emphasis organize operate input output equipment physical characteristic disk system bit word usec word transmission rate tim limitations due arm motion disk rotate discuss applications disk usage discuss separate problem program system program compiler supervisory program approximate word disk storage reserve storage system program subroutine library problem program fil disk programm technique discuss transmitt word disk core storage minimum delay interruption arithmetic unit dumps disk consider recovery computer malfunction mathematical physical development dur calculate comment made regard reliable economics utility weakness limitations disk system future applications disk connotations 
.I 696
automatic data acquisition inquiry system disk lockhe missiles space company install large scale automatic data acquisition ada system ties company manufactur facility locate van nuys sunnyvale california system includes remote input stations collect transmit company operate data central data process center rca edp system record control flow data transmitt data process center large capacity rca data disc store informate requir provide date informate response inquiry receive remote locate inquiry stations addition storage data disk system automatical record incom outgo data magnetic tape input company convention line business data process applications 
.I 697
numerical method determinate move field isodose curve treatment plann radiotherapy 
.I 698
data dial communicate computer ordinary dial telephones operate system describ allow user call remote locate computer ordinary dial telephones special hardware connection requir user telephones input computer telephone dialoutput computer spoken form result test telephone boston area report 
.I 699
contour map program ray crystallography fortran program describ ibm system plotter produce contour map matrix point evenly spac dimension contour scale factor axes axes ne perpendicular 
.I 700
hermite interpolate algorithm 
.I 701
shuttle sort algorithm 
.I 702
assign algorithm 
.I 703
assign algorithm 
.I 704
combinatorial things time time time algorithm 
.I 705
combinatorial things time algorithm 
.I 706
fourier series approximate algorithm 
.I 707
erfx algorithm 
.I 708
evaluate fresnel integral algorithm 
.I 709
assignment algorithm 
.I 710
fresnel integral algorithm 
.I 711
frequency distribution algorithm 
.I 712
hermite interpolate algorithm 
.I 713
lagrangian interpolate algorithm 
.I 714
gauss algorithm 
.I 715
discrete convolution algorithm 
.I 716
stringsort algorithm 
.I 717
partition algorithm finite set partition set element represent tuples positive integer algorithm describ generate repetition tuples correspond partition set partition set fewer set partition set exact set 
.I 718
experiment automatic verificate program effective compiler replac explicit verificate cost technique 
.I 719
variable width stack character addressable variable field computer permit ready establishment manipulate variable width stack single machine command push variable field item stack pop variety field delimiters allow machine push pop variable width item command stack operation made basis compiler decod algorithm proper machine class compilate advantage machine fix length word 
.I 720
format free input fortran 
.I 721
report propos american standard flowchart symbol informate process paper present essential content propos american standard flowchart symbol informate process propos standard prepar subcommittee problem description analysis american standard associate asa 
.I 722
alcor group representate algol symbol 
.I 723
ecma subset algol 
.I 724
profile programmer synopsis members acm participate study concern primarily attitudes programmer careers jobs high percentage programmer apparent enter careers accident proven happy choice expect remain field dur year principal job satisfactions relate nature work mostfind job offer high level professional interest good work condition salary advancement prospects howeverare satisfactory half report positive attitude programmer programm part organizations turnover attribut primarily poor management salary seen principal motivate factor turnover programmer nature work offer salary principal determinant accept job programmer mobile expect programmer tend colleagues favorable light personality vary function system programmer differ applications programmer principal problem programm future list participants language personnel specific applications technique build programm profession 
.I 725
group participate computer demonstrate 
.I 726
general program analysis square rectangular lattice design paper describe general purpose program handle incomplete block design known square rectangular lattice flow diagram method calculate programm digital computer 
.I 727
approximate solution deltaufu dimensional dirichlet problem deltaufu fu treate numerical exceptional fast exceptional accurate numerical method programm detail numerous mathematical theory suppliedextension method natural dimensional problem mean dimensional 
.I 728
computer drawn flowchart meet ne improve documentate written computer program simple system effective communicate present shown great promise programmer describe program simple format computer prepares flow chart cross referenc listings input description date easily final output clearly explain original program system prove valuable debugg cod aid 
.I 729
generalize algol 
.I 730
mirfag compiler bas standard mathematical notate plain english pilot version compiler mirfag operate describ chief feature system intend solution scientific problem presentate mathematical formula entire standard textbook notate plain english organization instruction automatic error diagnosis actual locate error uncompil program attempt minimize fragmentate original problem statement normal feature programm system 
.I 731
symmetric list processor list process system list cell forward backward link datum describ system intend imbed higher level language capable call function subroutine cod machine language presentate form fortran program depend limit set fortran program depend limit set primitive machine language subroutine defin final set field character manipulate primitive round system 
.I 732
monte carlo inverse algorithm 
.I 733
newton interpolate forward divid difference algorithm 
.I 734
newton interpolate backward divid difference algorithm 
.I 735
calculate confluent divid difference algorithm 
.I 736
modifi hankel function algorithm 
.I 737
exponentiate series algorithm 
.I 738
fourier series approximate algorithm 
.I 739
minifun algorithm 
.I 740
interest algorithm 
.I 741
evaluate determinant algorithm 
.I 742
evaluate determinant algorithm 
.I 743
arccosin algorithm 
.I 744
ative algorithm 
.I 745
steep algorithm 
.I 746
steep algorithm 
.I 747
generate permutations lexicographical order algorithm 
.I 748
semi iterative process evaluate arctangents 
.I 749
note onstochastic matrices 
.I 750
pei matrix eigenvectors 
.I 751
note set test matrices inversion 
.I 752
clos print tape 
.I 753
procedure convert logic table condition efficient sequence test instruction 
.I 754
ye indiscreet monitor 
.I 755
exponential method numerical integrate ordinary differential equations formula numerical integrate prepar involve exponential term formula compar standard integrate method shown large class differential equations exponential formula superior stable property large step size formula large step size decrease total comput time solution significant engineer problem high accuracy need 
.I 756
computer program edit 
.I 757
simulate traffic network 
.I 758
skeletal structure pert cpa computer program introduction mechanics pert cpa computer program provid major component program purpose interrelationships outlin 
.I 759
continu operate notate symbol manipulate array process account notation device formal representate syntaxes str relationships str transformate procedure comput procedure deal array function variable device consists continu operate collective symbol analogous summate symbol sigma continu multiplicate symbol pi convention mathematics 
.I 760
dialect fortran 
.I 761
note dangl algol revisions algol propos eliminate ambiguous statement add convenience language discussion background problem sketch proof ambiguity remove includ 
.I 762
remarks syntax symbolic programm language 
.I 763
syntax controll generate formal language processor 
.I 764
reduction matrix polynomial element algorithm 
.I 765
orthogonal polynomial square surface fit algorithm 
.I 766
xy move plott algorithm 
.I 767
certificate algorithm combinatorial things time time time wolfson wright comm acm apr 
.I 768
certificate algorithm combinatorial things time wolfson wright comm acm apr 
.I 769
algebra set algorithm 
.I 770
combinate order algorithm 
.I 771
combinate lexicographical order algorithm 
.I 772
gomory algorithm 
.I 773
matrix inversion algorithm 
.I 774
jacobi algorithm 
.I 775
interpolate differentiate integrate algorithm 
.I 776
partition quicksort find algorithm 
.I 777
set test matrices algorithm 
.I 778
associate legendre function kind real imaginary argument algorithm 
.I 779
crout ii algorithm 
.I 780
algorithm invert alg gauss method alg inversion ii gjr 
.I 781
telescope algorithm 
.I 782
telescope algorithm 
.I 783
shellsort algorithm 
.I 784
normal random algorithm 
.I 785
conversion calendar date julian day number algorithm 
.I 786
adaptive integrate multiple integrate algorithm 
.I 787
matrix division algorithm 
.I 788
mullers method find root arbitrary function algorithm 
.I 789
bandsolve algorithm 
.I 790
zersol algorithm 
.I 791
character manipulate fortran 
.I 792
multiple precision binary decimal integer conversion addition subtraction 
.I 793
mapp list structure 
.I 794
list type storage technique alphameric informate method economic term space time propos storage manipulate character strings arbitrary length fix word length computer method illustrate applicate algol type identifiers algol block structure 
.I 795
debugg system source language level 
.I 796
sabrag time shar low cost computer serial sabrac computer design built scientific department israel defense ministry locate magnetic drum main store avoid ne resort optimum programm technique increase efficiency computer word ferrite core store program obey transfer core drum store twin paper tape input output channels autonomous concurrent time shar multiplicate division order autonomous machine execut order simultaneous function natural interlock number advanc order facility incorporatedin execute order permit temporary jump order modifier register permit double modificate general relative address subroutine effective spe machine muchhigher basic specificate lead expect design concept time shar incorporate low cost computer 
.I 797
american standard code informate interchange 
.I 798
catalogue entry retrieval system scheff 
.I 799
design separable transition diagram compiler cobol compiler design present compact permit rapid pass compilate large subset cobol moderate large computer version compiler smaller machine require work tape compiler tape method large applicable construction algol compiler 
.I 800
link segment subprogram language link loader 
.I 801
square solution constraints algorithm 
.I 802
syminv algorithm 
.I 803
syminv algorithm 
.I 804
exponentiate series algorithm 
.I 805
newton maehly algorithm 
.I 806
remark certificate matrix inversion procedure 
.I 807
reversion series algorithm 
.I 808
confluent hypergeometric algorithm 
.I 809
hypergeometric algorithm 
.I 810
complex power algorithm 
.I 811
smooth algorithm 
.I 812
smooth algorithm 
.I 813
difference derivatives algorithm 
.I 814
complex arithmetic algorithm 
.I 815
normal probable curve fitt algorithm 
.I 816
erlang probable curve fitt algorithm 
.I 817
nexcom algorithm 
.I 818
realize boolean connectives ibm 
.I 819
polynomial evaluate revis 
.I 820
check loop network 
.I 821
remark sampl tape iii 
.I 822
real time programm specifications problem implementate large real time applications treate suggest guidelines program specifications develop problem delineate occur system programm 
.I 823
syntactic description bc nelliac 
.I 824
descriptran automate descriptive geometry descriptive geometry consists procedure original design solve space geometry problem graphical construction measurement computate addition unify simplify approach problem call subroutine compute coordinates correspond obtainable graphical construction advantage approach descriptive geometry accuracy computate spe digital computer descriptran make program problem space statement consists subroutine analogous procedure descriptive geometry 
.I 825
pip photo interpretive program analysis spark chamber data operate computer program process photographical record data describ input program consists spark chamber photographs tracks high energy particles record program automatical scans measure perform preliminary interpretate photographs continuous operate process rate photographic frames hour achieve 
.I 826
remark fortran subroutine time series analysis 
.I 827
disk sort sort technique ibm random access storage device evaluate 
.I 828
incompressible flow network calculation general method calculate flow pressures fluid flow network present method applicable computer 
.I 829
external language klipa ural digital computer 
.I 830
corc cornell comput language 
.I 831
real error function erf algorithm 
.I 832
curve fitt constraints algorithm 
.I 833
reduction symmetric bandmatrix triple diagonal form 
.I 834
nonrecursive adaptive integrate algorithm 
.I 835
complementary error function large algorithm 
.I 836
error function large algorithm 
.I 837
incomplete beta ratio algorithm 
.I 838
direct search algorithm 
.I 839
square solution constraints algorithm 
.I 840
square surface fit algorithm 
.I 841
shuttle sort algorithm 
.I 842
posteriori bound polynomial algorithm 
.I 843
assign algorithm 
.I 844
fortran edit feature 
.I 845
test matrix determinant inverse 
.I 846
inverse conversion table 
.I 847
penny match program logic penny match program written csx describ 
.I 848
note range transformations square root logarithm germ idea previous paper pick year function desirable transform argument short range symmetric give usage square root logarithm function binary decimal machine 
.I 849
tree structure process data process problem frequent search alter binary search technique efficient search large associate organize readily adapt alterations converse chain allocate permit efficient alterate search efficient organize tree structure discuss shown search alter time proportion slogsn number item parameter tree shown optimize lead search time cent slower binary search tree organize employ data chain consider compromise organization binary search chain relate tree organize multidimensional index trie structure discuss 
.I 850
conversion reconversion comparison technique variable length sort logic describ convert highly variable input record format easily efficient process sort program internal record format discuss relate conversion input format reconversion output format comparison technique internal format 
.I 851
design characteristic variable length record sort fix length record sort technique paper describe applicate technique sort fix length record problem variable length record sort technique implement sylvania computer system fix length word memory specifical technique sequence variable length record unrestrict size produce long initial strings data merge strings data power number work tape system restrict volume input data 
.I 852
method compar time requirements sort method 
.I 853
cobol sort verb 
.I 854
characteristic sort comput system random access storage device substantial difference characteristic random access storage tape device dictate concept objective computer program design consider viewpoint external medium true case sort tape orient system major sort problem minimize merge time despite limit order merge contrast sort random access orient system encourages selection optimum order merge order problem discuss paper criteria develop determin optimum order merge accord property random access storage device attention problem key sort versus record sort disadvantage key sort random access system 
.I 855
organize structure dataon disk memory system efficient sort data process program approach organize structure data bryant disc memory system sort perform data process function present follow area cover characteristic bryant disc system bendix rca propos chain structure data function disk executive routine concept sort perform maintenance process propos structure executive routine discuss additional shown sort accomplish disk storage work area 
.I 856
sort large volume random access drum storage approach sort record describ random access drum memory sort program describ design generalize generate sort applicable variety record statement description divid part part present operate environment define general solution part describe internal sort merge technique 
.I 857
sort nonredundant technique fact compiler typical structure includ call non redundant examinedand method fact sort discuss 
.I 858
tape merge pattern generate routine present sequence merge cycles effect merg sort tape routine design minimize elaps computer time vary power merge cycles tape drive characteristic assign drive single reel drive multiple reel 
.I 859
computer plann collates 
.I 860
comparison polyphase oscillate sort technique comparison oscillate polyphase sort technique develop computer system ten tape drive basis comparison total read writ requir number input strings tape drive technique 
.I 861
read backward polyphase sort read backward polyphase sort provide efficient tape sort sort technique backward polyphase produce continuous merg process tape total number tape sort process presort technique conjunction polyphase merge sort provid presort capable produc ascend descend strings distribut strings tape requir polyphase merge 
.I 862
str distribution polyphase sort 
.I 863
multiphase sort 
.I 864
empirical study minimal storage sort 
.I 865
internal tape sort replacement selection technique general technique sequenc unsort record present technique shown applicable stage generalize sort program formate initial strings sort record memory storage internal sort shown record memory storage record sequenc log test record initial str length average random input record read writ process accomplish simultaneous computer permit overlap 
.I 866
sort computer 
.I 867
square fitt planes surface dynamic programm dynamic programm recent stone bellman gluss determine closet fit broken line segment curve interval constraint number segment fix present paper successive model develop extend method fitt broken plane segment surface zgxy defin type subareas xy space model consider rectangular area constraint plane segment defin grid xy space shown model incorporate algorithm provide successive approximations optimal fit type clos area final applications briefly describ 
.I 868
suggest method mak fuller strings algol 
.I 869
term magic square algorithm 
.I 870
term magic square algorithm 
.I 871
psif algorithm 
.I 872
adaptive numerical integrate simpsons rule algorithm 
.I 873
random algorithm 
.I 874
chebyshev curvefit algorithm 
.I 875
incomplete elliptic integral algorithm 
.I 876
complete elliptic integral algorithm 
.I 877
complete elliptic integral kind algorithm 
.I 878
reduction matrix polynomial element algorithm 
.I 879
newton interpolate forward divid difference algorithm 
.I 880
newton interpolate backward divid difference 
.I 881
calculate confluent divid difference algorithm 
.I 882
monte carlo algorithm 
.I 883
complete elliptic integral algorithm 
.I 884
orthogonal polynomial square surface fit algorithm 
.I 885
modifi hankel function algorithm 
.I 886
xy move plott algorithm 
.I 887
combinatorial things time time time algorithm 
.I 888
algorithm combinatorial things time 
.I 889
official action response algol programm language 
.I 890
select definition selection definition prepar acm standard committee subcommittee programm terminology present review acm membership 
.I 891
everymans informate retrieval system informate retrieval problem solution present pos technical library limit bubget personnel solution general applicable type retrieval problem furtherthe method solution make group previous dismiss informate retrieval program expensive difficult programm stand point reconsider position present solution make install informate retrieval program months relative equipment 
.I 892
recol retrieval command language interrogate scheme describ retrieval manipulate data record language interrogate scheme allow select record logical condition statement defin record class associate record edit print output summarize result operation typical applicate significant feature machine implementate 
.I 893
significance arithmetic digital computer nyu modifi include significance mode operate intend facilitate identificate significant bit result floate point arithmetic operation manner floate point arithmetic handl mode discuss numerical experiment mode describ comparison made ordinary normalize mode include power series evaluate linear equations solution determinant evaluate matrix inversion 
.I 894
iterative factorize technique polynomial iterative technique display factor arbitrary degree found polynomial variable convergence shown occur jacobian vanish initial approximate factor actual factor process simply programm preliminary result adapt digital computer factor degree technique similar bairstow present method simpler 
.I 895
computation extension variate difference method present computation extension variate difference method develop tintner 
.I 896
characteristic vector defective matrices 
.I 897
note proof non existence phrase structure grammar algol 
.I 898
random algorithm 
.I 899
magic square algorithm 
.I 900
ancestor algorithm 
.I 901
difference expression coefficient algorithm 
.I 902
determinant algorithm 
.I 903
exponentiate series algorithm 
.I 904
fourier series approximate algorithm 
.I 905
algebra set algorithm 
.I 906
combinate order algorithm 
.I 907
combinate lexicographical order algorithm 
.I 908
test matrix inversion 
.I 909
arithmetize declarations corrigendum 
.I 910
selective instruction trap 
.I 911
variant method search 
.I 912
address array yi dimension fortran analysis variance 
.I 913
neliac 
.I 914
jovial documentate 
.I 915
documentate ipl 
.I 916
fortran 
.I 917
comit 
.I 918
cobol 
.I 919
documentate problem algol 
.I 920
documentate programm language 
.I 921
incomplete elliptic integral algorithm 
.I 922
multint algorithm 
.I 923
gomory algorithm 
.I 924
nexcom algorithm 
.I 925
locate vector lexicographical order listalgorithm 
.I 926
syminv algorithm 
.I 927
linear programm appli ultraviolet absorption spectroscopy 
.I 928
character manipulate fortran 
.I 929
glossary construction 
.I 930
decimal binary conversion short field 
.I 931
systematic mistake analysis digital computer program 
.I 932
matrix inversion gauss jordan inversion ii algorithm 
.I 933
magic square algorithm 
.I 934
gauss method algorithm 
.I 935
calculate primes mean gps algorithm 
.I 936
set test matrices algorithm 
.I 937
inverse finite segment hilbert matrix algorithm 
.I 938
invert algorithm 
.I 939
gamma function algorithm 
.I 940
generate discrete random variable computer note concern detail instruct computer choose things assign probability method uniform variable direct computer memory locate sequence chosen condition probability efficient memory space fast program result 
.I 941
recursive program general dimensional integral general program outlin dimensional integrate variable limit program recursive nature simpsons rule combin repeate bisection attain requir accuracy develop ferranti mercury autocode scheme 
.I 942
fortran subroutine time series analysis author recent concern time series study constitut fairly typical piece appli statistical research involve extensive computation moderate large quantity data wehave found numerical process requir built complete small number basic operation set fortran subroutine written perform main purpose note describe subroutine question general statistical program topical include general remark 
.I 943
term frequent combin problem description 
.I 944
storage search property tree organize memory system memory list property construct numeric alphabetic alphanumeric tree tree informate storage retrieval property applicable problem involve large quantity data problem quantity word length distribution stor informate known priori rapidly dur process purpose paper examine storage search property tree organize storage system assum memory possess list property prime interest applicate symbol table dictionary similar stor search 
.I 945
arithmetize declarations applicate cobol 
.I 946
suggestions algol rome issues report american standard associate subcommittee 
.I 947
supplement algol report 
.I 948
note procedure 
.I 949
integer sign constant algol remark relations syntax semantic programm language aim point true grammar context free language conceive strings generate device method express mean grammar algol open criticism 
.I 950
parallel method integrate ordinary differential equations paper dedicate proposition order take full advantage real time computation highly parallel computer expect future numerical analysis recast parallel form meant serial algorithm replac algorithm consist subtasks comput knowledge result subtasks method propos parallelize numerical integrate ordinary differential equate process standard method entire serial 
.I 951
ration chebyshev approximations bessel function integral kisx remes algorithm approximate integral kis ration function relate coefficient approximations ki ki ki precision 
.I 952
fortran ii chain 
.I 953
scann text 
.I 954
note calculate probability distribution 
.I 955
class matrices test inversion procedure 
.I 956
family test matrices 
.I 957
method partial rewrit magnetic tape 
.I 958
case precision 
.I 959
mark sense port punch programm input 
.I 960
curve fitt format fortran 
.I 961
limit bit manipulate fortran ii technique develop manipulate bit fortran ii technique allow individual bit test field shift number cod bcd convert binary 
.I 962
double precision square root cdc january late hans maehly complet summary approximations elementary function cdc computer approximations technique suggest maehly equal applicable large computer cdc line unlike built double precision floate point arithmetic present work large inspir success maehly associate concern extension maehly idea double precision subroutine 
.I 963
relative effect central processor input output speeds throughput large computer present paper technique determin relative effect internal spe computer spe input output unit spe system equations derive permit determinate effect hardware usage measurement 
.I 964
mechanize tedious algebra coefficient theoretical chemistry table formula integral involve legendre function construct mechanical program perform algebraic operation formula ration algebraic expression single variable construct recurrence procedure interest molecular quantum chemistry trivial cod technique write relevant program fortran result photo compos photon system controll tape punch direct computer output avoid keyboard transcription error keyboard correction 
.I 965
greatest common divisor algorithm 
.I 966
evaluate determinant algorithm 
.I 967
complementary error function algorithm 
.I 968
radical inverse quasi random point sequence algorithm 
.I 969
graycode algorithm 
.I 970
treesort algorithm 
.I 971
time shar traffic control program toronto traffic signal control system consist variety logical distinct computer program compet machine time satisfy demands time shar program written purpose execute order predefin priority subprogram real time system paper interest aspects time shar program outlin 
.I 972
executive system implement finite state automaton command control system air force permit operators access large data computer man machine interface satisfi communicate console operators enter query view reply data link permit remote stations send message status report inventory direct computer informate receive line data link update data stor disk programm system divid executive control program component process priority priority permit system sensitive console input permit operators console time share central processor executive control program provide orderly transition control programm system component major emphasis paper technique definition finite state automaton organize executive control program 
.I 973
estimate heart parameter skin potential measurement fundamental problem vector cardiography estimate state heart basis skin potential measurement mathematical model relate ventricular dipoles surface potential sketch shown inverse problem determin electrical heart parameter basis skin potential measurement view nonlinear multipoint boundary problem feasible solution employ quasilinearize high spe digital computer 
.I 974
technique read gapless tape make electrocardiograph analysis feasible ibm study arrhythmias higher frequency component electrocardiogram long series patient heart cycles examin valid comparison heart beats made technique present automatic analysis long series heart cycles digital computer 
.I 975
program work internation standard vocabulary computer informate process 
.I 976
fresnel integral algorithm 
.I 977
conversion calendar date julian day number algorithm 
.I 978
fresnel integral algorithm 
.I 979
logarithm complex number algorithm 
.I 980
multiple precision arithmetic exact calculate symbol describ paper system general purpose multiple precision fix point routine subroutine calculate exact quantum mechanical symbol large argument 
.I 981
round problem commercial data process common requirement commercial data process sum set number round general understood manner equal sum number round individual round procedure describ accomplish procedure depend number accumulate vary sign sum vary sign number summ recognize prior round 
.I 982
inductive approach language translate natural language translate mean fix operation translations consider conception sentence translate motivate work informal present measurement physical similarity pair strings discuss notion plays central role propos type translate experimental evidence present support premise conception bas 
.I 983
take reel inch perforate tape informate interchange propos american standard 
.I 984
report input output procedure algol ifip 
.I 985
report subset algol ifip 
.I 986
propos amendment propos american standard specificate general purpose paper card informate process 
.I 987
fortran basic fortran programm language informate process automatic data process system 
.I 988
history summary fortran standardize development asa 
.I 989
method syntax specificate 
.I 990
constraint type statement programm language proposal made includ programm language statement imply relations variable explicit assignment statement compiler set newtonian iterate mak purpose routine formal differentiate 
.I 991
gamma function controller accuracy algorithm 
.I 992
gamma function algorithm 
.I 993
kutta merson algorithm 
.I 994
stringsort algorithm 
.I 995
steep algorithm 
.I 996
permutations set repetition algorithm 
.I 997
patent protection computer program 
.I 998
computer program patentable 
.I 999
joint inventorship computer 
.I 1000
computer patent disclosures 
.I 1001
copyright aspects computer usage paper concern question constitutes infringement copyright book nondramatic literary work work computer index analyz partial reprint utilize computer produce eye readable output question copyrightable program infringement copyright program discuss paper direct primarily discussion present law aspects propos copyright law includ general recommendations made respect propos revision copyright law 
.I 1002
rapid method digital filter computer time spent time series analysis multiplications minimum multiplicate method devis digital filter expectate line real time analysis biological data filter construct succession readily analyzable component manner facilitate cascad repertoire frequency response curve include relative good low pass band pass design program implement synthesis filter applicate computer assemblers allow definition recursive macro 
.I 1003
computer analysis method thermal diffusion biochemical system thermal detection rapid biochemical reactions correct temperature data transient heat conduction loss cylindrical calorimeter handle complexity aris vary thermal relaxate time concentric insulate layers computer program develop give temperature distribution system function radius time distribution correct step subroutine calculate instantaneous chemical state action heat produc reaction program bas direct statement fourier law heat conduction chemical rate equate provide bookkeep law follow reactants flow heat packets computer continual store heat distribution computer analysis method regard physical law process explicit program usual result pass mathematical procedure conventional program test known exact solution heat equate gave identical result compar experimental data known biochemical reaction construction computer program bas direct statement physical law principle general applicable appli physical phenomena 
.I 1004
arctangent algorithm 
.I 1005
coordinates ellipsoid algorithm 
.I 1006
storage allocate reference structure method propos discuss allow subscript variable capable fortran sense add autocoder type assemble system 
.I 1007
extension exist compiler sophisticate macro description present applicate macro str concatenate employ add facility belfap 
.I 1008
schedul meetings computer computer schedul paper develop meet federate american society experimental biology faseb describ faseb meet largest scientific meet held unit state year technique develop faseb appli schedule meet parallel sessions 
.I 1009
solution combinatorial problem generate function variable field computer utility generate function solve combinatorial problem discuss implementate result present evaluate 
.I 1010
multiuser computate facility educate research present day comput facility limit scientific research inable interact strongly user full power research comput instrument terminal give user able generate correct operate procedure wishes simple complex implementate describ small scale multiuser computer system permit user work independent machine obtain satisfactory response typewriter communicate 
.I 1011
logarithm complex number algorithm 
.I 1012
formal pars system automatic syntactic analysis recent important natural language data process syntax direct compiler formal pars system vutr consist finite disjoint vocabulary map recursive set strings call syntactic sentence class program automatic syntactic analysis determine formal pars system direct production analyzer itxp nondeterministic pushdown store machine internal vocabulary input vocabulary production form za ay ym yi element set element set context free language analyz direct production analyzer kuno oettinger multiple path syntactic analyzer english concrete direct production analyzer work pars algorithm connection structure assign analyzer convention phrase structure grammar examin paper 
.I 1013
final examinate schedul method schedul final examinations yield minimal number student conflicts describ minimize achieve repetitive evaluate nonlinear set equations imbed process random monte carlo selection assignment heuristic technique solution optimum solution found yield local minimal result computer program describ empirical result 
.I 1014
machine control analysis variance major problem analysis variance number factor increase exponential rise number interactions experimenter interest interactions impossible ignore experimental design problem gett error term natural look computer handle bulk work involve comput interactions program device computer describ 
.I 1015
minimax polynomial approximations partition interval method minimax polynomial approximate describ product method provide formula estimate maximum error associate degree approximate formula partition algorithm obtain divid basic interval subintervals approximations equal degree give equal maximum error 
.I 1016
interchangcable perforate tape variable block format position straight cut contour contouringposition numerical controll machine tools propos american standard 
.I 1017
comment bit sequenc ascii serial bit data transmission 
.I 1018
gauss algorithm 
.I 1019
xy move plott algorithm 
.I 1020
free field read algorithm 
.I 1021
conjugate gradient method algorithm 
.I 1022
greatest common divisor algorithm 
.I 1023
bessel function kind algorithm 
.I 1024
note formate free list 
.I 1025
method syntax check algol syntax checker design bas syntax algol describ algol report communications acm definition element language recursive desirable design syntax checker set mutual recursive processor ti subroutine perform bookkeep function recursive nature language syntax checker problem recovery error requir attention method devis permit program check complete despite error 
.I 1026
divide correct method multiple precision division division problem defin notate relate problem multiple precision operate digital computer introduc basic divide correct method multiple precision division formulate known property briefly review interest fact method produce step set precise estimate desir result exact 
.I 1027
alternate checksum method 
.I 1028
investigate analytical method numerical derivative evaluate recent propos analytical approach numerical derivative evaluate discuss technique shown accurate easy apply modifications requir great facilitate writ debugg program requir derivative highly complex function 
.I 1029
simple automatic derivative evaluate program procedure automatic evaluate totalpartial derivative arbitrary algebraic function present technique permit computate numerical derivative develop analytical expression derivative key method decomposition function introduction intermediate variable series elementary function step library elementary function subroutine provid automatic evaluate differentiate variable final step process produce desir function derivative main feature approach simplicity quick reaction tool derivate analytical derivative laborious debugg tool program derivative 
.I 1030
technique simulate computer logic simulate digital computer integral part computer design automate system evaluate boolean function characterize computer simulate constitutes major portion simulate system general procedural class evaluate function defin great increas efficiency simulate system method present simultaneous evaluate function set variablesand evaluate simultaneous function set variable 
.I 1031
note start newton raphson method determinate suitable initial estimate root equate fx mean comput root sequence relate equations describ 
.I 1032
theoretical considerations informate retrieval system informate storage retrieval system compos major component identificate informate tagg effective retrieval search strategy enter circumvent scann nonrelevant material organize make access informate efficient identificate informate paper suggest metalanguage recent discuss paper goffman verhoeff belzer associate object language search strategy linear model evaluate function relevancy develop rewards system retrieve relevant documents retrieve nonrelevant penalizes system escap relevant documents false drops inadequacy linear model approaches organize discuss organize bas history past performance generate subset high probable relevant 
.I 1033
experimental personalize array translate system system design intimate man machine interaction general purpose problem solve environment experimental operation system utilizers array orient symbolic source language powerful statement type include numeric boolean relation selection operators operands entire array system permit simple specificate test argument array single statement complete symbolic operate system include display entry program data sequence control aid interrupt switch allow user interact program dur execution addition normal stor program sequenc system provide trace options able enter statement execution present implementate system interpretive translate ibm computer 
.I 1034
autosate automate data system analysis technique describ technique design alleviate principal problem beset analysis large data workload long span time project inception system operation date lack explicit directions conduct data system analysis result lack technique control data system lifetime analysis gear determin workload relationships storage characteristic documents informate network automatical 
.I 1035
characteristic fortran cep language fortran cep language differ fortran ii mainly extend variety mode real quantity allow suitable mixtures inputoutput list expression quantity occur mode make address greater number inputoutput equipment remove restrictions complexity list quantity transmitt magnetic core memory drum magnetic tape unit 
.I 1036
remark generalize algol 
.I 1037
reduction matrix polynomial element algorithm 
.I 1038
crout equilibrate iterate algorithm 
.I 1039
summate fourier series algorithm 
.I 1040
romberg integrationalgorithm 
.I 1041
random permutate algorithm 
.I 1042
poisson charlier polynomial algorithm 
.I 1043
talk high level source language debugg technique real time data extraction talk mean take look debugg technique aid substantial debugg complex real time programm system interrupt user program desir point extract previous specifi data extract data later edit list associate data high level source language identificate 
.I 1044
automatic loader subroutine nest method automatic load library subroutine adapt operate conjunction convention pass assembler describ method specifical design cope nest library structure 
.I 1045
programm analysis variance sequence operators isomorphic mappings special operate calculus develop hartley mapp scheme found efficient programm analysis variance multifactor experiment operate calculus mapp scheme describ detail 
.I 1046
compiler build system develop brooker morris number article publish dur past year brooker morris join rohl recent paper present interest programm system develop ferranti atlas computer present paper describe major feature system expand point original author cover briefly treats light topics devote considerable space purpose paper pure expository small detail comment intentional depart add material publish list reference 
.I 1047
generate test matrices similarity transformations method obtain test matrices prescrib distribution characteristic root process consist simple similarity transformations generate full matrices canonical form matrices generate known characteristic vector inverse determinant 
.I 1048
approximate solution axial symmetric problem variety physical problem diverse field electrostatic field theory heat ideal fluid flow stress concentrate theory reduce assumption axial symmetry study elliptic partial differential equate dirichlet type problem associate equate studi regions boundary include nondegenerate portion axis exceedingly accurate numerical method approximate solution 
.I 1049
numerical solution nonlinear point boundary problem finite difference method solution nonlinear point boundary problem extreme difficult task question real uniqueness establish numerical technique problem present shoot technique easiest method attack problem fail difficult method finite difference obtain solution paper give discuss finite difference method non linear point boundary problem 
.I 1050
part breakdown technique list structure list structur part breakdown propos discuss implementate fact present operate program technique 
.I 1051
multiword list item list concept original propos newell simon shaw specifi single computer word element list report describe consecutive word element result considerable save space requir hold amount data execution time requir perform process data follow description standard list structure single word item multiword item introduc variable length item describ correspond space utilize problem final illustrate multiword list paper attempt draw recent paper appli concept relate general problem 
.I 1052
reduc truncate error programm accumulate sum numerical integrate large number interval sum larger individual addends produce accurate sum number interval increas separate variable establish accumulators hold partial sum distinct interval extensive successive truncations eliminate 
.I 1053
design implementate general purpose input routine general purpose input routine discuss advocate fortran philosophy program examin exemplifi 
.I 1054
gauss seidel algorithm 
.I 1055
bessel function int algorithm 
.I 1056
shellsort algorithm 
.I 1057
critical path schedul algorithm 
.I 1058
simpsons rule multiple integrate algorithm 
.I 1059
heapsort algorithm 
.I 1060
matrix inversion algorithm 
.I 1061
matrix permutate algorithm 
.I 1062
symbol manipulate fortran sasp subroutine set subroutine fortran describ purpose synthesize output strings input strings analyz shadow general syntactic analysis subroutine report earlier andor ii pack bcd strings form function type subroutine includ intermediate manipulations perform strings stor abbreviate internal representate automatic internal representate newly create substr stor sequential block common storage manner storage block dynamical allocate purpose discuss 
.I 1063
inch perforate paper tape informate interchange propos american standard 
.I 1064
perforate tape code informate interchange propos american standard 
.I 1065
bit sequenc american standard code informate interchange ascii serial bit data transmission propos american standard 
.I 1066
grow applications linear programm linear programm model grown extensive recent year concept organize computer code undergone radical change longer adequate mere reduce mathematical algorithm simplex method computer code advanc code cope variety situations respective computer subprogram organize integrate system emphasis paper devot underly principle future linear programm system bas viewpoint influenc demands applications petroleum industry plac system component system translate problem statement term basic data linear programm matrix coefficient data transmission direct computer entry data computer center data process edit prior solve simplex algorithm efficient reliable code solve mention algorithm flexible mean summarize result 
.I 1067
picture generate standard line printer method describ produc gray ton picture line printer utilize degree blackness standard print character gray scale level devis scann images blood cell display technique 
.I 1068
fortran ii load time saver 
.I 1069
method compar internal operate speeds computer 
.I 1070
expand system input card replicate 
.I 1071
computer usage account generalize time shar system development general time shar system require revision account procedure computer usage time shar system user operate concurrent precise amount computer time storage space user actual utilize cost factor consider computer usage account generalize time shar system discuss 
.I 1072
improve equivalence algorithm algorithm assign storage basis equivalence dimension common declarations present algorithm bas tree structure reduc computate time percent previous publish algorithm identify equivalence class scan equivalence declarations method applicable problem identify equivalence class element pair defin equivalence relate 
.I 1073
fast procedure generate exponential random variable fast method generate exponential random variable digital computer outlin 
.I 1074
shanks algorithm 
.I 1075
shuttlesort algorithm 
.I 1076
multiple integrate algorithm 
.I 1077
chebyshev curve fit algorithm 
.I 1078
elementary function continu fraction algorithm 
.I 1079
bessel function algorithm 
.I 1080
chebyshev polynomial coefficient algorithm 
.I 1081
normal distribution function algorithm 
.I 1082
gamma function controll accuracy algorithm 
.I 1083
experiment user orient computer system version software hardware system purpose facilitate programm analysis formulate problem describ modifi flexowriter generate computer acceptable input equations computable request typ manner convention mathematical text typ language rule flexible unrestrictive compiler part efficient system broader aspects tool study problem solve teach system 
.I 1084
declar arbitrarily cod alphabets inable exist programm language handle character strings alphabets mention scheme declar addition alphabets propos scheme provide encodings left justificate collate sequence numeric sequence variations character size number bit alphabet alphabet arbitrary source language character representate 
.I 1085
specificate general purpose paper card informate process propos american standard 
.I 1086
proposal input output convention algol report subcommittee algol acm programm language committee 
.I 1087
problem automatic abstract variety problem concern design operate automatic abstract system discuss purpose general view major problem area attempt made discuss detail preferences alternative solution 
.I 1088
menu plann computer computer code develop plan menu find minimum cost combinations menu item daily dietary gastronomic production requirement satisfi sequence day fast special integer programm algorithm describ approximate theoretical solution problem menu chang line post optimize percent save food cost fortran program ibm request considerable amount data process precede implementate system 
.I 1089
design computer center 
.I 1090
incomplete beta function ratio algorithm 
.I 1091
hypergeometric confluent hypergeometric algorithm 
.I 1092
nonrecursive adaptive integrate algorithm 
.I 1093
evaluate determinant algorithm 
.I 1094
prime twin algorithm 
.I 1095
decimal table binary cod table 
.I 1096
avoid matrix reversals fortran ii fortran iv 
.I 1097
algorithm convert integer base base known simple algorithm integer conversion number system present prove 
.I 1098
comparison list process computer language includ detail comparison comit ipl lisp slip detail comparison present comit ipl lisp slip known computer programm language exhibit principal characteristic exist list process language important common feature list process language review form data structure manipulate necessity dynamic allocate storage pushdown store recursive operation principal difference language considerate detail representations data programmer machine method storage allocate programm formalisms special process includ arithmetic facility usable term documentate learn aid debugg facility rough comparison show language discuss approximate spe final author give heuristic aid selection language problem applications conclud language consider distinct superior list process applications 
.I 1099
professional computer work blind development computer technology open professional opportunity intelligent blind occupations blind participate disadvantage opportunity offer gain entrance occupations computer includ programmer important future rehabilitate plann interest fact blind especial suit programm work intense train constant experience locate object unseen environment superble train memory blind bring work programm skill sight ne acquire qualifications result fewer debugg problem make blind valuable addition system group blind professional number aid technique develop mediate machine programmer paper describe technique aid design staff medical comput center university cincinnati college medicine 
.I 1100
status computer science curricula college university 
.I 1101
place logical design switch theory computer curriculum 
.I 1102
mechanical language course specificate 
.I 1103
logic computer science 
.I 1104
undergraduate curriculum numerical analysis 
.I 1105
introduc digital comput 
.I 1106
programm digital computer 
.I 1107
computer educate 
.I 1108
digital data processor track partial illuminate moon study lunar track technique fabricate breadboard assess feasible technique select conduct define track system observate sight line center partial illuminate moon data process portion system present detail describ general operate tracker head assemble data readout operate entire system effect data process considerations design tracker system system basical consist optical sensor digital computer tracker drive mechanism system unit connect cascade comprise control loop applicate optical telescope radial mechanical scann mechanism read lunar sight line measurement informate informate sequential read special purpose digital computer extract measurement compute error signal drive tracker attitude 
.I 1109
conversion power series chebyshev polynomial slowly convergent power series rearrang series chebyshev polynomial sequence transformations evaluate coefficient method illustrate comput coefficient expansion logarithm dilogarithm 
.I 1110
fourier series method numerical solution class parabolic partial differential equations fourier series method describ appli class parabolic partial differential equations reduce problem system ordinary differential equations applicate method show considerable advantage convention finite difference method 
.I 1111
class iterative technique factorize polynomial method iterate develop term function arbitrary character sufficient condition convergence process yield factor arbitrary degree polynomial variable lins method newton method occur special case 
.I 1112
technique computer detection correction spell error method describ assume word found dictionary error wrong miss extra letter single transposition unidentifi input word compar dictionary test time word match assum error occurr dur test run garble text correct identifications made percent error type 
.I 1113
computer made perspective movies scientific communicate tool easy program basic transformate requir perspective draw fact advent high spe microfilm printer general dynamic electronic make perspective movies direct output computer programm movie briefly describ study angular motion satellite attitude control system movie domino shap box represent satellite sphere circle latitude longitude represent earth cost approximate minutes ibm time minute movie 
.I 1114
generate canonical prefix encod computer program generate minimum redundancy exhaustive prefix encod describ program generate huffman frequency tree determine structure function encod program assign code 
.I 1115
randomize binary search tree structure efficient method tree structure propos utilizers minus branches search path significant gain result search key include alphabetic character 
.I 1116
test computer method construct school timetables previous propos computer method construct timetables bas iterate involve boolean matrices describ limit test method successfully produc timetables trial reference relate timetable problem theorem matrices theorem bipartite graphs problem apply method construct timetable real situations 
.I 1117
polyphase sort overlapp rewind variate polyphase merge technique sort describ permit tape time rewound merge continu remain tape result overlapp major portion rewind time technique consider sort written operate tape read backward savings overlap method increase number tape increas 
.I 1118
fortran subroutine time series data reduction 
.I 1119
open letter fortran standard american associate 
.I 1120
alcor group representations algol symbol comm acm corrigenda 
.I 1121
comment continu operate notate note intend clarify correct point recent paper describ notation symbol manipulate mp barnett comm acm august 
.I 1122
note compil algorithm compil generators arithmetic expression discuss present experimental compiler improvement suggest speierman burroughs 
.I 1123
gauss algorithm 
.I 1124
matrix division algorithm 
.I 1125
syminv algorithm 
.I 1126
erf algorithm 
.I 1127
tridiagonal matrix algorithm 
.I 1128
evaluate determinant algorithm 
.I 1129
incomplete beta function ratio algorithm 
.I 1130
gamma function althm 
.I 1131
context ambiguity pars 
.I 1132
extension algol manipulate formulae 
.I 1133
programm package general mode arithmetic 
.I 1134
effect computer language structure problem compil efficient code prompt development intermediate language reflect structure machine easily manipulate improve object program efficiency subject paper intermediate language method manipulate compilations series arithmetic statement discuss assum function exponential remove statement replac simple variable purpose simplicity treatment subscript ignor simplifi structure present illustrate compil method assumption made purpose simplificate case assumption violate actual machine 
.I 1135
general business orient language bas decision expression structure digital compute programm language cover wide class business process applications present structure bas identify incorporate compiler aspects common process class permit writ extreme compact program comparative complex applications term table control expression express informate characteristic applicate furthermorelocal change process change affect output involve effect local modifications program modificate entry table structure allow inexpensive preparate load spe compiler translate source program efficient machine code approach adopt depart convention mechanical language design philosophy stress structural analysis class process represent language oppos emphasize formal content independent syntactical definition relies exclusive nonprocedural representate process set table relation data result control statement procedure description translations flowchart invariant pattern procedure identifi characteristic class batch process philosophy potential overcome known deficiency business orient language fully meet requirement set codasyl language includ machine independence 
.I 1136
beginnings theory informate handl 
.I 1137
format language 
.I 1138
formal programm language 
.I 1139
fortran iv syntax language 
.I 1140
structural connection formal language 
.I 1141
bound context syntactic analysis 
.I 1142
extension algol language 
.I 1143
analysis decay type data comparative study made variety numerical technique fitt experimental data decay type form involve sum exponential statistical error fitt parameter calculate method appli artificial generate set data result experiment radioactive tracers human animal subject result show fitt parameter sensitive variations fitt procedure great care sensitive variations fitt procedure great care exercis identify physical constant function derive fitt parameter definite associate physical entity general stable variations fitt technique error bound large great confidence plac select uniform technique runn experiment analyz data consider significant relative result subject 
.I 1144
digital computer determinate alpha source active technique describ determin active homogeneity alpha source believe technique digital computer applications field nuclear physics technique involve computer manipulate digital image nuclear source experimental detail 
.I 1145
git heuristic program test pair direct line graphs isomorphism pair direct line graphs problem ascertain isomorphic efficient algorithmic solution known straightforward enumerative algorithm require year runn time high spe computer order compare node graphs sophisticate approach call situate similar prevail area game play theorem prove practical algorithm unknown interest case practical partial successful technique git graph isomorphism tester incorporate variety process attempt narrow search isomorphism demonstrate exist scheme reli exclusive solution program design avoid excessive computate fruitless line git written comit language successfully test ibm 
.I 1146
efficient composite formula multidimensional quadrature point degree quadrature formula integrate dimensional hyper rectangle present point lie surface weight opposite sign attach point opposite faces large volume subdivid congruent rectangular subdivision point requir interior subdivision achieve degree accuracy 
.I 1147
numerical solution boundary problem linear ordinary differential equations numerical method present solution boundary problem involve linear ordinary differential equations method describ noniterative make step numerical integrate scheme reduce problem boundary initial comment made concern numerical result apply method specific problem addition extension algorithm describ general problem discuss 
.I 1148
significant digit arithmetic method handl summ process geometric series shown give result wide differ significance carri machine incorporate significant digit arithmetic 
.I 1149
gargoyle language compiler writ 
.I 1150
fortran post mortem procedure 
.I 1151
note multiply boolean matrices ii 
.I 1152
floate point arithmetic bit number classic straightforward technique present limit size type number representate multiple precision arithmetic 
.I 1153
fast procedure generate normal random variable technique generate normal distribut random number describ faster general readily applicable binary decimal computer 
.I 1154
multi tape infinite state automata survey survey machine powerful finite automata powerful general tur machine present felt machine category close relate digital computer finite automata unrestrict tur machine intermediate machine create adjoin infinite state memory finite state machine perform follow restrict manner unbound portion memory access bound number step allow computate increas recursive function length input restrict total amount memory manner class property discuss 
.I 1155
experiment deductive question answer program investigate artificial intelligence computer experiment deductive question answer run lisp program call deducom acronym deductive communicate fact deducom answer question answerable fact fact tells deducom specific informate method answer general kind question conclusion drawn article deducom answer wide variety question human increase deductive power deducom tell fact deducom write simple program hop able forerunner able program learn deducom search procedure present bad defects question answerable fact answer answerable question answer relevant fact order present deducom method mak logical deductions predicate calculus bad defects fact chang logical equivalent deducom redundant fact deducom 
.I 1156
hankel function algorithm 
.I 1157
procedure normal distribution function algorithm 
.I 1158
program structure parallel process construct organize explicate parallel program segment discuss extension algol construct serve meta command motivate equipment multiprocess capable 
.I 1159
machine independence technology economic survey offer technique transferr program especial compiler computer method examin bootstrap technique singl detail discussion emphasis economic considerations determine applicable bootstrapp specific case discuss attempt made assign qualitative weight final reasons believe machine independence problem substantial diminish trend computer design process convergence hardware design foreseeable software development lead satisfactory resolution 
.I 1160
cat computer aid translate semi automatic translate system implement convert fap language program assemble language input system fap program deck special prepar translate user output consist translate compass language program comprehensive diagnostic list user analyze order verify questionable area translate translate processor consist distinct phase assemble fap program comprehensive analysis assemble code regard action instruction instruction data final output pass generate compass program form macro instruction 
.I 1161
compatible feature ibm system model generate stor program computer ibm series part brought edp mass market time large scale era unfold rapid change technology rapid obsolescence data process equipment program written system requir tedious conversion incompatible machine came ibm system design conversion problem specifical mind conversion aid model compatible feature feature conjunction aid permit smooth inexpensive transition optimum system 
.I 1162
assemble language reprogramm complete reprogramm compiler language program seldom assemble language program present greatest difficulty assemble language general provide translate symbolic numeric version program assemble language machine language meta language present mapp language conforms canonical list form arbitrary stream bit bit stream treate machine language program character stream user desire meta language map assemble language assemble language machine machine language 
.I 1163
philcoibm translate problem orient symbolic binary level translate system develop eliminate effort requir reprogram philco series code ibm operate experience system limit highly successful encourag applicate technique source object language 
.I 1164
emulate large system conversion problem technique call emulate discuss technique emulate develop include section central process unit cpu inputoutput unit io general treatment follow section describe greater detail implementate compatible feature emulate technique ibm system ibm system 
.I 1165
spectra emulate rca rca emulate system suppli spectra reprogramm aid allow rca object program run spectra necessitate change rca object code execution rate considerable tradition simulate emulate provide increase throughput capacity user spectra emulate make hardware micro program routine software routine accomplish function 
.I 1166
macro translate symbolic assemble language computer set macro operation prepar assist translate ibm symbolic assemble language program ibm machine language program set insert beginn symbolic deck treats incompatible instruction mnemonics macro instruction produce equivalent instruction set incompatible instruction categorize basic operation class express single basic skeleton level macro call requir supply argument basic skeleton instruction modificate execution time address tag incompatible instruction require incorporate address tag equivalent io handl generate call io simulate subroutine 
.I 1167
translate machine language program automatic translate machine language program becom highly desirable goal advent large scale computer pitfalls make difficult achieve complete automatic translations analyz shown primarily semantic nature semi automatic procedure resolve semantic problem suggest 
.I 1168
machine line cobol production large maintenance retrieval program system written cobol describ cobol language specifical enable system operate ibm computer 
.I 1169
algorithm minimize backboard wir function partial exhaustive algorithm present solve follow problem aris automatic layout computer order set en computer component permutate element en attach integer function algorithm find local minimum evaluate set delta increments correspond set exchanges elementsthen exchange correspond negative increment delta perform process iterate stopp set increment positive empty set prove correspond minimum procedure similar downhill method find minimum real function fp appli placement problem experimental result present backboard form element initial placement 
.I 1170
analyz english syntax pattern learn parser dependency analysis system bas pattern recognition learn logic develop infer word class rule syntactic combinate experience text analyz characteristic form word class depth dependency tree word direction governor feature neighbors syntactic rule combinate show relate word governor depth pattern sentence system test elementary basic english sentence includ earlier knowlton learn parser sentence experience sentence able generalize percent accuracy accumulative learn trial sentence averag probable accurate pars sentence encounter conclud system adequate learn parse bulk basic english development requir conclusion applicate ordinary english stor system operation arpasdc time shar comput system 
.I 1171
comparison primal simplex primal dual algorithm linear programm statistical comparison primal dual commonly primal simplex algorithm solve linear programm problem made assumption start full artificial basis condition primal dual method show statistical significant superiority randomly generate problem found regression analysis relevant parameter determin difference number iterations algorithm number constraint number variable ratio 
.I 1172
conversion limit entry decision table computer program decision table describ set complex decision rule bas set condition algorithm efficient convert table computer program extend usefulness decision table computer user algorithm bas work montalbano describ extend handle dashes decision rule algorithm minimize computer storage space requir resultant program minimize computer runn time dur conversion process pinpoint contradictions redundancy rule table 
.I 1173
performance system automatic segmentate program algol compiler gier algol gier algol compiler make automatic system handl transfer program segment drum store core store program execution time logic system describ performance system discuss primarily basis execution time relate specific program discussion concludes assessment potential gain improve system 
.I 1174
inverse permutate algorithm 
.I 1175
quickersort algorithm 
.I 1176
find eigenvectors gaussian eliminate algorithm 
.I 1177
determinant evaluate algorithm 
.I 1178
algol reference language editor algorithm 
.I 1179
pufft purdue university fast fortran translate core resident compile system design ibm computer describ half word core memory pufft provide monitor job sequenc translate full fortran iv language fortran subroutine library input output system compile time execute time elaborate diagnostic message writ routine batches small medium size fortran iv source language program process high speeds language compatible maintain program debugg pufft system recompil run ibjob ibftc system suppli manufacturer 
.I 1180
axle axiomatic language str transformations axle language design data manipulate data arrang linear form workspace transform accord table axioms call imperatives transformate consist match procedure decides imperative applicable replacement procedure modify part workspace imperative appli accordance definition symbolic term present systematical assertion table process definition include special case recursive assertion complete program imperative show applications language 
.I 1181
simple data transmission system office telephone method evolve transmitt data type originate laboratory situate direct central computer method require specialize equipment ordinary telephone callup basis present applications include cardiac output calculation radio active tracer study neurophysiology time sequence study nerve impulses 
.I 1182
contextual correlate synonymy experimental corroborate obtain hypothesis proportion word common context word context word function degree similar mean shapes function similarity context reliable criterion detect pair word similar mean 
.I 1183
note digital computer tedious algebra programm special purpose compiler written fortran ii language made writ long program computer procedure bas straight forward format statement generate machine written program 
.I 1184
fast storage allocate fast storage bookkeep method describ list structure operation situations involve size block fix size locate scheme llllll bell telephone laboratory low level list language make block computer register size smaller block obtain successive splitt larger half larger block reconstitut part simultaneous free 
.I 1185
program solve pentomino problem recursive macro cod technique describ macro instruction list argument recursive discussion cover primarily technique solve pentomino problem problem fitt pentomino overlapp plane area form elemental square 
.I 1186
recursive solution class combinatorial problem combinatorial problem requir selection element set element solve recursion process analogous comput binomial coefficient specific problem analyz general technique expos algol program develop problem 
.I 1187
note ascii octal code table standard 
.I 1188
algol computer design language idea construct computer design language mak algol programm language present computer designer benefit design language higher level computer user benefit higher level programm language purpose requirement design language enumerate achieve purpose translate requir translate design computer logic set boolean equations design language present term vocabulary statement sequence microprogram includ identifiers expression unary binary operators declarate statement transfer statement terminal statement exchange statement statement statement statement sequence microprogram 
.I 1189
random normal deviate algorithm 
.I 1190
pseudo random number algorithm 
.I 1191
find precedence function algorithm 
.I 1192
interpolate table algorithm 
.I 1193
gomory algorithm 
.I 1194
establishment acm repository principle ir system appli operate history establishment acm repository moore school university pennsylvania review briefly principle present paramount provision informate service easy accessible informate user unfamiliar organize service exceed user cost principle serve guides mechanize acm repository main feature informate system direct user access line teletypewriter console direct user access detail system organize unrestrict expandable search vocabulary user access facets document index stochastic search link index term relationships contribution acm repository consist document relate primarily early research compiler document catalog index catalog schedul comput review index system describ detail main catalog describe document invert list provid repository system retrieval concept coordinate 
.I 1195
uplifts university pittsburgh linear tandem system series computer program develop operation process nation aeronautics space administrate linear system ibm combin data process system program note worthy create fix length logical record fix length block variable length source data format output optimize process ibm system program complete check test validity accuracy input material provid nation aeronautics space administrate 
.I 1196
applications differential equations general problem solve large class problem lead digital computer process formulate term numerical solution system ordinary differential equations powerful method existence solution system good general purpose routine solution system furnishes powerful tool process problem true point view ease programm ease debugg minimize computer time number discuss detail 
.I 1197
find polynomial algorithm method find simultaneous polynomial develop rutishauser test number polynomial real coefficient slowly converg method quotient difference algorithm provide start newton bairstow algorithm rapid convergence sufficient condition existence scheme complete known failure occur equal nearly equal magnitudes success achieve case tri failure usual traceable equal magnitude difficulty case computer roundoff result error spoil scheme algorithm give usual find majority 
.I 1198
solution problem concurrent programm control number mainly independent sequential cyclic process restrict mean communicate made moment engag critical section cycle 
.I 1199
computer center simulate project todays computate center bas rapidly chang technology hardware software system difficult base decision experience instances benefit comparable experience problem situate paper mathematical model lockhe central computer center formulate describe operate computate center term informate nets decision process control function experiment perform model result experiment applicate result discuss 
.I 1200
reversible subroutine computer run backward computer design describe permit subroutine execut backward forward instruction unchang replac conjugate instruction shown concept number subroutine type develop unusual property property analogous matrix operation parallel nomenclature suggest classificate 
.I 1201
generate permutations lexico graphical order algorithm 
.I 1202
normal random algorithm 
.I 1203
normdey algorithm 
.I 1204
character structure character parity sense serial bit data communicate american standard code informate interchange propos american standard 
.I 1205
undergraduate program computer science preliminary recommendations 
.I 1206
judgment method curve fitt computer orient method process communicate numerical data describ instrument reliable factor irf exact define limit reliable measur item informate compute maximum permitt error mpe associate ordinate judgment principle sjp discard wrong informate compute mean parameter mpe term irf data compatible test number equations made quickly intractable problem easily solve design experiment great simplifi computation mathematical technique reduce bias sjp discuss inadequacy statistical graphical method curve fitt 
.I 1207
remark simulate boolean function 
.I 1208
simulate computer logic fortran arithmetic 
.I 1209
negative subscript fortran ii programm ibm 
.I 1210
handl fortran note describe fortran subroutine facilitate handl tape allow symbolic nam informate violate casual scientific programmer idea simplicity comment year subroutine 
.I 1211
note storage strings method stor strings describ block indefinite size complete dynamic relate similar scheme discuss 
.I 1212
non linear extrapolate point boundary problem suggest convergence property usual picard successive approximate scheme improve non linrar extrapolate technique numerical provid 
.I 1213
dynamic format specifications implementate fortran format conversion discuss format type give fortran programmer control inputoutput specifications execution time 
.I 1214
experiment algebraic manipulate computer set subroutine allow algebraic manipulations ibm computer written list processor slip series problem increas difficulty solve routine 
.I 1215
technique alcor illinois algol compiler written alcor group ibm known significant technique compiler writ organization detail compiler describ tim estimate compiler requirement 
.I 1216
symbolic derivative list process subroutine recursion routine develop compute print symbolic derivative absolute continuous elementary function variable made list process language chain rule appli result edit produce result elegant efficient obtain hand computate subset imbed formula translate introduce differentiate operate algebraic programm language 
.I 1217
map partition integer algorithm 
.I 1218
partition generate algorithm 
.I 1219
number restrict partition algorithm 
.I 1220
symbol algorithm 
.I 1221
symbol algorithm 
.I 1222
legendre function argument larger algorithm 
.I 1223
high spe compilate efficient object code pass compiler follow property briefly describ pass scan intermediate language produc preced pass essential reverse order generate pass hasto read bulky problem orient input double scan direction perform pass allow compiler remove local constant expression recursive calculable expression loop important part common subexpression recognition optimize effective index register important discuss object code efficient highly machine dependent discussion term fortran language technique applicable algebraic language 
.I 1224
determin comput center environment investigate describ general unavailable parameter descriptive comput center environment obtain actual data collection reduction describ result month collection tabulate summarize 
.I 1225
predictive analyzer path eliminate technique characteristic feature predictive analyzer system syntactic analysis operation harvard ibm delineate advantage disadvantage system discuss comparison constituent analyzer develop rand corporate robinsons english grammar addition technique describ repetitive path eliminate predictive analyzer claim efficiency process time core storage requirement 
.I 1226
organize structur data integral part data process system system selection organize data critical system operate efficiency paper provide system designer informate source describe ten technique employ organize structur data characteristic organization describ applicate independent provid designer reference allow limit number organization consider system 
.I 1227
transport algorithm 
.I 1228
treesort algorithm 
.I 1229
random permutate algorithm 
.I 1230
method hyphenate end print line description method hyphenate present result applicate general rule character set consider routine method briefly outlin 
.I 1231
peephole optimize redundant instruction discard dur final stage compilate simple optimize technique call peephole optimize method describ examplesare 
.I 1232
representate standard ecma bit code punch card ecma standard 
.I 1233
convention symbol preparate flowchart informate process system standard work paper paper intend outline convention consider flowchart informate process system convention appli symbol propos american standard flowchart symbol symbol se 
.I 1234
structure algol compiler high spe top method syntax analysis complete eliminate back source str implement convenient macro language technique simulate compile time convention run time stack enable generate code expression minimize store fetches stack pointer motion run time properly trate recursion side effect procedure block structure recursion handl ne interpretive method run time context problem transmission recursive procedure parameter call solve manner permit handl common case simple expression array identifiers efficiency 
.I 1235
stochastic approach grammatical cod english computer program describ assign word english text form class part speech program operate relative high spe limit storage space half word event corpus identifi small dictionary function word frequent occurr lexical word suffix test logical decision rule employ code addition word final remain word assign class basis probable form class occur identifi context condition probability basis cod empirical derive separate hand cod corpuson preliminary trial accuracy coder obvious improve algorithm suggest analysis result 
.I 1236
smart automatic document retrieval system illustrate fully automatic document retrieval system operate ibm describ system characterize fact hundr method analyze document search request feature retrieval process leave exact sequence operation initial unspecifi adapt search strategy need individual user system simulate actual operate environment test effectiveness process method result obtain combinate analysis procedure general reli retrieve want informate typical search request present report illustrate system operation evaluate procedure 
.I 1237
conversion decision table computer program translate procedure conversion decision table program present evaluate term storage requirement execution time compile time procedure valuable hand cod guides algorithm compiler limit entry extend entry table analyz addition table analysis nature table orient programm language feature discuss presum reader familiar nature decision table convention definition 
.I 1238
technique integrate report multi run system requirement requisition account system san francisco overseas supply agency osa includ exception report osa simultaneous satisfaction report requirement account requirement pos definite problem system design handl report function practical satisfactory solution develop expand basic system tailor service run report production run permitt final system easier debug easy maintain efficient production responsive chang requirement osa 
.I 1239
graycode algorithm 
.I 1240
transport algorithm 
.I 1241
havie integrate algorithm 
.I 1242
modifi graeffe method algorithm 
.I 1243
test understand difference call call algol 
.I 1244
bit manipulate fortran language 
.I 1245
fortran ary counter 
.I 1246
deeply nest iterations 
.I 1247
operate environment dynamic recursive computer programm system present paper nontechnical introduction oedipus computer programm system serve operate environment dynamic andor recursive program programm system service include dynamic allocate storage contiguous block arbitrary size input output hierarchy data type public pushdown list automatic recursive programm rudimentary compiler subroutine communicate bookkeep debugg aid 
.I 1248
automatic simplificate computer program present paper problem writ program examine program perform simplifications detect argument program form knowledge suppos 
.I 1249
record magnetic tape informate interchange cpi nrzi revis propos american standard 
.I 1250
graphic symbol problem definition analysis standard work paper 
.I 1251
american standard ifipicc vocabulary compar propos american standard vocabulary informate process ifipicc vocabulary term informate process analyz compar 
.I 1252
symbolic notation statistical table approach automatic system design preparate statistical table important function data process system organization symbolic notate description table shown aid documentate notate provide step mak automatic tedious time consum part system design programm computer applications notate describ suggestions made implementate larger goal 
.I 1253
quikscript simscript language quikscript simulate language bas simscript programm entire algebraic language gate quikscript language internal implementate major difference quikscript simscript present paper programm guide language attempt present flavor description simscript includ sufficient description gate render material understandable reader familiar algebraic language 
.I 1254
iterate element recent addition mad language made iterate structure mad statement correspond algol statement fortran statement expression 
.I 1255
method data list process applicate eeg analysis set subroutine discuss design aid programm computation index list number machine language symbolic assemble system commonly perform list operation outlin logical arrang group computate power spectral density autocovariance function discuss class eeg signal 
.I 1256
dynamic variable formatt 
.I 1257
debug extension line debugg technique method linr assemble language debugg great simplify bookkeep task characteristical associate process develop implement program univac computer air force cambridge research laboratory program online user insert delete symbolic assemble language number line point previous assemble program core remainder program relocate 
.I 1258
extend arithmetic package field algebraic number theory arithmetic carri degree precision exceed normal hardware capacity machine case extend arithmetic package provide comprehensive easy perform arithmetic package cod ibm discuss general problem associate design extend arithmetic package specific reference made program 
.I 1259
applications binary number computer routine binary number thought alternate form expression set letter decimal number equivalent expression easily translatable characteristic form expression chang equivalent expression save space gain power 
.I 1260
square analysis resonance spectra small computer problem analyz data mossbauer effect experiment discuss cut step procedure convergence impos physical constraint function form calculate make analysis small computer analysis carri ibm computer bcd core memory 
.I 1261
model simulate digital network simulate digital network digital computer provide engineer effective mean analyz time quantize logical behavior digital network model set time dependent time independent boolean transformations transformate describ input output relationship model element compris network mode simplicity utilize fortran iv programm system digital network simulate discuss illustrate simplicity derive common model technique applicable combination sequential digital network systematic programm approach 
.I 1262
procedure orient language statement facilitate parallel process statement suggest allow programmer writ procedure orient language section program execut parallel statement hold serve part brackets establish range parallel operate part define parallel path range nest statement effective comput device capable attain degree compute compute overlap 
.I 1263
metalanguage syntax specificate metalanguage describ sufficient table specificate algol syntax addition metaoperators adequate formal table description basic fortran 
.I 1264
blnsys operate system braille capability blnsys operate system design common option feature attach tape drive print output system execut program english braille system written small machine minimal peripheral equipment job batch card handl lost process time minimum system perform follow user specifi function assemble sps source deck post list produce condens uncondens object deck execute user program list card input program list punch output provide storage dump execute program submitt execution uncondens object deck debugg trace control card braille conversion braill listings ibsys batch output update duplicate system tape input ouput subroutine includ system 
.I 1265
relative efficiency context free grammar recognizers number diverse recognition procedure propos pars sentence respect context free grammar describ paper mean common device procedure defin give algorithm obtain nondeterministic tur machine recognize equivalent context free grammar formalize tur machine chosen make simple description pars procedure consider attempt made compare recognition efficiency procedure defin simple grammar sentence formal comparison made empirical comparison recognition realistic programm language lisp algol made mean program simulate tur machine univac computer algorithm produc grammar equivalent context free grammar consider increase recognition efficiency afford empirical investigate 
.I 1266
considerations relate purpose fortran standardize appendixes asa fortran standard 
.I 1267
performance system data transmission transfer rate informate bit asa tutorial standard informate thruput characteristic system performance discuss discussion include pertinent aspects informate transfer determinate transfer rate informate bit trib residual error standard measurement condition paper present orderly arrangement characteristic parameter affect informate thruput procedure determin thruput rate term trib concludes performance characteristic involve informate rate express trib conjunction residual error rate 
.I 1268
logarithm complex number algorithm 
.I 1269
computate fourier coefficient algorithm 
.I 1270
algol educate automatic grad program algol grader program present computer evaluate student algol program beginner program furnishes random data check answer provide search test reliable efficiency integrate procedure statement essential property computer system order grader program effective 
.I 1271
secondary key retrieval ibm system secondary key retrieval method involve preparate secondary storage list primary data record search request satisfi logical operation list produc complete set address primary record relevant request experimental result present comparative analysis 
.I 1272
expand edit function language data process automatic abstract citate index mechanical translate procedure edit requir automatic method leave someth desir paper discuss economy edit function amount condensate text language process operation contends edit regard opportunity unwelcome necessity heavy edit goes mere correction improvement computer output exemplifi concordance prepar survey article lecture opportunity heavy edit describ chief interpretate expansion computer output process factor analysis applications describ process factor analysis applications describ quick unbias evaluate large volume incom mail telegrams yield summary report human computer produce 
.I 1273
remark romberg quadrature modifi form romberg quadrature describ sensitive accumulate round error customary 
.I 1274
numerical solution point boundary problem linear ordinary differential equations method numerical solution point boundary problem homogeneous linear ordinary differential equations develop method require runge kutta integrations interval considerate solution linear system equations unknown 
.I 1275
code structure protection manipulate variable length item corrigendum 
.I 1276
fortran ii chain 
.I 1277
cobol subroutine fortran main program 
.I 1278
wengerts numerical method partial derivative orbit determinate quasilinearize recent article communications acm wengert suggest technique machine evaluate partial derivative function analytical form solve non linear boundary problem quasilinearize partial derivative form analytical evaluate numerical wengert method attractive programm viewpoint equations undertaken 
.I 1279
condition base number system encod sequence correlate character procedure describ relative efficient encod sequence character predecessor successor selection rule procedure shown assign unique integer sequence generate reasonable compact set 
.I 1280
numerical integrate differential difference equate decreas time lag system variable time lag present common occurrence biology variable flow rate common variable lag present extensive body knowledge exist concern effect variable lag shown method reduc differential difference equations ordinary differential equations studi numerical ease subsequent study deal situations multiple lag lag dependent solution present 
.I 1281
data input question answer data input scheme time shar computer describ paper format statement determine input computer asks user requir time computer converse user dur input process check error provide standard data allow edit input 
.I 1282
fortran subroutine cobol main program proper cobol cod technique account difference storage allocate library routine language write fortran iv subroutine call cobol main program technique enable programmer take advantage property language minimize respective disadvantage 
.I 1283
matrix inversion algorithm 
.I 1284
bessel function set integer order 
.I 1285
eigenvalue eigenvectors real symmetric matrix qr method algorithm 
.I 1286
eigenvalue real symmetric matrix qr method algorithm 
.I 1287
vector coupl clebsch gordan coefficient algorithm 
.I 1288
clp cornell list processor present paper highlights clp teach language employ cornell university construct serve mean introduc simulate list process concept advantage clp discuss 
.I 1289
propos revis american standard code informate interchange 
.I 1290
transparent mode control procedure data communicate american standard code informate interchange tutorial paper give considerations task group area transparent mode data communicate control philosophy appearance paper forecast underthe level control earlier tutorial paper control procedure data communications task group document date present paper elaborate solution problem transparency basic ascii communicate control character outlin previous paper mention goes cover addition control problem handl material line encrypt data non ascii code mean system provid complete character transparency cover concept transparency normal character structure modulate rate system abandon conjunction earlier tutorial paper paper expect lead proposal stand ardizationof data communicate control procedure american stand ard code informate interchange 
.I 1291
tabular input data 
.I 1292
divide correct method variable precision division describ paper divide correct method variable precision division digital computer unlike earlier method stein pope present method suitable round form normalize divisor gett estimate quotient character result correction minus estimate obtain exact quotient character believe method wide applicable division operation variable word length character orient machine 
.I 1293
method randomness nonrandom property commonly random number generate describ analyz 
.I 1294
note triple precision floate point arithmetic bit number recent paper gregory raney describ technique double precision floate point arithmetic similar technique develop triple precision floate point arithmetic purpose note describe technique multiplicate division algorithm describ addition subtraction algorithm obtain trivial modificate algorithm gregory raney paper 
.I 1295
pert time calculation topological order simplifi technique present pert time calculation topological order event assign unique memory locate active represent link link defin memory locate address memory locate time informate active carri link typical net majority activity describ bit cell remainder bit cell link unidirection forward dur te calculate expect completion time activitybackward dur tl calculate time latest allowable completion active calculation progress net topological net represent topological core 
.I 1296
ative algorithm 
.I 1297
steep algorithm 
.I 1298
adaptive numerical integrate simpsons rule algorithm 
.I 1299
solution diophantine equate algorithm 
.I 1300
function minimize algorithm 
.I 1301
algol io convention 
.I 1302
parallel signal speeds data transmission propos american stand ard 
.I 1303
correspondence algol churchs lambda notate part ii 
.I 1304
rapid turnaround multi programm system paper basic feature system characteristic control algorithm multi programm system rapid turnaround time describ 
.I 1305
internal structure fortran cep translate fortran cep translate convert source program written fortran cep language object program written language cep computer paper outline cep computer internal structure translate describ emphasis compilate expression inputoutput list subscript variable 
.I 1306
class unambiguous computer language discuss paper concept fully nest computer language mean design computer language complete free ambiguity suggestions redefinition algol fully nest language 
.I 1307
lightpen controll program line data analysis paper describe technique design ease data process system person scientist intimate primarily concern interpret significance data handl system person unable spend time master programm language essential aid compos command computer system describ user requir learn remember vocabulary language vocabulary display onmenus mean computer drive scope select vocabulary element requir point light pen small unorder set rewrit rule appli result light pen selection user generate syntactical correct command system learn remember grammar program restrict user severe language method communicate program make restrictions natural unconstrain program successfully ten month 
.I 1308
mathematical model mechanical part description flexible mathematical model take advantage common informate requirement computer aid engineer draw numerical control tape generate physical characteristic computate judicious control man machine communicate requirement improve result convention engineer design process english input language tailor draftsmen designer describe part output desir approach mathematical model consist group surface defin quadric equations create system modular subprogram subprogram convert mathematical model instruction drive automatic draft machine numerical controll machine tool physical part characteristic center gravity comput subprogram dynamic analysis work propos system present experiment demonstrations discuss 
.I 1309
computer user orient system computer language system develop make fast preparate management report regardless computation complexity format variety cost sufficient low individual tailor report prepar manager system require initial preparate large data bank data elementary form special language extract matran permit selective extraction data subset efficient process computation sequence flexible presentate result tabular graphical form matrix algebra fundamental vehicle accomplish manipulate computate 
.I 1310
rapid braille transliterate technique ibm machine 
.I 1311
efficient autocorrelate 
.I 1312
recursion iterate 
.I 1313
construction nonlinear programm test problem 
.I 1314
organize symbol table efficient symbol table organize important feature design compiler dur construction virginia algol compiler burroughs primary considerate symbol table design recognition identifiers reserve word rapid general feature technique describ 
.I 1315
automate radioisotope accountable system radioisotope service veterans administrate hospital omaha nebraska system radioisotope accountable year procedure satisfactory time consum convert fully automate computer system january program purchas radioisotope written format fortran ibm computer program maintain accountable reactor create radioisotope written forcom programm language minimum amount bookkeep requir reactor operate staff unit state atomic energy commission regulations record system provide detail record container radioactive material purchas andor create triga reactor amount receive andor transferr health physicist disposal consolidate record total amount receive andor dispos specifi period time purchas radioisotope report millicury reactor create radioisotope microcury 
.I 1316
bessel function kind algorithm 
.I 1317
poisson charlier polynomial algorithm 
.I 1318
arccossin algorithm 
.I 1319
crout equilibrate iterate algorithm 
.I 1320
inverse permutate algorithm 
.I 1321
outreal algorithm 
.I 1322
netflow algorithm 
.I 1323
correspondence algol churchs lambda notate part paper describe semantic algol formalize establish correspondence expression algol expression modifi form churchs notate model computer language compute behavior describ bas notion function applicate function abstraction analogues imperative language feature model abstract object language algol mapp algol feature emerge arrangement small number structural rule suggest classifications generalizations correspondence describ informal mainly illustrations part paper give formal description abstract compiler abstract objct language present pure function notate applicate abstraction 
.I 1324
answer english question computer survey fifteen experimental english language question answer system programm operate describ review system range conversate machine program make sentence picture system translate english logical calculi system classifi list structur data bas graphic data bas text bas inferential principle method operation detail discuss conclud data base question answer pass initial research early developmental phase difficult important research question advancement general purpose language processor seen concern measur deal ambiguity translate formal language search large tree structure 
.I 1325
remote line real time computer diagnosis clinical electrocardiogram present paper report hardware software system configurate function system remote online real time digital computer diagnosis clinical electrocardiogram effort sort lead satisfactory solution problem automatic diagnosis electrocardiogram attempt author extend diagnostic capability present system concern increas fidelity adaptive match filter development dimensional pattern analysis analysis parallel electrocardiographer computer diagnostic interaction study introduc major tree branch decision early diagnostic process 
.I 1326
boundary network feasible computer procedure describ determin total partial inclusion arbitrarily point line respect set general polygonal domains partition plane bound region scheme computer representate boundary domains algorithm bas scheme evaluate inclusion relation specifi detail method employ level selection criteria purpose reduc number access auxiliary storage device amount boundary data process requir 
.I 1327
decision table computer programm decision table tabular form display decision logic decision table inherent advantage technique illustrate puts advantage enable program direct decision table technique bas create binary image limit entry decision table computer memory binary image set input condition create data image scan decision table image arrive proper course action advantage gain programm point view amount computer memory drastical reduc programm simplifi documentate clear 
.I 1328
remark reduc truncate error 
.I 1329
simulate boolean function decimal computer 
.I 1330
automate plott flow chart small computer 
.I 1331
code structure protection manipulate variable length item item made variable number character number bit control informate partition symbol insert mark separations error identificate control character lead trouble method protect symbol bit code assignment alphanumeric character fix word length computer suitable error detection variable length item manipulate shown flexible dur arithmetic operation 
.I 1332
subroutine assemble description assemble system require pass maintain table informate subroutine library 
.I 1333
reduc truncate error cascad accumulators accumulate large number quantity numerical integrate sum larger individual addends result truncate error error eliminate cascad accumulators recent article wolfe simpler slight flexible algorithm present deal case negative addends 
.I 1334
mechanize tedious algebra newcomb operators planetary theory computer program written generate table formula newcomb operators planetary theory newcomb operators express polynomial variable stand simple differential operate arbitrary integer polynomial generate recurrence scheme program cod fortran simple array manipulate technique perform algebraic operation formula newcomb operators produc program typeset photographical photon system 
.I 1335
character set optical character recognition propos american stand ard 
.I 1336
npl highlights programm language 
.I 1337
euler generalize algol formal definition 
.I 1338
addition comment problem concurrent progamm control 
.I 1339
contribution development algol 
.I 1340
multiplex slow peripheral philosophy monitor allow slow output device multiplex present 
.I 1341
level computer system build computer system tend break level control command communicate system break problem correspondingly continu structure raises question effect usefulness future system regard trend time shar parallel programm eventual system learn essay question pos general attitude take pursu problem discuss 
.I 1342
transportate problem algorithm 
.I 1343
havie integrate algorithm 
.I 1344
statistical computation bas algebraical specifi model bas machine readable statistical model relate symbolic specifications efficient method perform calculation statistical model balanc complete nature present fixes mix random analysis variance model consider procedure obtain variance component calculate statistics model term includ 
.I 1345
tensor calculation computer formac program written capable calculate quantity interest tensor calculus code christoffel symbol calculate basic orthogonal coordinate system 
.I 1346
applicate process equalize maxima obtain ration approximate modifi bessel function remes algorithm original establish polynomial converge approximate function ration result known domain show efficient algorithm obtain approximations small error polynomial case approximate nearly approach direct series development aim paper investigate limitations applicable extension algorithm case approximations ration present numerical result 
.I 1347
general time vary system error sensitivity program evaluate propagate variance technique sensitive time vary system initial condition parameter error involve determinate system dependent partial derivative matrices requirement separate program system investigate program utilize wengert differentiate technique automatical determine requir matrices specific system equations suppli subroutine form execution time eliminate ne individualize program presag development extreme general computer program 
.I 1348
flowtrace computer program flowchart program flowtrace system produce flowchart program written programm language describe syntax control statement language purpose metalanguage resultant object deck flowchart program language describ fap snobol flowchart confine scope exist language define language structur manner feature desirable chart comment program approach permit documentate descriptive remark avoid inclusion cod detail 
.I 1349
comput capability western european university report author trip university western europe summer give description comput activity institution visit present equipment capability vary moderate large scale institution plan acquire complex time shar system future author opinion state art lag continent lag attribut principal factor handicapp organize academic procedure university government financial relationship subordinate organize comput facility paucity professional interchange knowledge effect constraint explicate 
.I 1350
augment predictive analyzer context free language relative efficiency proven greibach context free grammar standard form grammar construct generate language generate rule form cy ym yi intermediate symbol terminal symbol predictive analyzer harvard standard form grammar accept language context free grammar equivalent standard form grammar structural description sdgsx assign sentence predictive analyzer usual structural description sdgx assign sentence original context free grammar derive section algorithm original due abbott describ standard form grammar rule standard form supplement addition informate describ derivate original context free grammar technique perform sdgsx sdgx transformate effective describ section augment predictive analyzer pars algorithm arbitrary context free language compar pars algorithm selective top bottom algorithm similar irons error correct parse algorithm constituent analyzer extension sakai cockes algorithm normal grammar comparison bas criteria efficiency cover core storage requirement complexity program process time 
.I 1351
automatic error bound real ration function procedure implement interval arithmetic version newton raphson method propos procedure require start interval ration function locate method automatical provide bound roundoff error 
.I 1352
automatic integrate function parameter efficient method automatic numerical integrate romberg integrate adaptive simpson integrate integrands form fxgxa parameter shown romberg method efficient fortran program show achieve greater efficiency 
.I 1353
technique automatic tolerance control linear programm technical note numerical step simplex method linear programm review tolerance need numerical procedure defin objective criteria accomplish numerical step method calculate tolerance 
.I 1354
conversion decision table computer program rule mark technique rule mask technique method convert limit entry decision table computer program recent discussion suggest circumstances preferr technique construct network tree drawback technique hitherto present liable produce object program longer run time paper modificate technique discuss take account rule frequency relative time evaluate condition material improve object program run time 
.I 1355
regular coulomb wave function algorithm 
.I 1356
havie integrate algorithm 
.I 1357
examinate schedul algorithm 
.I 1358
syntax macro extend translate translate approach describ allow extend syntax semantic high level base language formal call syntax macro syntax macro define str transformations bas syntactic element base language type macro discuss condition generate macro bas option alternative recognize scan describ 
.I 1359
data filter appli informate storage retrieval applications manipulate data strings complex process function informate storage retrieval applications data str manipulate discuss context interpretive process environment controll procedural directives sequence procedural directives derive job assum express user orient source language data str structur data environment data bank explicit implicit relate format declarate resid format library process mechanics associate data str manipulate develop accordance generalize data filter concept result implementate part data filter module satisfy internal process function filter data strings format declarations associate input output port 
.I 1360
description system data transmission asa tutorial 
.I 1361
rectangular holes twelve row punch card propos american standard 
.I 1362
code extension ascii asa tutorial american standard code informate interchange ascii number control character associate principle code extension representate informate direct represent mean character code manner character previous complete describ paper present set mutual consistent philosophy regard code extension applications suggest corollary set doctrines applicate code extension character distinctions drawn code extension concept graphic substitution syntactic representate meet similar requirement cover topics truly concern code extension link discussion code applications material paper equal applicable principle propos iso internation bit code informate interchange 
.I 1363
general method systematic interval computate numerical integrate initial problem procedure continuous comput monitor step size start th order numerical integrate method solve initial problem procedure estimate truncate error calculate step size 
.I 1364
mathematical experimentate time lag modulate equations form dudt gutuht arise number scientific context author point interest property solution ut ut ksinwtsinat property obtain mean numerical solution 
.I 1365
eliminate monotonous mathematics formac formac formula manipulate compiler programm system provide powerful tool perform mathematical analysis extension fortran iv permit computer perform tedious algebraic computation arise field area successfully differentiate complicate expression expansion truncate power series solution simultaneous equations literal coefficient nonlinear maximum likelihood estimate tensor analysis generate coefficient equations keplerian motion type analysis arose solution specific practical problem physics engineer astronomy statistics astronautics discuss paper addition usage specific problem solution formac automate analysis phase production programm applications present 
.I 1366
computer simulate discussion technique comparison language purpose paper present comparison computer simulate language involve compar software package digital computer discuss part issue obvious user digital computer choose language write substantial cost occur train implementate computer time inappropriate language chosenmore computer simulate language develop comparison evaluations exist language designer implementers user part devot computer simulate simulate language computation characteristic simulate discuss special attention paid distinction continuous discrete change model part iii present detail comparison simulate language package simscript clp csl gasp cpss sol characteristic summarize series table implications analysis designer language user implementers develop conclusion paper package computer simulate offer feature general purpose package analysis strengths weakness suggest future simulate language package improve 
.I 1367
character structure character parity sense parallel bit data communicate ascii propos american standard 
.I 1368
systematic generate hamiltonian circuits combinatorial matrix direct nondirect arcs paper describe computer program generate systematical exhaustive hamiltonian circuits specific applicate made travel salesman problem 
.I 1369
half rotation dimensional euclidean space iterative procedure describ determin half rotation dimensional euclidean space method variant cyclic jacobi procedure utilizers elementary plane rotation obtain half rotate matrix numerical 
.I 1370
linear equations exact solution algorithm 
.I 1371
logarithm gamma function algorithm 
.I 1372
direct search algorithm 
.I 1373
gamma function gamma function range reciprocal gamma function real argument gamma function logarithm gamma function algorithm 
.I 1374
evaluate determinant determinant evaluate algorithm 
.I 1375
function minimize algorithm 
.I 1376
modifi graeffee method algorithm 
.I 1377
pseudo random number algorithm 
.I 1378
pseudo random number algorithm 
.I 1379
final solution dangl algol relate language dangl problem consist class potential ambiguity algol condition statement basic form boolean expression basic statement difficulty lie attach exist solution problem ambiguous unnecessarily restrictive let sand statement define clos statement open statement uncondition statement clos statement open clos condition statement defin syntax equations preserve openness closure case preced clos statement shown syntax equations unambiguous change statement type requir syntax equations lead ambiguity unnecessary restriction 
.I 1380
simula algol bas simulate language paper introduction simula programm language design provide system analyst unifi concept facilitate concise description discrete event system system description serve source language simulate program simula extension algol important concept quasi parallel process 
.I 1381
impact computer undergraduate mathematics curriculum computer permit widespread applicate mathematical idea requir computate science technology extreme significant understand society student interest development intense properly utilize yield understand mathematical concept idea programm logical structure introduc field computer present paper suggest portion undergraduate mathematical curriculum preparate mathematics person professional mathematicians modifi include extension clarifications computer early introduction programm desirable permit continu automatic computate illustrate clarify mathematical concept follow calculus equate stage intensive introduction numerical analysis add curriculum addition provid competence comput technique permit sophisticate utilize advanc mathematical idea associate complex variable transform theory 
.I 1382
desir computer impact undergraduate mathematics matters relate theme symposium discuss author examine projections concern supply demand mathematicians unit state mid comment briefly factor influence professional activity appli mathematicians year discuss broad term informate relate undergraduate train mathematicians 
.I 1383
implications digital computer educate mathematical science digital computer profoundly alter definition interest mathematics importance appli logic human affairs chang existence logical engine result longer think term single discipline mathematics term complex mathematical science 
.I 1384
mathematics undergraduate computer scientist mathematical requirement undergraduate program computer science subject debate associate comput machinerys curriculum committee believe requirement essential mathematical content physical science undergraduate program committee believe requirement assure student broad mathematical background enable take wide variety course scientific discipline committee concern develop solid scientific approach computer science 
.I 1385
computer technology communist china bas informate translations communist chinese item periodical literature period computer technology china review follow headings initial plann organize education aspects computer technology automate machine development progress major specific machine soviet aid vacuum due withdrawal soviet aid presumable chinese made machine present computer applications trend automate control production process data process yun chou hsueh science operate programm campaign dur attempt made br concept linear programm ordinary chinese workers peasants communist china adjudg marginal computer capable machine probable binary nature turn point reach mid 
.I 1386
symbolic factor polynomial variable algorithm find symbolic factor multi variate polynomial integer coefficient present algorithm extension technique kronecker proof prime factor polynomial found finite number step algorithm consist factor single variable instances polynomial kronecker method introduc remain variable interpolate technique implement algorithm discuss algorithm promise sufficient power efficient online system symbolic mathematics 
.I 1387
solution system polynomial equations eliminate eliminate procedure describ william cod lisp formac solve system polynomial equations found method effective case small system yield solution ne initial estimate method solution large system equate due explosive growth intermediate equations hazards arise coefficient truncate comparison made difficulty found problem non numerical mathematics symbolic integrate simplificate 
.I 1388
automast automatic mathematical analysis symbolic translate procedure numerical solve system ordinary differential equate shown generate symbolic solution procedure bas finite taylor series expansion include estimate error final result computer program describ read system equations generate expansion dependent variable expansion determin symbolical non numeric parameter original equations carri automatical final expansion exact influence parameter problem solution easily display 
.I 1389
programmer description bell telephone laboratory low link list language pronounc programm language list structure manipulations facility underlie list processor ipl lisp comit ad snobol permit user closer machine code order write faster runn program storage efficient build wider variety link data structure 
.I 1390
convert programm language describ applicable problem convenient describ transformate rule meant pattern prescrib associate skeleton series pair search pattern found matches expression transform condition match govern code allow subexpression identifi eventual substitut correspond skeleton primitive pattern primitive skeleton describ principle allow elaborate complicate pattern skeleton advantage language allow apply transformate rule list array easily strings pattern skeleton defin recursive consequence program state concise 
.I 1391
computer experiment finite algebra medium scale programm system written mad fap ibm manipulate object modern algebra finite group map set map subset set subset constant integer truth design operate time shar environment system serve teachers aid undergraduate student modern algebra work scientist engineer wish familiarize subset 
.I 1392
experience formac algorithm design facets design implementate mathematical expression manipulate algorithm discuss concrete provid formac expand differentiate algorithm basic formac utility routine experiment extraction skeletal structure expression recurrent theme ne avoid excessive intermediate expression swell order minimize core storage requirement detail formac implementate present attempt made stress principle idea general relevance design algorithm manipulate mathematical expression 
.I 1393
pm system polynomial manipulate pm ibm program system formal manipulate polynomial number variable integral coefficient unrestrict size formal operation perform system sum difference product quotient derivative substitution greater common divisor pm bas refco iii list process system describ compar lisp slip system pm subroutine arithmetic large integer describ constitut independent subsystem pm compar alpak system respect includ choice canonical form polynomial algorithm polynomial greatest common divisor calculate mention exaples includ illustrate superiority 
.I 1394
computate algebraic property elementary particle reaction digital computer large number calculation high energy elementary particle physics involve manipulate complicate algebraic expression tensor noncommutative matrix quantity calculation take month complete operation involve follow straightforward rule paper program describ develop lisp solve problem manner problem encounter outlin representate computer discuss present month human work take fifteen minute ibm limitations present system future plan outlin 
.I 1395
implementate ambit language symbol manipulate description implementate technique replacement rule ambit programm language algorithm ambit scan applicate algorithm applicable members family str transformate language ambit member provide rationale design ambit language 
.I 1396
survey formula manipulate field formula manipulate survey attention specific capability differentiate integrate support capability simplificate display inputoutput edit precision arithmetic general system batch online describ final program solve specific applications discuss 
.I 1397
proceedings acm symposium symbolic algebraic manipulate acm symposium symbolic algebraic manipulate brought hundr people interest programm language design manipulate algebraic formula symbol strings applications algorithm implementate twenty paper present follow live panel discussion future direction meetings arrang interest group conference sponsor acm special interest committee symbolic algebraic manipulate program committee consist chairman jean sammet paul abrahams thomas cheatham max goldstein douglas mcllroy conference arrangement made lewis clapp daniel bobrow james griesmer robert floyd editor 
.I 1398
robot data screen solution multivariate type problem biological social science approach outlin solution type multivariate problem found usual biological social science medicine approach logical statistical criterion variable group deterministic model algorithm develop variable analysis eliminate criteria acceptance variable terminate search process derive informate theory 
.I 1399
top bottom recognition left recursion procedure obtain structural description context free grammar perform recognition accord strongly equivalent left recursion freegrammar effect allow null strings rewrit rule discuss 
.I 1400
free text input utility routine simple technique frequent produce program accept free text input technique discuss relate general tape manipulate routine 
.I 1401
quasilinearize calculate eigenvalue eigenvalue problem system ordinary differential equations consider resolve computational quasilinerize technique quadratical convergent successive approximate scheme relate newton raphson kantorovich method 
.I 1402
partial step integrate partial step integrate equate derive adams adams bashforth method integrate differential equations method obtain function point intermediate integrate point yield accuracy comparable integrate require stor addition informate interpolate method 
.I 1403
method find smallest monotonic function defin order set positive integer minimum monotonic increas function defin partial order set assum set minimal point observate devise efficient method find smallest function monotonic function defin order pair positive integer method easily extend include monotonic function defin order tuples includ fortran program written implement procedure important case 
.I 1404
computation aspects multiple covariance analysis multifactor structure computation procedure analysis multiple covariance statistics discuss reference analysis variance special operate calculus develop hart programm analysis variance multifactor experiment extend cover analysis covariance extension accomplish utilize connection analysis covariance analysis variance introduc operate result illustrate numerical analysis covariance basic computation shown carri analysis variance program 
.I 1405
matrix triangulate integer arithmetic algorithm 
.I 1406
solution simultaneous linear diophantine equations algorithm 
.I 1407
confidence interval ratio algorithm 
.I 1408
eschenbach drum scheme prime function drum operate real time perform access quickly usual mean increas capacity incorporate engineer hardware improvement paper problem attack chang drum modify manner operate outset drum function definition simple design scheme eschenbach introduc enormous increase rate access drum defin shown enable system perform job employ fewer expensive drum suggest design scheme specific method underly general applicable question efficacy drum scheme rais deal standard efficiency develop light realistic real time circumstances drum scheme modell manner permit analyz problem queue theory enable ascertain drum scheme efficient applicate analysis drum scheme specific method underly general applicable 
.I 1409
nebula digital computer mc glass delay line memory oregon state university design construct medium spe serial digital computer glass delay line circulate mc memory design objective original conceive special seminar research project computer design usable education machineand easily modifiable hardware basic research computer system design unusual arrangement informate mc memory allow simple interface kc arithmetic unit result effective latency time provide possibility associative memory arithmetic unit command structure similar large parallel machine flip flop arithmetic control register hardware development aim concept easy modificate elaborate console control effective man machine interaction low cost 
.I 1410
interarrival statistics time shar system optimize time shar system performance require description stochastic process govern user input program active paper provide statistical description user input process sdc arpa general purpose time shar system tss input process assum stationary defin interarrival time distribution data obtain justify satisfactorily common assumption interarrival time serial independent data justify rough approximate usual assumption exponential distribution interarrival time satisfactory approximate data obtain biphase triphase hyperexponential distribution 
.I 1411
comparison algorithm computate mean standard deviations correlate coefficient algorithm computate basic statistics compar performance systematical generate test data statistics calculate mean standard deviate correlate coefficient statistic algorithm includ usual comput formula correction due accumulate error term recursive computate statistic usual comput formula evaluate double precision large error calculate usual comput formula reliable technique correction initial estimate accumulate error term eliminate ne mak pass data suggest initial estimate mean obtain subset data 
.I 1412
bank informate system concept large commercial bank progress point major account applications automate sophisticate usage data process equipment sought coupl equipment suit real time direct access processinghas development bank central data base approach bank informate system bank informate system serve fold purpose provid real time response inquires individual account stasus provid complex combination informate management kind process draw common store data direct access central data base include indexes facilitate cross referenc account informate relationship bank customer discern introduc bank informate system concept gradual approach account cross referenc conversion prudent general system interface computer applications exist bank 
.I 1413
vision technology educate education technology fashionable branches aspects technology change generate known idea discovery inventions unknown potential actual time scale ignorance stems large ignorance social response potential technological change object paper present vision potential education technology raise question mode social response adaptate evok vision 
.I 1414
twelve row punch card code informate interchange propos american standard 
.I 1415
automatic derivate microsentences decomposition long complex english sentence shorter kernel constituent sentence microsentenceshas suggest avenue conduct automatic retrieval natural language message explore prospects step author attempt prepare general program derive microsentences longer sentence syntactical analyz harvard multipath analysis program basic idea extract subject verb object clause reassemble material grammatical microsentence program describ paper design operate tree structure output analyzer microsentence produc exhibit author conclude microsentence qual achieve open prospects improve performance automatic message retrieval system practical man machine system human monitor select preferr syntactic interpretate sentence 
.I 1416
fortran technique simplify input report generators typical report generators allow production standard form tabulate magnetic tape extraction nonstandard set informate suitable annotate involve troublesome form design method informate extraction involve calculate suitable fortran format statement combat problem describ 
.I 1417
economy scale ibm system cost function system model analyz examinations instruction time program kernel typical instruction mix comparison made data develop groschs law applicable data sizable economy scale unquestionable present comput equipment 
.I 1418
examinate schedul algorithm zh 
.I 1419
chebyshev quadrature algorithm 
.I 1420
uniform pseudorandom number generate multiplicative congruential pseudorandom number generate discuss modulus largest prime accumulate capacity multiplier primitive root prime generate pass usual statistical test addition significant bit random significant bit property generators modulus possess 
.I 1421
contribution development algol programm language similar respect algol incorporate large number improvement bas year experience language describ detail part consist introduction language summary change made algol discussion motives vision part ii rigorous definition propos language part iii describe set propos standard procedure language includ facility inputoutput 
.I 1422
eleven sixteenths inch perforate paper tape propos american standard 
.I 1423
simple algorithm comput generalize inverse matrix generalize inverse matrix important analysis provide extension concept inverse apply matrices applications numerical analysis wide exist algorithm fairly complicate require considerable storage space simple extension found convention orthogonalize method invert non singular matrices give generalize inverse extra effort addition storage requirement algorithm give generalize inverse matrix includ special case mn non singular case mn ranka case algorithm give ordinary inverse case algorithm yield ordinary square transformate matrix invaaa advantage avoid los significance result form product aa explicit 
.I 1424
automatic analysis electronic digital circuits list process mapp black diagram digital circuits list structure describ list process program written control data mapp automatical carry circuit analysis 
.I 1425
flow diagram tur machine language formate rule part paper flow diagram introduc represent inter al mappings set diagram decomposable finite number base diagram true semantical level due suitable extension set basic mappings defin normalize method flow diagram base diagram part paper method appli theory tur machine tur machine provid half tape associate similar machine essential job work tape obtain interspers alternate blank square machine belongs family introduc generate composition iterate machine family proper subfamily family tur machine 
.I 1426
simulate hospital admission policy study describ simulate admission policy large specialize hospital objective determine policy stabilize admission census rate maintain reasonable full hospital type policy examin admission bas percentage discharge rate discharge rate minus constant fix authorizations independent discharge rate type policy produc stable simulate result put practice improvement realize 
.I 1427
simulate radioisotope scan computer radioisotope scann field assum increas importance medical diagnosis scan dimensional pattern made dots area increas source active represent scan area increas dot density study output scanners characteristic program simulate radioisotope scan written pdp computer auxiliary disk storage cathode ray tube display past present research output simulate shown flexible system important structure program simulate output quantum limit system 
.I 1428
shock iii computer system aid management critical iii patient shock iii online digital computer system assist physician nurse paramedical personnel monitor report critical ill patient describ 
.I 1429
matrix reduction hungarian method generate school timetable applicate kuhns hungarian method problem matrix reduction need gotliebs method timetable generate describ method suit hand computer calculate device improve efficiency basic algorithm discuss 
.I 1430
multiple precision floate point conversion decimal binary vice versa decimal binary binary decimal floate point conversion perform table power ia positive integer convert base base table coefficient polynomial approximate convert base base table occupy large storage region case nonsingle precision conversion paper show single small table suffices floate point conversion decimal binary vice versa precision 
.I 1431
storage mapp function data structure basic fact data structure review efficient algorithm present construct storage mapp function structure structure definition 
.I 1432
incorporate nonstandard inputoutput device fortran system fortran system readily modifi handle inputoutput nonstandard media basis handle standard media provid character handl subroutine suit nonstandard medium arrang call unus output statement type unit number method control output alphanumeric informate digital graph plotter 
.I 1433
note linear programm algorithm design combinatorial problem linear programm model grow bigger bigger size actual data memorize put magnetic tape disk consequent improportional fast rise consumption computer timeto cut expense increas effort made design efficient algorithm paper meant support effort attempt find characteristic pivot column found number repetition transfer data tape core memory consider simplificate problem restate general generate function probable distribution moment generate function number repetition found asymptotic formula moment result paper narumi result appli write efficient routine search extreme table formula provide mean calculate computer timings case 
.I 1434
monte carlo algorithm assign student class technique random choice illustrate applicate problem assign student fix schedule course technique reduce eliminate difficulty result popular section fill clos student request requir schedul effectiveness automatic schedul retain los student privilege pick favorite instructors 
.I 1435
design computer simulate experiment industrial system aim paper provide background informate exist literature experimental design technique applicable design computer simulate experiment industrial system major emphasis plac analysis variance technique technique data analysis consider multiple rank procedure sequential sampl spectral analysis paper treats specific experimental design problem technique solve experimental design problem problem stochastic convergence problem factor selection problem motive response problem 
.I 1436
interchange block data algorithm 
.I 1437
mutual primal dual method algorithm 
.I 1438
method locate complex function method comput index wind number develop appli problem find function plane plane 
.I 1439
mechanize curve fitt process datan process fitt curve approximate data problem create engineer programmer defin approach defin system written sru mechanize major portion process technique develop accomplish mechanize large empirical dependent informate actual data point 
.I 1440
start approximations square root calculate ibm system start approximations square root calculate newton method present form facilitate ibm system square root routine approximations include range interval primary interest ibm system 
.I 1441
method numerical integrate appli system trivial function evaluations study made determine method numerical integrate require computate time amount truncate error appli system ordinary differential equations function evaluations relative trivial recent method due butcher gear compar classic runge kutta kutta nystrom adams method newer step method due butcher found slight superior method found great advantage applicate problem 
.I 1442
record magnetic tape informate interchange cpi nrzi propos american standard 
.I 1443
method find square estimate intersection point helices space helical trajectory charg particle move common point magnetic field reconstruct measurement track reconstruct track perturb measurement error general intersect method adjust reconstruct track square manner intersect 
.I 1444
algorithm generate projective reduction formula matrix element electron wavefunctions algol procedure automatical generate formula matrix element aris variation solution schrodinger equate electron system 
.I 1445
computer teach introductory statistic obvious aid calculate offer computer force change curricula mathematics statistic physics engineer course obvious pedagogic aid computer offer teach subject matter possibility give student technical conceptual understand statistic explor number year college medicine university cincinnati report 
.I 1446
chebyshev quadrature algorithm 
.I 1447
abscissas weight gregory quadrature 
.I 1448
abscissas weight romberg quadrature algorithm 
.I 1449
derivative algorithm 
.I 1450
simultaneous displacement polynomial root real simple algorithm 
.I 1451
runge kutta integrate algorithm 
.I 1452
kutta merson algorithm 
.I 1453
nonrecursive method syntax specificate kleene regular expression notate describ algebraic language syntax algol describ paper fortran ii computer program carry eliminate algorithm gornsimilar gaussian eliminate linear system algebraic equations describ appli numerous smaller language includ sublanguage algol hand calculate result applicate algorithm algol express revis algol syntax complete nonrecursive term context free portion concern description intuitive understood previous recursive description suggest paper include result machine program include simplificate algorithm 
.I 1454
simple user orient compiler source language programm automatic test equipment nonprogrammer difficulty language increase rapidly number nonproblem orient convention simple language inelegant consider user background part problem effective source language subtle powerful capability language describ paper write computer program test electronic equipment test process complex idea ne elegance redundancy highly syntax orient language simple direct language suffice problem eventual user language military depot personnel expect computer programm skill significant programm train nonprogramm orient user essential create language familiar engineer statement programm orient convention unnecessarily complicate task 
.I 1455
trac procedure describ language reactive typewriter description trac text reckon compil language process algorithm trac language develop basis software package reactive typewriter trac language write procedure accept nam stor character str typewriter modify str treate str time executable procedure text print str trac language bas extension generalize character strings programm concept macro able trac accept store definition procedure capability language indefinite extend deal character strings integer boolean vector variable 
.I 1456
storage retrieval aspects mean direct graph structure experimental system lisp make conceptual dictionary describ dictionary associate english word syntactic informate definition material reference context define word relation class inclusion possession active passive action definition material result structure serve powerful vehicle research logic question answer method inputt informate answer simple english question important conclusion lisp list process language ideal suit produc complex associative structure inadequate vehicle language process large scale east auxiliary memory continuous extension core memory 
.I 1457
data manipulate programm problem automatic informate retrieval automatic informate retrieval program require manipulate variety data structure includ linear text sparse matrices tree list structure main data manipulations perform automatic informate system briefly review variety data representations describe structur informate examin characteristic process language outlin light procedure requir implementate advantage programm language retrieval applicate examin suggestions made design programm facility aid informate retrieval 
.I 1458
online programm transition made line online programm number change work condition change environment make correspond change process relate produc check program main programm language chang provide facility online user system surround programm language paper online environment effect programm discuss 
.I 1459
requirement real time language real time language requirement programm language special nature applications environment object program execut environment compil language extension ultimate advance development field progress made attack special compil execut system problem solve 
.I 1460
evolution meta assemble program generalize assembler call meta assembler describ meta assembler defin factor contribut evolution present meta assembler made function assemble program describ final implicate meta assembler compiler design discuss 
.I 1461
discussion summary operate system 
.I 1462
multilevel operate system basic software newer computer built establish ne standard operate system imply applications matter large complex time consum operate precise top standard system large applications require supervisory monitor handle problem similar operate system level fourth level requir desirable lead natural concept multilevel system similar vertical horizontal proper division responsible level lead greater efficiency logical complexity actual enhanc capable 
.I 1463
extensible machine salient characteristic extensible machine em facility provid system control program program program data linkage address connection intent paper expand clarify remark concern program program program data linkage embodi author previous paper em concept final trace employment linkage mechanism level programm language 
.I 1464
algol compiler construction relate elaborate operate system algol translate prepar integrate ibsys operate system assemble feature ibsys permit execution option listings deck debugg informate chain feature ibsys link written map fortran algol call algol main program addition procedure cod map includ algol program assemble load time exceed compilate time total time satisfactory user ease facility fully compensate 
.I 1465
program translate view general data process problem efficiency dictate effectiveness compiler increas mean compiler substantial life need clear logical structure reliable sound data process technique compiler bas fix convention preserve efficiency reliable empty option default convention violate dictum structure associate part program economy feature promote clarity reliable 
.I 1466
discussion summary graphical language 
.I 1467
graphical servicesystem variable syntax man machine interaction field endeavor great facilitate future interactive graphical language provide variety display scope communicate procedure graphic service system function generalize graphical language translate develop aid definition graphical language 
.I 1468
syntax direct interpretate class picture descriptive scheme class picture bas label technique parallel process algorithm propos author year ago work apply bubble chamber picture parallel process simulate original written ibm system rewritten cdc system paper descriptive model consider specific applicate bubble chamber picture description generate phase embedd larger conversate program explain mean specific work partial generative grammar handwritten english letter computer generate output grammar parallel process simulate mention earlier 
.I 1469
programm language family unimplement comput language describ intend span difference applicate area unifi framework framework dictate rule user coin convention characterize function relationship framework design specific language splits independent part choice written appearance program general physical representate choice abstract entity number character strings list function relation referr language system bias expression statement include nonproceduralpure function subsystem aim expand class user need met single print instruction sacrific important property make convention hand side expression easy construct understand 
.I 1470
structure programm language follow identifi major component programm language elementary program statement mechanism link elementary statement mean program obtain data input alternative form component describ compar evaluate frequent list process language illustrate form describ elementary program statement usual take form command requirement implicit specifications command imperative statement command action requirement describe effect achieve say anyth action implicit specificate similar requirement programmer understand action achieve desir effect subroutine enter explicit execute call function composition explicit call subroutine general require special linkage convention execute subroutine call syntactical indistinguishable basic instruction programm language function composition convenient alternative explicit call principal gett input routine referr data referr data referr implicit mean variable function entry point permanent data structure error caus distractions context author discuss advantage disadvantage factor influenc choice form component language conclude suggest evolution programm language permit convenient structur program organize system referenc data 
.I 1471
programm semantic multiprogramm computation semantic defin number meta instruction perform operate essential writ program multiprogramm computer system meta instruction relate parallel process protection separate computation program debugg shar user memory segment comput object hierarchical structur language sophisticate contemplate midway assemble language advanc algebraic language 
.I 1472
description high capacity fast turnaround university comput center operate system univac case institute review system interest low turnaround time achieve high throughput achieve lack operate staff turnaround time minute job volume quarter year report 
.I 1473
stable fourth order runge kutta method solution system differential equations problem region stable fourth order runge kutta method solution system differential equations studi region characterize mean linear transformate clos form paper region determin electronic digital computer 
.I 1474
test probabilistic model propagate roundoff error prolong computate general assum accumulate effect roundoff error sense statistical purpose paper give precise description probabilistic model roundoff error describe series experiment test validity model conclud model general good discrepancy rare mild test technique experiment type special arithmetic 
.I 1475
dribble post master business applications employ sequential magnetic tape random access storage technique process small number transactions voluminous master situations prove economical avoid create master dur update run produc dribble ledger master account experienc active 
.I 1476
control procedure data communicate asa progress report section committee american standard associate charg task group responsible define function control requirement characteristic govern operate digital data generate receive system interconnect communicate system effort primarily direct system employ american standard code informate interchange ascii paper represent progress report work group proposal nation internation standardize field control procedure describe work task group work present detail work present earlier paper control procedure data communicate task group document transparent mode control procedure data communicate task group document december comm acm apr control procedure data communications task group document march retain summary form concept principle describ submitt internation organize standardize earlier paper embodi work paper organize 
.I 1477
euler generalize algol formal definition part ii 
.I 1478
exponential curve fit algorithm 
.I 1479
constrain exponential curve fit algorithm 
.I 1480
computate chebyshev series coefficient algorithm 
.I 1481
graph plotter algorithm 
.I 1482
bugsys programm system picture process debugg bugsys picture process measur system depend pictorial input computer memory bugsys type applications author system analysis linear graph main concept system collection programmable pointer visualize family bugs 
.I 1483
comparison fortran language implementate computer feature feature comparison made implementations fortran iv represent manufacturer table construct show feature implementate item add fortran ii shown 
.I 1484
language describ function synchronous system design system start exact function desir specifi suggest computer orient language purpose inadequacy standard programm language description system discuss dialect algol suitable describ synchronous system introduc description simulate automatic design system describ addition communicate system specifications 
.I 1485
structure programm language paper major component programm language identifi elementary program statement mechanism link elementary statement mean program obtain data input alternative form component describ compar evaluate frequent list process language illustrate form describ advantage disadvantage factor influenc choice form component language discuss paper conclude suggestion programm language evolve permit convenient structur program organize system referenc data 
.I 1486
reprogramm machine paper description model programm system direct programm language library stor user item rule transform program written language rearrang item library share common part speculations made mechanical detection common part pattern library item help user solve problem relationship behavior reprogramm machine human intelligent behavior 
.I 1487
eliza computer program study ofnatural language communicate man machine eliza program operate mac time shar system mit make kind natural language conversate man computer input sentence analyz basis decomposition rule trigger key word input text response generate reassemble rule associate select decomposition rule fundamental technical problem eliza concern identificate key word discovery minimal context choice transformations generate response absence key word provision edit capable eliza scripts discussion psychological issue relevant eliza approach future development conclude paper 
.I 1488
programm decision table fortran cobol algol simple broad bas approach programm decision table fortran cobol develop present input standard form defin paper programm decision table fortran statement cobol statement compute verb cobol processor shown method applicable mutual exclusive state table condition shown multi state condition decision table simplify programm method outlin advantage combination condition consider shown suggest procedure easily implement algol 
.I 1489
data documentate decision table business data process system able define document data program decision rule adequate represent chang informate content continuous interaction tabular description make notable objective economical cost time system analyz program prepar modifi show quickly tabular technique make unfamiliar system manageable detail test provid 
.I 1490
inch perforate paper tape informate interchange propos american standard 
.I 1491
euler generalize algol formal definition part method defin programm language develop introduce rigorous relationship structure mean structure language defin phrase structure syntax mean term effect execution sequence interpretate rule exerts fix set variable call environment exist correspondence syntactic rule interpretate rule determin sequence correspond syntactic reduction constitute parse individual interpretate rule explain term elementary obvious algorithmic notate constructive method evaluate text provid decidable class language unambiguity prove generalize algol describ full detail demonstrate concept block structure procedure parameter defin adequate precise method 
.I 1492
serrev algorithm 
.I 1493
generate hilbert derive test matrix algorithm 
.I 1494
complete elliptic integral kind algorithm 
.I 1495
solution transcendental equations series reversion algorithm develop express solution equate fy gx power series power seriesand root known yx algorithm illustrate equate yy ylny lnx 
.I 1496
formal semantic computer language applicate compiler compiler semantic meta language develop represent meanings statement large class computer language meta language basis construction efficient function compiler compiler informal discussion meta language bas complete translate small language present 
.I 1497
normalize requirement divisor divide correct method paper present analysis normalize requirement divisor divide correct method analysis made subject condition correction requir obtain true quotient character trial estimate division precision segment partial remainder suitable round single precision divisor segment division denot precision basic division found normalize requirement narrow smaller range divisor provid magnitude character lead character divisor known normalize eliminate choose proper higher precision segment operands basic division consider eliminate normalize increase number correction quotient estimate precision basic division shown scheme economical small radices 
.I 1498
alcor illinois post mortem dump dump technique program written algol describ technique provide intelligible analysis unsuccessful computate process term original source program 
.I 1499
chebyschev curve fit revis algorithm 
.I 1500
chebyschev curve fit algorithm 
.I 1501
eigenvectors matrix known eigenvalue matrix obtain smaller matrices order easily construct algorithm obtain eigenvectors matrix eigenvectors smaller matrices 
.I 1502
online editor online interactive system test edit describ detail remark theoretical experimental justificate form emphasis system provid maximum convenience power user notable feature able handle piece text content search facility character character edit operation editor programm limit extent 
.I 1503
simscript fortran case study program vehicle dispatch model written simscript fortran iv compar comparison made term basic program design decision storage requirement computer time ease mak change simscript program primary design considerations center choice model variable model chang event model test fortran program basic design problem relate representate passage time allocate storage organize input data comparison design program show simscript program computer storage computer time require fewer program change introduce model revision 
.I 1504
algorithm find fundamental set cycle undirect linear graph adjacency matrix graph algorithm present paper find spann tree construct set fundamental cycle algorithm slower algorithm present welch ratio number node require storage graph large number node edges storage limit algorithm superior welch graph small machine storage large welch algorithm superior tim estimate storage requirement method present 
.I 1505
system organize resource allocate paper introduce system resource management concept process facility event processor attempt made give suggestion policy follow resource allocate basic framework provid system analyst express solution resource management problem paper divid tutorial presentate description system primitive small collection primitive 
.I 1506
laconiq monitor time shar online dialogues laconiq laboratory computer online inquiry monitor develop primarily support non numerical applications retrieval large mean dialogue system user retrieval applicate monitor design work small computer ibm system technique resource allocate important reason core storage computation facility input output schedul unusual feature system event driven clock driven program segment call execution remote crt console invariable run completion roll brought back later time 
.I 1507
multiprogramm environment online data acquis ition analysis experimental system acquis ition analysis large bodies data derive scientific experiment describ architecture implementate large bas objective characteristic general data analysis scheme early applications orient investigate data obtain biological research problem encounter chosen approach discuss 
.I 1508
magnetic tape label informate interchange propos usa standard 
.I 1509
record magnetic tape informate interchange cpi nrzi propos usa standard 
.I 1510
find solution function equations unknown algorithm 
.I 1511
damp taylor series method minimize sum square solve system nonlinear equations 
.I 1512
solution simultaneous non linear equations algorithm 
.I 1513
permutate algorithm 
.I 1514
expect gain adjust ing match term retrieval system adjustment procedure bas maximize bayes expect gain propos match term retrieval system expect gain probable distribution derive function prior proportion omitt term coefficient separate distribution correspond adjustment statistic evaluate gain parameter typical informate retrieval system 
.I 1515
computer system inference execution data retrieval paper present rand project concern computer assistants logical analysis large collection factual data system call relation data develop purpose relation data briefly detail problem aris implementate discuss 
.I 1516
automatic data compression informate explosion recent year make essential storage requirement informate minimum fully automatic rapid part compressor body informate great reduce slow external storage requirement increase rate informate transmission computer describ paper system automatical decode compress informate item item basis requir component compressor separate accomplish specific task discuss nupak automatic compression numerical data anpak automatic compression informate iopak compression informate stor tape card 
.I 1517
method analyz data computer simulate experiment paper address problem analyz data generate computer simulations economic system turn hypothetical firm operate represent single channel multistate queue model firm seeks maximize total expect profit com period select operate plan plan incorporate market strategy allocate productive input total cost result simulate active plan subject test multiple comparison method multiple rank method illustrate compare evaluate technique paper adopt position technique analysis chosen experimenter expression experimental objective test test homogeneity plan multiple comparison method quantify difference multiple rank method direct identify plan plan 
.I 1518
experimental model system problem predict performance modern computer system formidable general technique ease problem macroscopic simulate paper report applicable technique system paper describe experimental model system hardware software environment measure system performance produc model consist statistic relate turnaround time throughput hardware utilize software utilize queue process model mechanize simscript consist statement auxiliary program job generate create automatical property system job simulate 
.I 1519
george general purpose time shar operate system operate system describ run wide variety configurations ict handle large number online console user time runn line background job system orient mode batch process system atlas supervisor ibsys gecos multiaccess system resemble user ctss multics simultaneous depend installate adjust schedulers online user line job common command language system include multilevel device independent store 
.I 1520
absolute square root complex number algorithm 
.I 1521
multi dimensional partition generate algorithm 
.I 1522
chebyschev quadrature algorithm 
.I 1523
sharer time shar system cdc time shar system embedd standard batch process system cdc describ system general purpose bas provid facility input manipulate edit compilate conversation execution simple scheme system extension machine relocate memory bound register attempt made reentrant code simulate segmentate pag implementate time approximate man year majority code written fortran 
.I 1524
stopp criterion polynomial root find search root polynomial general difficult know accept number adequate approximate root paper algorithm present allow terminate iterate process basis calculate bound roundoff error occur evaluate polynomial stopp criterion test numerous found serve satisfactory mean accept complex number real polynomial 
.I 1525
comput fast fourier transform cooley tukey propos fast algorithm comput complex fourier transform shown major time savings compute large transform digital computer power comput time algorithm proportion log major improvement method comput time proportion paper fast fourier transform algorithm briefly review fast difference equate method accurate comput need trigonometric function problem comput large fourier transform system virtual memory consider solution propos method compute complex fourier transform size computer word core storage exceed factor maximum radix transform size fix allocate amount core storage method compute large mix radix transform scal plan comput fast fourier transform fix point arithmetic 
.I 1526
multiprogramm page demand strategy model multiprogramm computer system page demand strategy develop analysis model predict performance measur average usage cpu user program typical aris interactive time shar environment effect hardware modifications analyz parameter readily calculate hardware characteristic program statistic propos gaug effect multiprogramm 
.I 1527
grammar base question answer procedure subject paper procedure automatic retrieval segment stor informate explicit implicit represent question pos natural language sentence procedure make sentence recognition device class grammar correct decide grammatical ungrammatical sentence natural language make recognition device sort follow reason data fully expressible set sentence natural language set exhaustive exclusive generate grammar bas rule grammar sentence recognize evaluate sentence question normal situate recognition function succeeds case pos question drawn set sentence express data correct grammatical term grammar set sentence sentence recognition procedure retrieve informate recognition function succeeds represent request informate 
.I 1528
fonts computer drawn letter detail description fonts letter letter shapes entire describ number basic vector general form fonts easily drawn variety computer cathode ray tube fonts include upper lower case roman letter mathematical sign upper lower case greek letter design fonts describ principal contribution paper concern fonts 
.I 1529
decomposition programm analysis matrix substructure petroleum blend problem analyz order compare primal primal dual decomposition algorithm course analysis substructure discover relevance relative performance algorithm absolute performance compar standard primal simplex solution decomposition 
.I 1530
mli macro processor general purpose macro processor call mli describ mli implement pdp ict atlas computer intend tool allow user extend exist programm language incorporate statement syntactic form choos notate allow complete user orient language built relative ease 
.I 1531
remain trouble spots algol paper list ambiguity remain language algol notic publicate revis algol report 
.I 1532
hardware software complementarity 
.I 1533
marovian model university michigan executive system mathematical model computer executive system postulate parameter estimate aid extensive data system operate simplify assumption made result predict model agree reasonable actual result model study effect change executive system compiler applications model discuss 
.I 1534
dad csiro operate system design implementate csiro operate system dad describ detail system design control data large drum back store intend allow integrate remote console display subsystem convention job stack environment drum buffer input output slow peripheral execution normal job stack work describ display subsystem describ integrate rest system technique found development dad assessment made validity design decision performance figures bas month operate tabulate 
.I 1535
comment index register allocate technique present reduce enumerate requir known procedure optimal index register allocate straight line program technique bas construction link diagram show step future occurrence indexes load index register diagram determine advance requir register configurate step program program subdivid separate portion allocate procedure appli independent 
.I 1536
dynamic computate derivative shown wengert procedure computate derivative implement convenient compiler generate complex addition subtraction linkage complex arithmetic subroutine evaluate function derivative proce parallel wengert procedure imaginary part variable declar complex bear derivative real part technique provide simple compute derivative function ne derive programm evaluate explicit formula derivative 
.I 1537
prime number generate algorithm 
.I 1538
prime number generate algorithm 
.I 1539
prime number generate prime number generate algorithm algorithm algorithm 
.I 1540
algorithm class schedul section preference algorithm assignment student class fix time schedule allow student give preference section course consistent objective balanc section preference honor algorithm stochastic monte carlo nature result compare nonpreference assignment algorithm 
.I 1541
language model simulate dynamic system general objective language facilitate model experimental aspects simulate study able represent system highly interactive process essential feature nature language role process concept present mean extend 
.I 1542
microprogramm implementate euler ibm system model experimental process system algorithmic language euler implement microprogramm ibm system model read storage unit system consist microprogramm compiler microprogramm str language interpreter io control program written machine language system describ result term microprogram main storage space requir compiler interpreter performance obtain role microprogramm stress open dimension process interpretive code structure content higher level language match interpretive language execut efficient microprogram exist computer hardware 
.I 1543
computer formulate equations motion tensor notate mean describ extend area applicate digital computer numerical data process stage reduc ne human participate formulate type computer problem tensor calculus computer language design facilitate symbolic mathematical computate method devis digital computer non numeric work symbolic algebraic manipulate differentiate illustrate technique involve digital computer derive equations motion point mass general orthogonal curvilinear coordinate system operate involve formulate term order differential coefficient provide good demonstrate computer capable non numeric work assist formulate process normal precede numerical data process stage problem serve illustrate advantage mathematical technique employ program prepar purpose computer derive equations motion coordinate system request user result present follow coordinate system cylindrical polar spherical polar prolate spheroidal 
.I 1544
tele cupl telephone time shar system general purpose remote access comput system describ employ twelve key keyboard telephone terminal audio output provid direct telephone terminal system normal conjunction remote locate high spe print device system compatible extension exist batch process system significant element system scheme transmitt alphanumeric informate single strokes numeric keyboard programm scanner context eliminate ambiguity transmission 
.I 1545
legal safeguards insure privacy computer society 
.I 1546
standard handwritten 
.I 1547
gamma function arbitrary precision algorithm 
.I 1548
pars decision table reduction size decision table accomplish technique technique consider paper pars decision table regard horizontal vertical data structure job identity hardware job priority context relationship pars rest convention linkage decision table 
.I 1549
efficient machine independent procedure garbage collection list structure method register free list essential part list process system paper past solution recovery problem review compar algorithm present offer significant advantage spe storage utilize routine implement algorithm written list language insur degree machine independence final applicate algorithm number list structure literature 
.I 1550
comparison batch process instant turnaround study programm effort student introductory programm course present effect instant turnaround minute oppos convention batch process turnaround time hour examin item compar number computer run trip computate center program preparate time keypunch time debugg time number run elaps time run run problem result influenc fact bonus point completion programm problem specifi number run evidence support instant batch 
.I 1551
compil algorithm arithmetic expression paper deal algorithm concern arithmetic expression fortran iv compiler hitac computer accumulators algorithm generate object code minimize frequency stor recover partial result arithmetic expression case accumulators 
.I 1552
free storage package fundamental underly problem sophisticate software system involve elaborate chang data structure dynamic storage allocate flexible problem model free storage package compiler system allow block storage obtain reuse total space partition hierarchy free storage zones characteristic block size special provision allow efficient handl select size control shatter garbage collection shar physical space zones routine package perform high level function automatical allow access control fine internal detail 
.I 1553
contextual understand computer development computer program eliza capable convers natural language discuss importance context human machine understand stress argu adequacy level understand achieve conversate depend purpose conversate absolute understand part human machine impossible 
.I 1554
computer technique display dimensional hyperobjects digital computer automatic plotter generate dimensional stereoscopic movie dimensional parallel perspective projections dimensional hyperobjects rotate dimensional space observe projections motion direct extension dimensional experience profound feel insight fourth spatial dimension obtain technique generalize dimension appli dimensional hyperobject hypersurface 
.I 1555
symmetric polynomial algorithm 
.I 1556
permutations repetition algorithm 
.I 1557
symmetric group character algorithm 
.I 1558
generate permutations pseudo lexicographic order algorithm 
.I 1559
permutate generate permutate lexicographical order permute generate permutations lexicographical order algorithm algorithm algorithm algorithm 
.I 1560
transport transportate problem algorithm algorithm 
.I 1561
mutual primal dual method algorithm 
.I 1562
airy function algorithm 
.I 1563
method find hamilton path knights tours warnsdorffs rule find knights tour generalize appli problem find hamilton path graph graph theoretic justificate method 
.I 1564
description basic algorithm detab preprocessor basic algorithm conversion decision table cobol code generate portion detab preprocessor generate analyze decision table produce simple cobol condition statement core storage save queue technique extensive index outputt code generate line time optimize attempt eliminate obvious unnecessary test condition decision table preprocessor language associate develop cobol user preprocessor written modular form requir cobol 
.I 1565
language independent macro processor macro processor describ source language provide feature normal associate macro facility able make arbitrary transformations argument strings program basser comput department university sydney sydney australia process text compiler 
.I 1566
optimal start newton raphson calculate sqrtx problem obtain start newton raphson calculate sqrtx digital computer consider shown conventional uniform approximations sqrtx provide optimal start problem obtain optimal start problem obtain optimal start state basic result prove table optimal polynomial start 
.I 1567
representate symmetric polynomial relation symmetric polynomial light theory symmetric group approach unify earlier work lends insight previous publish work aaron booker generalize graeffe root squar technique determinate root polynomial suggest 
.I 1568
plott function independent variable method develop construct approximate plot function independent variable plot similar convention contour map scale represent independent variable scale independent variable add vectorial function read associate nearby contour 
.I 1569
implement phrase structure production pli method describ implement production context free phrase structure grammar pli procedure structure statement parallel structure notate grammar 
.I 1570
str process technique internal organize str process system discuss technique data structure present evaluate basis create strings examinate strings alterate strings spe operate storage requirement effect pag programmer convenience consider technique single word link block demonstrate implementate snobol str process language ibm system 
.I 1571
user orient time shar online system exist system plann addition data process laboratory brain research institute ucla describ system represent attempt provide research workers institute able interact direct highly sophisticate digital comput complex direct simple fashion anticipate accumulate experience present system significant advance system design determinate interface parameter biological scientist digital computer 
.I 1572
simulate time shar system development large scale time shar system rais number problem computate center management develop hardware configurate system software adjustment made unfortunate system respond change manner intuition suggest guide assist analysis performance characteristic development comprehensive simulate model assist investigate question describ paper result model general purpose design study variety time shar system assist design development time shar algorithm technique sake efficiency greater applicable model implement limit fortran subset compatible fortran iv compiler simulate demonstrate study ibm time shar system 
.I 1573
adaptive quadrature procedure random panel size algorithm 
.I 1574
normal curve integral algorithm 
.I 1575
incomplete beta ratio algorithm 
.I 1576
eigenvalue real symmetric matrix qr method algorithm 
.I 1577
eigenvalue eigenvectors real symmetric matrix qr method algorithm 
.I 1578
generalize square fit orthogonal polynomial algorithm 
.I 1579
real error function erfx algorithm 
.I 1580
error function large algorithm 
.I 1581
complementary error function large algorithm 
.I 1582
gauss algorithm 
.I 1583
normal distribution function algorithm 
.I 1584
procedure normal distribution function algorithm 
.I 1585
normal curve integral algorithm 
.I 1586
generalize bairstow algorithm bairstow algorithm generalize case polynomial linear combinate polynomial satisfy term recursion convergence property method derive 
.I 1587
storage allocate iterative process method core storage allocate iterative process describ estimate machine time requir method applicable iterative process input data item chosen need method input data continuous relocate space made apportion output table overflow occur important special case consider considerable simplificate occur 
.I 1588
pli list process concept list process introduc pli language facility write pli procedure operate simple complex data list organization list process language suffer inable deal direct complex data structure andor inable perform complete range programm language operation data list structure problem eliminate list process facility pli basic concept list process philosophy pli language extension discuss addition detail list process provid 
.I 1589
dialog conversation programm system graphical orientate dialog algebraic language online graphical input output console device computation aid casual user provide basic facility graphical numeric input display online line program preparate storage hard copy presentate result system require minimum experience instruction growth overlay system control language prevent processor orient statement variable type dimension declarations online situate processor interact graphical keyboard character character basis restrict programmer choice input symbol syntactical correct dialog daily operate iit research institute february 
.I 1590
pitch period determinate speech sound computer procedure determine pitch period recognition peak structure speech waveform describ speech sound sampl microphone analog digital converter attach interconnect ibm pdp system utterances record normal noise level computer room band compress phase distort manner sequence operation defin speech wave select list point waveform candidates pitch markers markers validate error detection correction procedureabout percent pitch period recognize correct time real time ibm 
.I 1591
model multifunction teach system teach system model incorporate operate system large computer describ model transferr control operate system execute function teach recover control order resume teach teach system abac ii written run operate system ibsys ibm graphic system teach system automatical terminate reschedul student study course present cathode ray display terminal switch readily student mode programmer mode dur full resource operate system language processor compiler library user program disposal write assemble debug execute terminal program written language process operate system course include text material interleave programm problem student solve leave terminal exercises simulate gam provid implications teach system degree flexible industrial executive train academic educate discuss addition advantage type system computer programm operate consider 
.I 1592
str similarity misspellings problem programm computer determine str character misspell word consider numberof algorithm evaluate propos writer author technique test collection misspellings made student grade level method clearly unsatisfactory gave percent incorrect determinations 
.I 1593
simple technique digital division simple economical method digital division describ method suitable divisor lead character radix unity character equal method direct need half number arithmetic operation need variant harvard iterative method describ gilman suitable similar divisor 
.I 1594
algorithm generate permutations algorithm describ repeate applicate generate permutations element previous generate permutate constant temporary index need start order element abcd repeate applicate algorithm generate addition permutations successive rotation initial circular order object circular order obtain rotate lowest element circular order obtain rotate lowest element continu manner applications algorithm generate circular orderings circular order yield permutations algorithm generate permutations 
.I 1595
computer enumerate finite topology problem enumerate number topology form finite point set consider theoretical computational fundamental result establish lead algorithm enumerate finite topology comput result interest side result computation work unearth theoretical error induc literature computer combinatorics represent chronological early applicate side result underscores continu usefulness area 
.I 1596
airy function algorithm 
.I 1597
transpose vector stor array algorithm 
.I 1598
square fit orthogonal polynomial algorithm 
.I 1599
numerical solution polynomial equate algorithm 
.I 1600
chebyshev quadrature algorithm 
.I 1601
parallel numerical method solution equations classical iterative procedure numerical solution equations provide stage single approximate root question technique development numerical procedure provide stage approximations solution equate approximations obtain iterate computational independent mak method interest parallel process environment convergence insur extract informate iterate family numerical procedure technique procedure parallel process environment develop measurement statistic report measurement interpret parallel process environment environment procedure obtain superior standard algorithm 
.I 1602
pose language pos problem computer language pose describ drastic departure fortranalgol type utilize fortran formula logic representations actual fortran vi subset language user ne describe problem equate form method solution automatical provid conjunction translate equate form computer instruction pose language user solve difficult computation problem solution differential equate requir knowledge numerical method intricacy computer subroutine logic essential clerical operation requir fortran programm automate pose programmer ne concern detail 
.I 1603
multiprogramm monitor small machine int combinate hardwaresoftware monitor design control wide variety real time inputoutput device describ simple hardware addition provide uniform device machine interface element keyboard graphic input device interval timers software relieves user program detail inputoutput tim buffer task schedul provide parallel process capable user program communicate monitor small set meta instruction consist machine language subroutine call 
.I 1604
analysis comput center environment empirical distribution program length execution time process time load time job servic university comput center environment present data subdivid accord characteristic user job obtain select empirical condition distribution time property statistical measure interest property result interpret term property system studi 
.I 1605
experimental comparison time shar batch process effectiveness program development mit compatible time shar system ctss compar ibm ibsys batch process system mean statistical design experiment identical set programm problem assign group programm subject influence external system sequence problem solution programmer problem characteristic specifi design factor experiment data obtain variable programmer time computer time elaps time consider definitive system effectiveness analysis variance technique employ estimate system difference variable difference due design factor eliminate statistical analysis experimental result provid strong evidence important system difference critique experimental design implications experimentate 
.I 1606
chi squar integral algorithm 
.I 1607
coulomb wave function algorithm 
.I 1608
numerical integrate function pole common ne integrate numerical function diverge range integrate divergence occur integrate formula simpson depend fitt polynomial usual inaccurate pole bad method describ give formula integrate function kind accurate order position pole known explicit formula easy automatic computer shown singularity pole integral converge integrate carri singularity accuracy integrate pole order discuss formula compar simpson formula pole pole advantage overwhelm 
.I 1609
schedul university course examinations computer approach problem schedul course examinations present principle examinate schedule require minimum number examinate period satisfy constraint student requir take examinations simultaneous found step course examinations schedul period group minimum number group course includ select remove multiple occurrence course schedul group period minimal schedule obtain known algorithm carry procedure prohibitive expensive approximations ideal procedure outlin yield nonminimal feasible schedule small expenditure time result experiment technique encourag experimentate worthwhile 
.I 1610
method solution transportate problem tall matrices method present solution transportate problem cost matrix column computer implementate method show fast efficient applicate indict personnel classificate problem classical transportate problem work detail 
.I 1611
schedul project network basic concept terminology project network develop critical path algorithm incorporate proprietary schedul system ramps resource allocate multi project schedul describ error detection network analysis feature algorithm describ 
.I 1612
top bottom pars rehabilitate note concern efficiency top bottom pars algorithm connection programm language grammar shown instance retrac unprofitable path eliminate suitable rearrangement production defin grammar essential weakness method deal complicate syntactic structure practice sparse occupi arithmetic expression 
.I 1613
pass compilate arithmetic expression parallel processor assumption processor multiplicity arithmetic unit compiler processor produce object code take advantage parallelism operate present known compilate technique inadequate processor produce expression structure evaluate serial technique present compil arithmetic expression structure evaluate high degree parallelism algorithm variant call top analysis technique require pass input text 
.I 1614
proposal definition algol extension algol propos add data type operators language definition occur block head terminate block integral part program fix language behavior exist operators redefin process text defin context feature replacement rule eliminate unnecessary iterations temporary storage definition set real complex matrices complex number process list manipulate 
.I 1615
algorithm generate root locus diagram technique digital computer draw ordinary time lag root locus diagram describ ordinary diagram drawn faster accurate time lag diagram impossible obtain drawn spe accuracy ordinary diagram 
.I 1616
tensor calculation computer appendix main text paper comm acm dec formac program discuss capable calculate quantity interest tensor calculus appendix intend program output chrisoffel symbol calculate basic orthogonal coordinate system list 
.I 1617
eigenvalue eigenvectors symmetric system algorithm 
.I 1618
determinate square root positive definite matrix algorithm 
.I 1619
error free method statistical computation nee discuss computation error generate algorithm compute statistic present paper method describ error free simple concept usual cost machine time mention nee 
.I 1620
method evaluate polynomial approximations function evaluate routine method nest multiplicate commonly function evaluate routine evaluate approximate polynomial polynomial evaluate method develop recent year require fewer multiplications nest multiplicate preferable function evaluate routine method practical round error difficulty method evaluate low degree polynomial found satisfactory method describ illustrate 
.I 1621
computer typesett algol applicate computer aid typesett introduc work method describ publish algol computerize translate hardware reference representate computerize plann typographical lay computerize control typesett machine point made experts science technology programm guarante correct algol documentate spend valuable time power typographic considerations proofread 
.I 1622
efficient procedure generate clos subset efficient algorithm describ generate subset set satisfy constraint form si member subset sj member subset algorithm programm wisp language successfully run ibm connection routine detect feedback multidimensional iterative network 
.I 1623
applicate formac nonlinear circuit analysis problem state solve formac solution problem formac notable method tri fail problem straightforward untenable hand involve elaborate formac language program fairly large utilize practical command made extensive part command tricks order circumvent shortcomings formac system paper concern programm technique formac actual engineer problem reader interest problem state general mathematical sense interest area circuit analysis 
.I 1624
automatic dimension algorithm accomplish automatic storage reservate ne explicit array declarations describ 
.I 1625
automatic simplificate source language program method simplificate appli automatical program written algol language discuss simplifications bas form program knowledge obtain processor understand program suppos method implement processor call sure accept program written jovial output equivalent jovial program shorter execut faster original sure describ problem encounter automatic improvement source language level discuss type automatic program improvement suggest 
.I 1626
structure lisp system level storage ideal list process system core memory data program describ paper number technique build lisp system utilize drum principal storage medium surprisingly low time penalty slow storage device technique include careful segmentate system program allocate virtual memory allow address arithmetic type determinate special algorithm build reasonable linearize list scheme bind variable describ good environment allow complete compatible compil interpret program special declarations 
.I 1627
applicate level chang multilevel storage organize technique organize device computer storage system describ technique call multilevel store provide mean economical satisfy requirement large storage capacity data management informate retrieval system concept level chang introduc applicate multilevel store discuss mean physical organize informate efficient multilevel store present 
.I 1628
emergence profession computer programm deal enormous variety activity carri people great variety background clear part active evolve distinct professional field scope emerg profession economic social education characteristic mean defin paper issue examin opinion express 
.I 1629
stat pack biostatistical programm package package fortran statistical program small medium size character word fortran ii compiler exist describ announc major design criteria ease ease modificate flexible input detail output describ 
.I 1630
computer representate planar region skeleton region regard union maximal neighborhoods point specifi center radii neighborhoods set sort ofskeleton region storage requir represent region comparable requir represent encod boundary skeleton representate advantage determine repeatedly point inside region perform set theoretic operation region 
.I 1631
test random number generate number produc random number generate general purpose system simulate gps subject statistical test test describ result test present test number satisfactory recommend suitable test appli random number computer simulations 
.I 1632
programm tabular method analysis variance factorial experiment ease programm tabular method analysis variance complete factorial experiment fortran language demonstrate method total sum square partition orthogonal single degree freedom sum square main effect interaction sum square obtain pool single degree freedom sum square program segment accomplish procedure present modifications handle hierarchical design replicate experiment mention fortran ii program ibm describ briefly 
.I 1633
modifi newton method polynomial modifi newton method polynomial discuss assum approximations root polynomial variation describ root simple shown condition variation cubical convergent 
.I 1634
bit digit accuracy inequal conclude represent digit decimal floate point number accurate bit floate point number ne significant bit represent digit number accurate general show significant bit digit decimal accuracy final define compact bit floate point representate give significant bit number practical importance 
.I 1635
parameter pseudo runge kutta method object note present choice free parameter fourth order pseudo runge kutta method involve point choice parameter bound principal part truncate error term minimum fourth order method minimum order method 
.I 1636
invariant imbed numerical integrate boundary problem unstable linear system ordinary differential equations diverse area radiative transfer planetary atmospheres optimal guidance control point boundary problem unstable system arise great complicate numerical solution invariant imbed technique present overcom frequent encounter instability result numerical experiment 
.I 1637
problem statistical analysis simulate experiment comparison mean length sample record research continu statistical analysis simulate experiment autocorrelate time series shown estimate length sample record need large sample result measur stable analogy autocorrelate data independent observations describ test difference mean experiment suggest shown variance sample mean relate spectrum generate process estimate quantity interest describ result expand possibility statistical spectral analysis appli simulate experiment 
.I 1638
sort replacement select sort replacement select expect length sequence beginn th element prove accordance conjecture friend number memory cell expect length th sequence determin time th degree polynomial polynomial approaches approaches infinity recursive formula obtain mean standard deviate length th sequence mathematical proof result bas assumption number item sort infinite shown error due finiteness approaches rapidly increase 
.I 1639
exponential curve fit algorithm 
.I 1640
generalize squar fit orthogonal polynomial algorithm 
.I 1641
fast slow memory list process language scheme describ permitt substantial increase memory space utilize store list structur data consist reduc level nonhomogeneous store compos fast core slow disk drum memory space slow memory divid page number machine word reduction level memory perform program leave call page fast memory page slow store request page core longest period inactive transferr back slow store complete scheme implement connection lisp embedd algol ibm core memory disk gain memory space fold happens programm applications price addition space computer time disk access time time slower core test actual slow vari depend number page fast store 
.I 1642
time shar computer small memory technique make time shar attractive computer small central memory present small mean user program monitor fit memory time technique depend level secondary storage level time larger main memory fast level time larger slower level 
.I 1643
improvement iterative method polynomial factorize method polynomial factorize find time require division polynomial accept factor shown accuracy division increas divid order ascend descend power variable choos crossover point minimize simply calculate error criterion 
.I 1644
computate square polynomial round error accumulate dur digital computate square polynomial make comput polynomial approximate true square polynomial simple method adjust ing constant term comput polynomial approximate true square polynomial describ 
.I 1645
note comput approximations exponential function method discuss result minimax ration approximations exponential function time retain desirable property approximate negative argument reciprocal approximate correspond positive method lead approximations superior commonly convergent gaussian continu fraction exponential coefficient error interval ln ln ln ln 
.I 1646
ditran compiler emphasize diagnostic ditran diagnostic fortran implementate asa basic fortran extensive error check capability compilate time dur execution program ne improve diagnostic capability objective met compiler discuss attention design implementate ditran technique employ provide diagnostic feature handl error message general macro approach describ special feature provide teach aid instructors 
.I 1647
watfor university waterloo fortran iv compiler watfor core load compiler implement ibm operate system fortran iv select source language order achieve maximum language compatible compil system ibm fortran iv system principal advantage watfor compiler translate fortran iv program speeds statement compiler resides core virtual system overhead large batches student program process efficient compiler provide extensive error diagnostic dur compilate execution phase program run feature make system attractive learners learn user alike 
.I 1648
uniform random algorithm 
.I 1649
data direct input output fortran statement similar namelist statement fortran iv incorporate fortran compiler fortran implementate allow greater flexible simplicity fortran iv feature hollerith locate mode dimension variable discover mean standard fortran statement method informate illustrate relate general purpose data direct input output routine matrix manipulate discuss 
.I 1650
unify computation method analysis complete factorial experiment computation method calculate sum square analysis variance complete factorial experiment computate main effect interaction mean describ method elucidate unify method variety purpose previous requir method programm advantage method obvious follow variant discuss standard analysis variance analyses omitt level factor separate analyses level factor combination level factor perform simultaneous calculate main effect interaction mean mean expect data standard order leave data order analyses data perform rearrangement total sum square exclud replicate sum square partition polynomial partition interaction degree freedom factor unequal spac factor level 
.I 1651
interpretive input routine linear programm descriptive article input code present great simplify data input linear programm solution routine subsequent pedagogical device solve small lp problem limit derive inherent limitations code efficiency evaluate large lp problem doubtless benefit input system suit bulk data handl input code describ user standpoint input exact textbook presentate lp problem limit keypunch inable write subscript input interpreter scan column wise fix format data preparate requir user general requirement liberal editorial comment input deck aid identificate row constraint article include input output solution routine present skeleton flowchart input interpreter 
.I 1652
code non numeric informate process applications online system code specifical design simplify internal informate process operation online computer system respect non numeric applications maximize transfer rate informate channel link system system user code direct applicate problem area informate retrieval document classificate computer aid teach text edit code call ipc informate process code bit code set construct bit subset easily derive basic set code set organize simple binary operation distinguish numeric alphabetic special symbol control character code number usable character basic set size expand escape code includ set suitable interpretate unassign code basis requirement local environment 
.I 1653
system performance evaluate survey appraisal state art system performance evaluate review evaluate goal problem examin throughput turnaround defin fundamental measure performance overhead cpu spe plac perspective appropriateness instruction mixes kernel simulators tool discuss pitfalls encounter analysis simulate synthesis present level approach evaluate requir successive greater amount informate central role measurement performance evaluate development evaluate method explor 
.I 1654
university education program computer science review power contemporary computer computer science defin objective computer science educate state assert north american university achieve computer science department program stanford university review appendices include syllabic phd qualify examinations stanford computer science department 
.I 1655
code extension procedure informate interchange propos usa standard 
.I 1656
procedure standardize process propos usa standard 
.I 1657
implementate sharer time shar system simple mechanism describ execution part program memory protection allow program act suboperate system improve version sharer time shar system feature describ 
.I 1658
analysis algorithm programm problem paper concern review examinate exist algorithm programm problem computation experience summarize machine time storage requirement algorithm compar test problem small intermediate size computer experiment provide hope solve problem variable reasonable amount machine time 
.I 1659
computation linguistic phd computer science program report recommendations course curriculum computation linguistic phd computer science program classificate subject area computation linguistic present ten course area describ basic bibliography computation linguistic append 
.I 1660
index subject algorithm 
.I 1661
multint algorithm 
.I 1662
eigenvalue eigenvectors real general matrix 
.I 1663
generate random number satisfy poisson distribution 
.I 1664
algorithm derive equations mathematical physics symbolic manipulate method describ digital computer derive equations mathematical physics curvilinear coordinate system request user effectiveness technique demonstrate derive navier stokes equations fluid motion continuity equate derive equations method user ne know coordinate transformate equations relate curvilinear coordinate interest orthogonal cartesian triad program coordinate transformate equations suppli input computer derive navier stokes equations continuity equate equations obtain relative curvilinear coordinate system specifi transformate equations input paper emphasis theoretical considerations methodology programm detail result present cylindrical polar spherical polar coordinate system 
.I 1665
automatic generate efficient lexical processor finite state technique practical applicate theory finite state automata automatical generate lexical processor dealt tutorial article rword system develop mit part system system accept input description multicharacter item word allowable language term subset regular expression output system lexical processor read str character combines item defin regular expression output item identifi code number pointer block storage character character count item processor produc system bas finite state machine state machine correspond unique condition lexical process character str state character read machine change state transition action bas character read system operate processor generate compar favorable spe carefully hand cod program accomplish task lexical processor mad produc technique employ independent nature item evaluate word event substitut character str processor describ generalize decision mak mechanism bas order sequence event allow system range applications area lexical process convenient advantage spe important considerate design system automatic generate lexical processor goal processor complete eliminate backup reread nearly fast hand cod processor analyze language detect error convenient easy 
.I 1666
solution linear program variable implicit enumerate algorithm 
.I 1667
root polynomial root squar resultant routine algorithm 
.I 1668
algol procedure fast fourier transform arbitrary factor algorithm 
.I 1669
algol procedure fast fourier transform algorithm 
.I 1670
correspondence bit hollerith code computer environment usasi tutorial standard 
.I 1671
phonological rule tester design implementate system alleviate problem rule evaluate linguist area phonology present permit user define line set rule statable framework present sound pattern english chomsky halle define phonemes bundles specifi distinctive feature define data strings phonemes associate grammatical structure test effect apply rule data store definition result rule applicate facility describ detail implement translate linguistic rule rule flip format direct list processor embedd lisp made system construction easy provid sophisticate capability linguist system written bbn lisp scientific data system computer design line interactive fashion control user command execut 
.I 1672
practical error coefficient integrate periodic analytic function trapezoidal rule theoretical practical error coefficient bound error integrate periodic analytic function trapezoidal rule tabulate range parameter 
.I 1673
approximate solution initial boundary wave equate problem boundary technique boundary technique propos treatment initial boundary problem linear mildly nonlinear wave equations illustrative offer demonstrate ease method appli 
.I 1674
line random number generators combination line random number generators generators requir single fortran instruction discuss short fortran program mix generators describ aim provide method incorporate random number generators direct fortran program mean line instruction advantage spe avoid linkage subroutine convenience versatility wish experiment generators congruential generators mix generators provide composite potential statistical property library generators wish consider simple fortran program discuss 
.I 1675
note relevance estimate improvement paper effect iterate improvement procedure examin shown applications improvement factor time ineffectual factor scale factor 
.I 1676
lrltran compiler extensive software problem confront organize possess number computer frequent acquire maintain cohesion system develop written high level language minimize machine dependency isolate language compiler language discuss language call lrltran heavily augment fortran tree pass compiler make internal postfix polish notate pass pass ii tree representate referr composite block table pass pass iii machine independent optimize occur pass ii loop machine dependent optimize pass iii 
.I 1677
storage organize programm system system program data representate rice university computer year describ logical entity storage occupy block consecutive memory locations block label codeword program data vector codeword turn label block form array storage arrangement discuss realize advantage programm system simplicity programm address flexible data structure efficiency memory utilize variable system composition dur execution mean linkage program program data basis storage protection applicate label block extend area time shar multimedia storage control basis experience rice idea extension present 
.I 1678
automata formal language abstract switch computable phd computer science program number course list area describe automata formal language abstract switch computable phd student computer science catalog description course appli role course graduate program discuss 
.I 1679
fast fourier transform algorithm real valu series procedure present calculate complex discrete fourier transform real valu time series procedure describ number point series integral power algorithm preserve order symmetry cooley turkey fast fourier transform algorithm effect reduction computate storage achieve series real discuss hardware software implementations algorithm perform log complex multiply add operation require real storage locations analyz point record 
.I 1680
general purpose display process tutorial system adept display expedit process tutorial system describ system design improve man computer communications employ display unit interleave tutor computer operation simulate programm informate retrieval written fortran iv ibm system model ibm display unit operate system adept catalog program control standard operate system terminate reschedul automatical relinquish computer resource allocate surrender control operate system perform job expand power flexible computer assist instruction mak student teachers user full resource system catalog program operate system language processor compiler simulate model mathematical solution technique stor data library user program incorporate instruction material reprogramm illustrations applications present implications discuss 
.I 1681
easy englisha language informate retrieval remote typewriter console easy english natural command language design simplify communicate man machine remote typewriter console develop retrieval document computerize data base moore school informate system laboratory request formulate standardize syntactical form present form transform equivalent query express retrieval system original symbolic command language briefly describ operate easy english detail illustrate transformations perform sample request point request str system macro flowchart easy english includ appendix provide printout retrieval demonstrate 
.I 1682
implementate basic system multiprogramm environment implementate remote terminal basic system context exist multiprogramm computer system burroughs describ implementate combines unique mixture machine language interpretive technique incremental compiler 
.I 1683
boolean matrix method detection simple precedence grammar mechanical procedure derive determin context free phrase structure grammar simple precedence grammar procedure consist elementary operation suitable defin boolean matrices applicate procedure operate grammar 
.I 1684
ambiguity limit entry decision table decision table tool system analysis program specificate becom accept rule redundancy contradiction completeness limit entry table publish usual check preced conversion extend limit entry form processor automatical translate table convention program usual base diagnostic facility rule paper suggest rule unsatisfactory important aspect check eliminate ambiguity table ambiguity defin discuss procedure produc check decision table propos theoretical basis algorithm establish importance design diagnostic facility decision table processor emphasize 
.I 1685
gan system generate analyz active network gan system generate active network design save time preparate active network deal convenient network program defin description programm language design generate active network set standard network present general idea language perform calculation active network schedul active network 
.I 1686
computer synthesis holograms display optical digital holography review mathematical model computation technique author digital holographic process discuss applications computer holography suggest computer holograms made dimensional object give faithful reconstructions white light approach bas point apertures image discuss photographs image reconstruct digital holograms present 
.I 1687
netflow algorithm 
.I 1688
netflow algorithm 
.I 1689
calculate polynomial derivative horner scheme algorithm 
.I 1690
netflow algorithm 
.I 1691
comparison correlation behavior random number generators ibm hutchinson state prime modulo multiplicative congruential pseudorandom generate attribut lehmer pass usual statistical test random number generators empirical shown generators type produce sequence autocorrelate function lag exhibit evidence nonrandomness multiplicative constant alternative generate propos tausworthe irreducible polynomial field characteristic shown free defect applicable generators ibm discuss computer word size affect generators statistical behavior older mix simple congruential generators extensive test computer bit word optimum generators ibm 
.I 1692
numerical solution thin plate heat transfer problem numerical solution system linear equations result discrete approximate thin plate heat transfer problem consider slow convergence point iterative method analyz shown caus boundary condition difficulty remove standard line iterative technique 
.I 1693
gpl truly general purpose language truly general purpose programm language gpl describ facility construct language data type facility operation perform basic language minimal sense basic element derive high efficiency object program construct algol statementsand statement basic special type procedure symbol underlin word algol implicit defin usage declarations part word definable pack word handl easily full word address variable pointer includ full general 
.I 1694
algorithm probable union large number event algorithm present efficient evaluate probable union independent mutual exclusive event problem evaluate sum product combination variable minimum time storage space 
.I 1695
plexus line system model neural network description present plexus system enable user construct neural network analyze output data produc network store retrieve network data library system operate entire digital display unit interact direct user permit easy rapid transition phase model process plexus design complement neurophysiological research systematic development neural model coordinate experimental work plexus network built component represent individual neurons external stimuli interconnect fibers component relative detail nature provision made experimental data input network convenient mean specificate modificate network extensive error check capability provid data result simulate network analyz variety technique rang examinations gross characteristic data determinate detail statistical property 
.I 1696
algorithm identify ergodic subchains transient state stochastic matrix algorithm identify ergodic subchains transient state stochastic matrix present applications markov renewal programm construction variable length code review update procedure deal sequence stochastic matrices discuss computate time investigate experimental compar recent propose method 
.I 1697
graphical inputoutput nonstandard character system develop harvard graphical inputt outputt nonstandard character computer print principle system deal orthography present limit chinese character mathematical symbol character add repertoire system graphical input display scope text inputt accomplish display scope rand tablet organize operate system describ discussion relative merit system illustrations computer input output chinese character includ 
.I 1698
statistical model console behavior multiuser computer able computer system communicate world efficient important able perform computation efficient difficult characterize user easy characterize entire user community bas property community postulate hypothetical virtual console claim made virtual console behaves actual console entire collection virtual console model collection actual console model answer question process suspend wait console input maximum rate process execute bound set buffer requirement answer similar question need aspect operate system design 
.I 1699
experimental evaluate informate retrieval teletypewriter experiment design evaluate capability mechanize informate retrieval system emphasis interactive man machine language mechanical psychological limitations design conduct moore school informate system laboratory basic assumption research informate retrieval system provide man machine dialogue remote inquiry terminal provide searcher tool actual perform search library repository document factor involve evaluate system include ease learn time effectiveness actual retrieval experiment conclusion result detail 
.I 1700
peekabit computer offspr punch card peekaboo natural language search peekaboo idea punch card informate retrieval method mate idea superimpos punch produce programm technique cut computer run time half test search subject index entry search program device operation late item enter store byte mask create item meaningful word inclusive operate search time logical product operate mask similarly construct question mask equal question mask question word present store item equal conclusive word store item unpack compar question word present store made subject index entry estimate average character longer text abstract handl multiple mask 
.I 1701
synchronous signal rate data transmission propos usa standard 
.I 1702
commentary mr mooers paper 
.I 1703
accommodate standard identificate programm language user public want standardize reliable identificate programm language relate service achieve goal illustrate method adopt trac interactive language relate family language oppressive rigidity usual associate standardize avoid accommodate technique accessible user allow local variation language explicit standardize language undertaken organization source language organization trademark trac publish standard service re provide reliable public identificate method usefully appli programm language computer service 
.I 1704
minimum excess cost curve algorithm 
.I 1705
set basic input output procedure algorithm mean primitive symbol outsymbol length request journals algorithm policy comm acm nov basic set input output procedure defin aim qual flexible outreal instance written derive procedure output fix point floate point representate round properly variant easily written explicit call procedure decompose integer decompose real highly recommend practice echo input made easy subset derive procedure ioi ior iob ioa documentate output form equivalent algol statement provid made subset oti otr otb ota berkeley style provid informate form output prior call procedure real format defin parameter outchannel provide informate simultaneous output channel suggest interrelationship declar procedure furnish tabular form 
.I 1706
champ character manipulate procedure programm language facility symbol manipulate describ str procedure declar call standard algol context algol procedure turn call str procedure numeric symbolic process convenient programm concatenate variant snobol pattern match make set primitive command assemble condition expression provide alternative computation pattern array strings process quantifiers class things assign identifier restrict procedure express notate language facility implement algol compiler burroughs 
.I 1707
generate positive test matrices known positive spectra sufficient condition real matrix similar positive matrix result construct similarity transformate appli upper triangular matrix yield positive matrix preassign positive spectrum 
.I 1708
note efficiency lisp computate pag machine problem level storage program explor context lisp system core memory buffer large virtual memory stor drum detail tim problem 
.I 1709
modificate efroymsons technique stepwise regression analysis computation technique conventional stepwise multiple linear regression require storage matrix data number variable large requirement taxes storage capacity present machinery symmetry matrices involve permit modificate requir half storage computation convention algorithm addition storage allow analysis problem variable alternative permit analysis problem number variable computation perform double precision 
.I 1710
asp implement associative structure package asp general purpose associative data structure package arbitrary number data item arbitrary number relationship data item represent special picture language describ prove draw asp structure paper asp structure built manipulate mean series macro call outlin appendix emphasis philosophy system implementate sufficient informate includ enable reader produce implementate asp 
.I 1711
computer need lawyer liable negligence torts slander credit liable theory express impli warranty guarantees discuss legal complications explain user operators owners leasors computer alert potential legal problem focus trouble spots contract data process service automate record operation decid automate operation comply statutes regulate relate record informate patent copyright trade secret protection program problem copyright material informate storage retrieval system includ pend copyright patent revision bills 
.I 1712
recovery disk content system failure method discuss system malfunction content disk restor status time failure 
.I 1713
overcom high priority paralysis multiprogramm system case tory high priority paralysis degradate occur multiprogramm system schedul bas primarily preassign priority alleviate modify schedul algorithm maximize number program active time case tory paper general method simultaneity increas refinements schedul algorithm future improvement consider briefly 
.I 1714
procedure normal distribution algorithm 
.I 1715
direct search algorithm 
.I 1716
normal random deviate algorithm 
.I 1717
generate prime implicants ternary encod decimal arithmetic decimal arithmetic ternary encod cubes topological considerations algorithm obtain extremals prime implicants boolean function algorithm programm fortran language general require memory minimize procedure treats dont care term efficient manner 
.I 1718
logical arithmetic computer complement binary arithmetic algorithm present multiplicate division unsign integer operands digit normal reserve sign participate significant arithmetic digit positive weight 
.I 1719
methodology calculate optimize real time system performance continual increas size complexity number type cost data process system caus re examinate government industry criteria method calculate optimize data process system cost performance real time data process system typifi automate airline reservate system discuss paper criteria evaluate performance describ methodology calculate optimize outlin method illustrate carry portion performance calculate optimize drum orient message switch system 
.I 1720
master level computer science curricula result survey course work master degree candidates university present general comment concern emphasis program 
.I 1721
determinate intersection point plane curve mean differential equations method propos calculate intersection point plane curve theory singular point system differential equations develop method intersection point determin identifi singular point modifications appli system ensure singular point stable integral start neighborhood singular point approach point integral parameter tend infinity addition method describ systematical search intersection point prescrib rectangular area 
.I 1722
method convergence improvement improper integral numerical integrate improper integral kind customary truncate integral change yield iterate predetermin constant efficiency integrate scheme improve recent advance theory nonlinear transformations important integral integral integrands ration polynomial transformations fail yield improvement paper method convergence improvement develop great improve convergence improper integral includ integral ration polynomial 
.I 1723
computer construction project network project network pert cpm algorithm construct project network direct project precedence relation algorithm create dummy activity topological order arcs node number node create minimal precedence relation experimental programm fortran ii ibm 
.I 1724
generalize partial pass block sort design partial pass block sort arbitrary range key number work describ design generalize partial pass column sort ashenhurst amphisbaenic sort nagler power sort tabulate size input number work considerate problem combin block sort internal sort direct access storage device 
.I 1725
simple proof lewins order retrieval theorem associative memory efficient method order retrieval binary word associative memory describ lewin bas special readout circuit digit present individual digit column memory circuit individual digit column digit digit memory empty circuit paper term column indicators reduce considerable number memory access retrieve order number distinct word memory lewin prove readout describ method distinct binary word memory access prove number memory access method unlike method independent word length paper simple proof theorem derive elementary aspect structure set binary number present 
.I 1726
preliminary investigate technique automate read unformatt text method convert unstructur print material computer code experimental investigate operate controll mode depend human demarcate region page guid scanner implement mean joystick crt display mode performance figures obtain thought suitable process complicate material technical journals simpler material instance claim section patent applications utmost accuracy unsupervis mode advocate textual portion page locate dur rapid prescan rudimentary form frequency analysis area rescann higher resolution suitable character recognition error rate order percent obtain simple problem involve photographs telephone company meter boards matter relate design general purpose page reader segmentate print text time shar scanner interactive man machine operate facsimile reproduction illustrations discuss 
.I 1727
estimate frequency jump program segmentate program reasonable estimate sij sij mean number jump th instruction th instruction run time case sij estimate direct structure program general account difficult programmer andor translate obtain good estimate sij easier estimate sij quantity pijsijcisumsij jn ci arbitrary positive constant pij proportion sij estimate pij easier estimate probability event instruction execut instruction ii estimate consider structure program part paper theory markov chain algorithm computate sij pij found obtain estimate pij part variant algorithm derive avoid necessity computate involve large matrices 
.I 1728
experimental data behavior program pag environment result summarize empirical study direct measurement program operate behavior multiprogramm system program organize fix length page data collect interpretive execution number pag program describe frequency page faults frequency instant execut program require page data instruction main core memory data evaluate page replacement algorithm assess effect performance change amount storage allocate execut program 
.I 1729
minit algorithm linear programm algorithm 
.I 1730
jacobi polynomial algorithm 
.I 1731
gaussian quadrature formula algorithm 
.I 1732
factorial analysis variance algorithm 
.I 1733
distribution indistinguishable object distinguishable slots algorithm 
.I 1734
chebyshev solution overdetermin linear system algorithm 
.I 1735
future market computer time auction method describ allocate computer time allow price computer time fluctuate demand relative priority user controll important project access auction free periodic fluctuate computer associate monthly time allocate scheme 
.I 1736
head format data transmission usaai tutorial standard 
.I 1737
global parser context free phrase structure grammar 
.I 1738
writ outline debugg program experienc user present online debugg routine unsatisfactory experienc user require unnecessarily rigid complicate typ format make difficult user correct typ error consume excessive memory intricate feature debugg program prime importance program simple flexible highly efficient communicate user debugg program improve technique applicable online debugg program technique present illustrate opak octal package debugg program cod pdp sds compromise economy utility program core storage incorporate elegant debugg feature discuss 
.I 1739
regular expression search algorithm method locate specific character strings embedd character text describ implementate method form compiler discuss compiler accept regular expression source language produce ibm program object language object program accept text search input produce signal time embedd str text matches regular expression problem solution present 
.I 1740
inexpensive braille terminal device active time shar facility blind programmer require braille terminal system detail construction brailler model teletype modify print head increas resiliency platen description programm need drive brailler present 
.I 1741
brad brookhaven raster display multiconsole computer display system design provide rich display low unit cost brad brookhaven raster display console plot ten thousands point character frames initial display system investment display teletype cost technique employ programmatical generate binary image desir display computer image written rotate drum memory independent read head continuous display picture generate swept horizontal line standard tv monitor serve display device technique drawback computer compute image display point interaction difficult point function give coordinate point screen inverse map generate process requir calculate coordinate point screen inverse map generate process requir calculate coordinate select point input space 
.I 1742
design display processor flexible power need data channel computer display consider work efficient channel sufficient number instruction understood small processor powerful channel found successive improvement display processor design lie circular path mak improvement original simple design general purpose computer trip degree physical separate display parent computer key factor display processor design 
.I 1743
reliable full duplex transmission half duplex telephone line field proven scheme achieve reliable duplex transmission half duplex communicate line present demonstrate difficulty problem similar scheme slight unreliable present flowchart reliable scheme interest 
.I 1744
stable numerical method obtain chebyshev solution overdetermin system equations implementate stiefels exchange algorithm determin chebyshev solution overdetermin system linear equations present gaussian lu decomposition row interchange implementate computational stable usual literature generalize stiefels algorithm develop permit occasional exchange equations simultaneous 
.I 1745
position paper comput communications effective operate free enterprise create envision informate service industry dependent accomplishments restructur informate process industry clear division cost made comput communications development informate service wide multiaccess system concept informate service share computer installations cost construction reasonable development public message switch communications service adequate provision made informate security 
.I 1746
protection informate process utility critical problem design informate process utility permit flexible shar user informate privacy solution problem discuss 
.I 1747
criteria design comput system facilitate debugg designer comput system adopt explicit criteria accept reject propos system feature criteria kind input recordable input specifiable asynchronous reproducible output criteria imply user desire know control influence affect content extent computer output define scope criteria notion abstract machine programm language notion virtual computer explain applications criteria concern read time day clock synchronize parallel process protection multiprogramm system assignment capable indexes 
.I 1748
schedul philosophy multiprocess system collection basic idea present evolve workers past year provide suitable framework design analysis multiprocess system notion process state vector discuss nature basic operation process consider connection process protection analyz general approach priority orient schedul describ relationship convention interrupt system explain aspect time orient schedul consider implementate schedul mechanism analyz detail feasible embody hardware establish final method interlock execution independent process present compar 
.I 1749
structure multiprogramm system multiprogramm system describ activity divid number sequential process sequential process plac hierarchical level independent abstraction implement hierarchical structure prove vital verificate logical soundness design correctness implementate 
.I 1750
considerations design multiple computer system extend core storage large quantity addressable executable fast random access memory heighten multiprogramm performance multicomputer system discuss general design hardware arrangement software component function system bas plann configurate dual cdc share million word extend core storage generalize design special emphasis plac estimate expect gain compar tradition configurate separate independent computer extend core storage observate made convention slower spe random access storage device place faster memory 
.I 1751
work set model program behavior probable basic reason absence general treatment resource allocate modern computer system adequate model program behavior paper model work set model develop work set page associate process defin collection recent page provide knowledge vital dynamic management pag memory process work set shown manifestations ongo computation active processor demand memory demand defin resource allocate formulate problem balanc demand equipment 
.I 1752
resource management medium scale time shar operate system task schedul resource balanc medium size virtual memory pag machine discuss relate combin batch process time shar environment synopsis task schedul pag algorithm implement result comparative simulate trac development algorithm predecessor version discussion emphasis plac balanc system performance relative characteristic system resource simulate result relative alternate hardware characteristic effect program mix load variation present 
.I 1753
virtual memory process shar multics basic concept involve design multics operate system introduc multics concept process address space virtual memory defin pag segmentate explain mean user share procedure data discuss mechanism symbolic reference dynamical transform virtual machine address describ detail 
.I 1754
dynamic storage allocate system recent computer system design hardware facility provid eas problem storage allocate method characterize dynamic storage allocate system accord function capability provid underly technique present basic purpose paper provide perspective utility hardware facility assess survey storage allocate facility representative computer system includ appendix 
.I 1755
proceedings acm symposium operate system principle 
.I 1756
hollerith punch card code propos usa standard 
.I 1757
data code calendar date machine machine data interchange propos usa standard 
.I 1758
symmetric polynomial algorithm 
.I 1759
transportate problem algorithm 
.I 1760
normal curve integral algorithm 
.I 1761
chi squar integral algorithm 
.I 1762
dilogarithm algorithm 
.I 1763
root low order polynomial equations algorithm 
.I 1764
panel discussion computer appreciate session acm th anniversary conference august entitl educate design experiment computer appreciate half consist panel discussion computer appreciate organize chair elliot organick panelists charles davidson bernard galler richard hamm alan perlis mak prepar statement panelists join discussion andry van dam arthur bkohn present paper half transcript panel discussion condens dr organick edit panelists remark referr paper van dam kahn discussion dur half session pertinent paper includ reference 
.I 1765
expenditure source funds utilize digital computer research instruction higher educate projections southern regional educate board publish complete report survey conduct determine fund characterize utilize computer research instruction institution higher educate unit state sampl survey describ estimate total populate present 
.I 1766
quasilinearize estimate differential operators eigenvalue linear ordinary differential operate unknown constant number eigenvalue unknown constant estimate precise formulate provid effective numerical procedure solution result computation experiment 
.I 1767
general purpose graphic language interactive computer graphic terminal permit problem solve machine order handle variety applications expedient develop general purpose graphic language number graphic device system design produce language quickly cheaply model graphic language develop system present 
.I 1768
global parser context free phrase structure grammar algorithm analyz context free phrase structure grammar generate program parse sentence language sentence invalid describ parser top bottom type recursive number heuristic procedure purpose shorten basic algorithm quickly ascertain substrings input sentence correspond target nonterminal symbol includ generate algorithm parser implement rca snobol test successfully number artificial grammar subset algol number routine extract data grammar minimum length derivable strings prefixes interest applicate context 
.I 1769
expand world computer onward sweep automatic process informate imped principal barriers geography cost problem complexity man machine communicate inadequate sensor lack understand distance time size main incentive breach barriers universal ne process informate urgent greater part human work active change production service computer development hardware programm time shar educate data communicate display judg effective remove barriers barrier smash potentiality continu rapid expansion problem orient language effective entire front online computer time shar rate high measure educate increas understand basic progress computer complex powerful tool important government scientist study problem create populate explosion analyz solution 
.I 1770
rule ethics informate process background motivate adoption acm council november set guidelines professional conduct informate process describ tory ethical code profession reason adoption ethical rule consider section acm guidelines analyz purpose inform important aspect profession stimulate thought interest 
.I 1771
curriculum recommendations academic program computer science report acm curriculum committee computer science report recommendations academic program computer science develop acm curriculum committee computer science classificate subject area computer science present twenty course area describ prerequisites catalog description detail outline annotate bibliography course includ specific recommendations evolve committee preliminary recommendations undergraduate program graduate program computer science discuss recommendations present development master degree program develop guidelines doctoral program discuss specific recommendations made importance service course minors continu educate computer science emphasize attention organize staff requirement computer resource facility need implement computer science education program 
.I 1772
usascsocr dual case keyboard arrangement propos usa standard 
.I 1773
general purpose alphanumeric keyboard arrangement informate interchange propos usa standard 
.I 1774
program overlay technique general feature program overlay system describ main type automatic semiautomatic nonautomatic classifi programm technique explain function machine hardware system feature implementate semiautomatic overlay facility multiprogramm system cdc describ detail special reference real time applications 
.I 1775
adjustment inverse symmetric matrix symmetric element chang algorithm 
.I 1776
maxflow algorithm 
.I 1777
generate permutations lexicographic order algorithm 
.I 1778
distribution algorithm 
.I 1779
test probability algorithm 
.I 1780
harmonic analysis symmetrical distribut data algorithm 
.I 1781
translate writ system critical review recent effort automate writ translators programm language present formal study syntax applicate translate writ discuss section ii approaches automate post syntactic semantic aspect translate writ discuss section iii relate topics section iv 
.I 1782
numerical integrate formula fourier analysis numerical integrate formula present unequal sampl interval interval equal spac log scale formulate fourier analysis improve accuracy ease usage complete set formula numerical fourier analysis 
.I 1783
conversion byan conversion mean floate point number base convert floate point number base convert back floate point number original base combination round truncate conversion question consider significant digit need intermediate base allow conversion original number significant digit 
.I 1784
practical error coefficient estimate quadrature error analytic function publish error coefficient estimate quadrature error analytic function comput assumption quadrature rule exact polynomial degree rule round abscissas weight true integral polynomial question infinite binary expression quadrature rule exact error considerate comput practical error coefficient 
.I 1785
scatter storage technique scatter storage technique method implement symbol table assembler compiler review number effective present variant technique document 
.I 1786
improve hash code scatter storage introduc hash cod method bas fix point division multiplicate logical operation method allow hash table length method handl collisions discuss known quadratic search method faster random search free clusters build linear search 
.I 1787
transition matrices compil algorithm describ construct suitable bnf grammar efficient left recognize sentence correspond language type recognize number compiler operate pushdown stack transition matrix illustrate recognizers effective purpose usual syntax check 
.I 1788
general processor programm language effort made develop implement higher level programm language construction compiler prove general satisfactory paper contend programm language describ functional body macro instruction macro call constitute canonical form term programm notate describ support discussion logical torical role macro instruction present discuss conflict machine independence object program efficiency question greatest difficulty lie compiler construction 
.I 1789
logarithm gamma function algorithm 
.I 1790
mullers method find root arbitrary function algorithm 
.I 1791
triangular factor modifi matrices algorithm 
.I 1792
exploratory experimental study compar online line programm performance exploratory experiment conduct system development corporate compare debugg performance programmer work condition line line access computer known study measure programmer performance controll condition standard task statistical significant result experiment faster debugg online condition important practical find involve strik individual difference programmer performance methodological problem encounter design conduct experiment describ limitations findings point hypotheses present account result suggestion made research 
.I 1793
presentate alphameric character informate process propos american nation standard 
.I 1794
fast random number generate ibm 
.I 1795
optimal code serial parallel computate 
.I 1796
index subject algorithm 
.I 1797
solution linear program algorithm 
.I 1798
coulomb wave function algorithm 
.I 1799
elementary function continu fraction algorithm 
.I 1800
psif algorithm 
.I 1801
analysis variance balanc experiment algorithm 
.I 1802
regression direct product matrices algorithm 
.I 1803
complex root find algorithm 
.I 1804
color polygonal region algorithm 
.I 1805
productive multiprogramm computer progress develop analytic prediction method multiprogramm discuss mode computer operate program concurrent processor memory proceed central processor unit cpu input output io channel program actual proceed intermittent singly accord eligible readiness proce priority able represent proceed continuous simultaneous effective rate fraction enjoy absence program effective progress rate program sensitive detail characteristic resident simulate method predict paper present result progress develop alternative simulate simulate test iterative computate rate situations algorithm sensitive factor control phenomenon includ nonquantitative topological feature program structure 
.I 1806
downhill method downhill method numerical method solve complex equations fz restriction function fz analytical introduction method critical review relate literature present theory method converge shown fundamental dilemma exist breakdown practical applications avoid difficulty improve rate convergence root modifications original method propos program fortran bas modifi method algorithm numerical includ 
.I 1807
optimize expression fortran method optimize computate arithmetic index expression fortran program present method bas linear analysis definition point variable branch loop structure program objective process eliminate redundant calculation reference made common subexpression remove invariant calculation loop efficient compute subscript iterate variable provide efficient index register usage method present require pass compiler scann backward development fortran compiler prove produce excellent object code significant reduc compilate spe 
.I 1808
advanc cryptographic technique computer cryptographic technique maintain confidential informate process computer dealt special emphasis paid unique characteristic computer make cryptographic method relative security cost preferr method includ paper 
.I 1809
numerical analysis phd computer science program numerical analysis study method procedure obtain approximate solution mathematical problem emphasis scientific calculate difficulty educate broad area center question background emphasis numerical analysis program computer science department emphasize awareness problem computer implementate experimental procedure ne solid background appli mathematics 
.I 1810
automatic fold program efficient displace operate fold program memory discuss measurement brown al nelson automatic fold mechanism simple design demand pag unit built ibm research center belady nelson oneil permitt qual compar fold discuss shown care unit perform satisfactorily condition test operate memory storage interface large spe difference disadvantage prefold requir fold examin number important trouble beset comput today shown arise aggravate source conclud fold mechanism probable normal part comput system 
.I 1811
case study programm parallel processor affirmative partial answer provid question program parallel processor comput system efficient decrease execution time problem parallel processor system multiprocessor system processor simultaneous execute separate task single job cooperate decrease solution time computation problem processor independent instruction counter mean processor execute task program relative independent processor communicate cooperate processor mean data storage shar processor program determinate distribution electrical network written parallel processor comput system execution program simulate data gather simulate run demonstrate efficient solution problem typical large class important problem shown proper programm solution time processor appli approaches time solution time single processor improper programm actual lead increase solution time number processor stable method solution investigate 
.I 1812
fortran random number generators 
.I 1813
generate permutations pseudo lexicographic order algorithm 
.I 1814
direct search algorithm 
.I 1815
direct search algorithm 
.I 1816
generalize square fit orthogonal polynomial algorithm 
.I 1817
computate fourier coefficient algorithm 
.I 1818
associate legendre function kind real imaginary argument algorithm 
.I 1819
complex error function algorithm 
.I 1820
generate random permutations algorithm 
.I 1821
permanent function square matrix ii algorithm 
.I 1822
shortest path forest topological order algorithm 
.I 1823
factorial analysis variance algorithm 
.I 1824
aparel parse request language aparel describ language extension algorithmic language pli provide pattern match capability normal found special purpose language snobol tmg capable provid parse request state bnf format parse request form programm language special sequenc rule successfully complet parse request associate piece pli code execut code normal pli strings piece level parse normal pli variable informate concern alternative successful convenient facility multiple input output stream initiate sequence parse request subroutine parse time semantic check includ aparel proven convenient build powerful syntax function macro system algebraic language preprocessor debugg system line command parser translate dataless programm general str manipulate 
.I 1825
practical method construct lrk processor practical method construct lrk processor develop processor capable recognize pars input dur single backup scan number step equal length input number step derivate technique present bas original method describ knuth decrease effort requir construct processor size processor produc procedure involve partition grammar number smaller part lrk processor construct part knuth algorithm condition relate individual processor satisfi lrk processor entire grammar construct procedure lr parser algol obtain 
.I 1826
lisp garbage collector virtual memory computer system paper garbage collection algorithm list process system operate large virtual memory describ object algorithm compaction active storage discovery free storage free storage real exhaust decision garbage collect easily made criteria decision discuss 
.I 1827
performance monitor time shar system software measurement facility part general purpose time shar system describ date collection facility dcf implement michigan terminal system mts system model exist purpose monitor operate system user program behavior performance structure mts outlin order explain implementate dcf event system identifi record supervisor dump magnetic tape auxiliary program line process event user program unrelate system action record supervisor call time occurrence event accurate record data item identifi job type overhead associate data collection interference normal job carefully analyz shown minimal informate obtain facility applications general guidelines offer construction future monitor program 
.I 1828
synchronize parallel access data base follow problem consider data base manipulate simultaneous process rule synchronize maximize amount parallel active allow assum data base represent graph data base hierarchy directory line system method synchronize process examin validity discuss performance compar 
.I 1829
interactive graphical display monitor batch process environment remote entry graphic monitor program describ develop carnegie mellon university cdc computer general purpose batch process system remote entry exist system graphic hardware describ graphic monitor resident auxiliary monitor provide comprehensive managerial capable graphical system response command human user respond command user program similar interface routine call take place action human program interact symmetrical equal basis medium graphic monitor choice made design graphic monitor constraint exist hardware computer system discuss structure monitor program human program interface describ transient swapp version small resident part provision swapp submonitors 
.I 1830
retrieval time pack direct access invert 
.I 1831
comment optimal tree structure 
.I 1832
minimax logarithmic error 
.I 1833
ambiguity description algol 
.I 1834
axiomatic basis computer programm paper attempt made explore logical foundations computer programm technique appli study geometry later extend branches mathematics involve elucidate set axioms rule inference proof property computer program axioms rule formal proof simple theorem display final argu important advantage theoretical practical follow pursuance topics 
.I 1835
iitran programm language iitran language develop student important important feature describ iitran procedure orient language level block structure variety data type powerful feature includ discussion design principle follow student language 
.I 1836
method determin linear precedence function precedence grammar precedence relation precedence grammar precise describ dimensional precedence matrix informate matrix represent concise pair vector call linear precedence function algorithm present obtain linear precedence function precedence matrix algorithm shown possess computation advantage 
.I 1837
algol convolution procedure bas fast fourier transform algorithm 
.I 1838
normal curve integral algorithm 
.I 1839
singular decomposition complex matrix algorithm 
.I 1840
efficient prime number generate algorithm 
.I 1841
prime number generate treesort principle algorithm 
.I 1842
algorithm generate configurations algorithm 
.I 1843
choice base digital computer consider memory word compos state device sign bit state device choice base internal representate floate point number computer discuss shown sense 
.I 1844
modular computer shar system alternative approach design organize general purpose interactive multiterminal comput system present system organize describ conceptual simple arrangement bank interchangeable computer memoryprocessor pair assign process terminal job arrive computer serve master control computer supervises collection distribution message remote terminal simplest form disk drive connect terminal crosspoint switch network allow disk drive connect computer active terminal user occupy dedicate disk drive share computer terminal user simple manner ratio user computer dependent size power machine computate requirement mix user system organize inherent simpler reliable approach time shar computer potential highly system relative low cost economic configurations range system size span order magnitude final problem program develop remote terminal user run dedicate batch system compatible computer 
.I 1845
loader standardize overlay program overlay capable describ generate computer system cdc ge ibm univac critique system bas actual experience large overlaid trajectory simulate program short history description program present standardize minimum capability loader recommend program operate computer system easily convert maintain proposal overlay software incorporate memory occupate specificate concept condition tree structure delineate concept provide efficient cost effective utilize memory increas flexible program structure 
.I 1846
simulate network parallel process simultaneous event occur problem simulate discrete event system computer system convention digital computer dealt system assum describ network interconnect sequential process briefly review common technique handle simulations simultaneous event occur ignor handl simple priority rule follow problem deal simultaneous event separate process introduc abstraction problem develop admits solution majority commonly encounter problem technique find method simulate parallel event report found case shown find solution extend informate solution technique case technique computational unfeasible addition informate provid 
.I 1847
algorithm find fundamental set cycle graph fast method present find fundamental set cycle undirect finite graph spann tree grown vertices examin turn unexamin vertices stor pushdown list await examinate stage process take top element pushdown list examine inspect edges vz graph examin tree fundamental cycle add edge vz plac tree exact stage vertices graph large store requir creases time ng depend type graph involve bound shown bound attain term storage algorithm similar gotlieb corneil superior welch term spe similar welch superior gotlieb corneil testsshow algorithm remarkable efficient random graph 
.I 1848
damp taylor series method minimize sum square solve system nonlinear equations algorithm 
.I 1849
function minimize algorithm 
.I 1850
generate permutations lexicographic order algorithm 
.I 1851
generate spann tree algorithm 
.I 1852
base mobile programm system algorithm macro processor base implementate bootstrapp processor programm language describ algorithm easily implement contemporary comput machine experience programm language implementate bas algorithm language transferr machine man week machine 
.I 1853
compact list representate definition garbage collection system implementate compact list stor sequential memory chain pointer convenient swym system permit list chain compact combinate description list representate operators implement similar lisp system garbage collector attempt make list compact relocate rearranges list storage temporary storage unique list compact garbage collection algorithm present detail class macro implement system describ final considerate design factor essential success plex process system implementate 
.I 1854
multiprogramm machine cod computer organize author feel interrupt feature modern computer potent source programm pitfalls error heavily contribute unreliable program mak programm scheme present avoid concept interrupt permit specificate concurrent pseudoconcurrent activity supposedly perspicuous manner intend serve basis construction operate system prime program concurrent activity scheme include set basic instruction generate terminate synchronize parallel process set routine represent instruction simulate hypothetical machine organize implement test ibm system program instruction written pl present 
.I 1855
program syntactic analysis english sentence program describ produce syntactic analyses english sentence respect transformation grammar main feature analyzer limit dictionary english word pursues analysis path simultaneous process sentence left form representate dictionary grammar outline account analysis procedure technique size analysis record reasonable limit avoid ne dynamic applicate transformation rule describ number output produc program output include tim informate 
.I 1856
teachable language comprehender simulate program theory language teachable language comprehender tlc program design capable taught comprehend english text text program seen input comprehend text correct relate explicit implicit assertion text large memory memory semantic network represent factual assertion world program create copies part memory found relate text adapt combin copies represent mean text mean mean text program successfully comprehend encod format memory form add memory factual assertion memory capability correct relate text memory prior content taught program need tlc present relative small number assertion capability system notation express provid program correspond general process comprehend language provide methodology add addition informate process require actual comprehend text kind memory structure comprehension process tlc allow factual assertion capability relate text stor assertion generalize automatical assertion capable put system help comprehend great sentence future addition single factual assertion linguistic capable provide large increment tlc effective knowledge world able comprehend text program strategy present general theory language comprehension 
.I 1857
filon quadrature algorithm 
.I 1858
algorithm filon quadrature algorithm filon quadrature describ considerable attention devot analysis round truncate error algorithm include automatic error control feature 
.I 1859
error bound periodic quintic splines explicit error bound periodic quintic spline interpolate develop derivative periodic spline shown sixth fourth order approximate mesh point derivative function interpolate 
.I 1860
algol bas associative language high level programm language large complex associative structure design implement underly data structure implement hash cod technique discussion include comparison work applications language 
.I 1861
mad definition facility definition facility higher level language describ user language define operators andor data type mad language predefin informate write definition motivate form definition written conclusion drawn future definition facility 
.I 1862
comput capability argentine chilean university author report trip university argentina chile dur november describ university condition comput activity university experienc student discontent status quo solution attempt contrast argentina exclud student participate university government chile allow participate university comput service academic activity limit number computer small capacity larger ibm exception comput science academic program rare situate mean attributable responsible comput development strive excellence system hard come university especial strong european tradition adapt slowly academic resource discipline superimpos severe technological economic constraint develop nate consequent absence conscious government emphasis strengthen comput capability future progress retard 
.I 1863
minit algorithm linear programm algorithm 
.I 1864
generate hilbert derive test matrix algorithm 
.I 1865
algol reference language editor algorithm 
.I 1866
characteristic associate solution mathieus differential equate algorithm 
.I 1867
expect length sequence generate sort replacement select replacement select technique sort interest ratio lj expect length th sequence generate technique number memory cell complex variable theory shown lj asymptotical average interval sign change lj 
.I 1868
obtain correct inputa approach informate put machine readable form scientific business origins keypunch paper address difficulty obtain correct keypunch key verifi data alternative method suggest computer rule error input technique explain illustrate reference work program involve essential phase phase error detect machine subsequent phase correct 
.I 1869
block structure indirect address garbage collection programm language includ explicit implicit block structure provide nam convenience programmer indirect address snobol nam constraint introduc modifications snobol describ result desirable consequence nam constraint disappear indirect address function definition significant save number call garbage collector garbage collect expense time function call program modifications implement extension snobol dialect 
.I 1870
technique pseudorandom number computer simulate algorithm describ uniform pseudorandom integer construct binary number probable bit word bit assume desir parameter technique mak number simulate programm describ 
.I 1871
automatic contour map method contour mapp mean digital plotter discuss method present simple implement program small number instruction fortran iv instruction requir comparison method propos author perform fortran iv program implement propos method istituto di elettrotecnica ed elettronica politencnico di milano 
.I 1872
chebyshev interpolate quadrature formula high degree errata 
.I 1873
accelerate lp algorithm shown method comput relate product accelerate pric phase lp algorithm lp applications 
.I 1874
generate pseudorandom number complement machine ibm familiar multiplicative congruential generate examin context type complement arithmetic ibm series sequence residues consider relationship establish shown sequence positive negative residues produc simply economical convention approach period los desirable statistical property easily generate sequence involve absolute shown period attractive statistical property statistical property sequence relate previous establish criteria 
.I 1875
polynomial spline approximate quadratic programm problem approximate function fitt set data approximate function requir derivations specifi sign range approximate studi approaches present quadratic programm provide constraint derivative selection function yield fit modifi bernstein polynomial scheme spline fit 
.I 1876
generate test matrices sign pattern prescrib positive spectra class orthogonal transformation present member transform positive diagonal matrix matrix special sign pattern 
.I 1877
prevention system deadlocks known problem design operate system selection resource allocate policy prevent deadlock deadlock situate resource allocate task task continue publish solution restrictive handle problem sufficient general suggest policy occasion refuse request safe grant algorithm present examine request light allocate resource determine grant request introduce deadlock proof appendixes show condition impos algorithm sufficient prevent deadlock algorithm successfully system 
.I 1878
recovery reentrant list structure slip consequence reference count bas space recovery system employ slip reentrant list structure recover explicit eras lisp garbage collection scheme free impediment depend able find mark node reachable program variable trac descendants program variable identifi collect list create function list slip amend mark list programmer wishes assume responsible modificate lisp garbage collector recover abandon reentrant list structure append slip system 
.I 1879
note storage fragmentate program segmentate main purpose paper presentate result series simulate experiment investigate phenomenon storage fragmentate type storage fragmentate distinguish external fragmentate los storage utilize caus inable make storage fragment large number separate block internal fragmentate los utilize caus round request storage allocate exact number word requir strik result apparent general rule round request storage reduce number size block coexist storage los storage increas internal fragmentate save decreas external fragmentate describ method segment allocate accompany technique segment address take advantage result evidence present advantage method convention pag technique 
.I 1880
chebyshev solution overdetermin linear system algorithm 
.I 1881
transpose vector stor array algorithm 
.I 1882
determinate square root positive definite matrix algorithm 
.I 1883
modifi romberg quadraturealgorithm 
.I 1884
anomaly space time characteristic program runn pag machine runn time program pag machine general increase store program constrain run decrease experiment reveal case reverse true decrease size store accompani decrease runn time informal discussion anomalous behavior case fifo replacement algorithm formal treatment present 
.I 1885
computer system transformation grammar comprehensive system transformation grammar design implement ibm computer system deal transformation model syntax line chomsky aspect theory syntax major innovations include fullformal description syntax transformation grammar direct random phrase structure generate lexical insertion algorithm extend definition analysis simple problem orient programm language algorithm applicate transformation express paper present system discuss general attitude underly development system outlin system discuss important special feature reference paper consider aspect system detail 
.I 1886
generate optimal code expression factorize set expression compil method present increas efficiency object code produc factor expression find set subexpression occur expression subexpression factor ascertain sequenc procedure appli order factor expression informate comput correct sequence factor ne retain memory minimal amount time assignment algorithm execut order minimize total number temporary storage cell requir hold result evaluate factor order make technique computational feasible heuristic procedure appli global optimal result necessarily generate factorize algorithm applicable problem factor boolean switch expression factor polynomial encounter symbol manipulate system 
.I 1887
recursive relate determinant pentadiagonal matrix recursive relate relate lead principal minors develop determinant pentadiagonal matrix numerical includ calculate eigenvalue 
.I 1888
spline function method nonlinear boundary problem solution nonlinear differential equate yfxyy point boundary condition approximate quintic cubic spline function yx method suit nonuniform mesh size dynamic mesh size allocate uniform mesh size error quintic spline yx typical error numerovs method requir differential equate satisfi mesh point result set difference equations block tridiagonal easily solve relaxate standard method 
.I 1889
introduc comput smaller college university progress report technical mean routine computer service smaller college university provid remote terminal central facility access effective organization education methodology introduc comput institution develop experience year statewide network involve institution discuss lessons include importance separate organize represent small college necessity campus train institution ne special programm documentate support usersand development curriculum evolutionary mean 
.I 1890
simulate traffic flow network computer simulate program deal traffic flow network large area describ road segment block ten meter length represent bidirection list computer memory movement cars transfer cars block express proper formula formula bas supposition spe cars block determin density cars block spe versus density curve empirical numerical simulate scheme excellent point make trace dynamic behavior traffic flow variety situations actual area city kyoto japan 
.I 1891
dimensional computer display stereographic display terminal produc raster display brad recent develop brookhaven system rotate refresh memory fe standard television monitor produce stereographic display computer calculate project video image object view separate point result video map stor separate refresh band rotate memory output signal connect separate color guns color television monitor create superimpos image screen optical separate achieve view image color filter display interactive view large group people time 
.I 1892
degree multiprogramm page demand system simple stochastic model describ offer base understand relationship number program permitt share memory degree multiprogramm drum traffic rate central process unit utilize page demand multiprogramm time shar computer system model preserve key feature property page demand statistic imply burst page demand beginn job quantum execution model markov chain analyz numerical result present graphical wide range key environment descriptive parameter implications result time shar system design programm discuss calculate optimal degree multiprogramm wide range parameter present graphical 
.I 1893
root polynomial root squar resultant routine algorithm 
.I 1894
normal random deviate algorithm 
.I 1895
gaussian quadrature formula algorithm 
.I 1896
regular coulomb wave function algorithm 
.I 1897
coulomb wave function algorithm 
.I 1898
regular coulomb wave function algorithm 
.I 1899
simplex method procedure employ lu decomposition algorithm 
.I 1900
clarificate fortran standard initial progress year effort fortran programm language standardize unit state initial achievement study applicate standard specifications reveal ne maintenance standard result work initiate initial set clarify interpretations prepar nature maintenance correction standard specifications complet interpretations report 
.I 1901
dynamic space shar computer system formalize relationship space shad program behavior processor efficiency computer system present concept cost space allocate task defin cost combin develop single parameter term unit cost intent illustrate analytic approach investigate problem space shar demonstrate method sample problem 
.I 1902
automatic grad scheme simple programm exercises discussion alterations made typical university operate system record result programm exercises language includ assemble language computer controll grad scheme provision made test programmer suppli data final run system suppli data exercises run scheme mix program special recognition exercises operators 
.I 1903
chebyshev interpolate quadrature formula high degree 
.I 1904
rough ready error estimate gaussian integrate analytic function 
.I 1905
simplex method linear programm lu decomposition standard computer implementations dantzigs simplex method linear programm bas form inverse basic matrix update inverse step method implementations bad round error property paper give theoretical background implementate bas lu decomposition comput row interchange basic matrix implementate slow good round error behavior implementate cacm algorithm 
.I 1906
automate print circuit rout stepp aperture computer program rout interconnections sid print circuit board regular pattern line pins terminal fe holes describ program interconnection plann rout typical upper pin horizontal lower pin top virtual aperture long horizontal slit stepp board plann rout basis rerout interconnection aperture resolve conflict line aperture maximize effective line usage conflict resolve aperture arrive lower pininterconnections delet resolve conflict extension technique control crosstalk rout interconnection problem obtain percent interconnect discuss 
.I 1907
note reliable full duplex transmission half duplex link simple procedure achieve reliable full duplex transmission half duplex link propos scheme compar type recent describ literature final comment made group relate transmission procedure shown unreliable circumstances 
.I 1908
time shar batch process experimental comparison problem solve situate experimental comparison problem solve time shar batch process computer system conduct mit describ paper study known attempt evaluate system predominant user populate decade professional nonprogrammer computer aid decision mak problem solve programm end statistical logical significant result equal cost usage computer system higher level performance attain time shar user indications significant lower cost result time shar user stopp work reach performance level equal batch user user spe problem solve attitude made time shar favorable system 
.I 1909
computate jnx numerical integrate shown practical compute jnx numerical integrate integral representate trapezoidal rule error approximate studi empirical 
.I 1910
algorithm solve special class tridiagonal system linear equations algorithm present solve system linear equate buk tridiagonal special form shown algorithm fast gaussian eliminate method usual suggest solve system addition explicit formula inverse determinant matrix 
.I 1911
coordinate reduction sentence analysis class coordinate phenomena natural language consider frame work transformation theory account phenomena propos machinery add syntactic component transformation grammar machinery include rule schemata condition appli condition determin sequence subtrees perform solution syntactic analysis problem class grammar outlin precise specificate generative procedure paper inverse form lisp function definition 
.I 1912
simulate outpatient appointment system experimental computer program describ simulate appointment system employ outpatient department hospital major kind appointment system individual block simulate purpose simulate enable user evaluate effectiveness alternative appointment system clinical environment 
.I 1913
polygamma function arbitrary precision algorithm 
.I 1914
matrix scal integer programm algorithm 
.I 1915
algorithm hidden line eliminate algorithm present eliminate hidden line representate perspective view concave convex plane fac object picture plane edge object consider sequential plane hide point edge found comput time increase roughly square number edge algorithm take advantage reduc number concave point automatical recognize object concave point consider case result obtain simpler 
.I 1916
analysis boolean program model time shar pag environment direct graph associate matrices frequent represent logical structure sequence computer instruction technique addition data reference represent nondirect model complete structural specificate program represent combin model transformate combin model yield model addition tim informate analysis model prior execution yield informate valuable determin segmentate instruction data time shar environment initial page load dur execution analysis look ahead control page turn 
.I 1917
algol procedure fast fourier transform arbitrary factor algorithm 
.I 1918
distribution indistinguishable object distinguishable slots algorithm 
.I 1919
efficient algorithm sort minimal storage algorithm 
.I 1920
test probability algorithm 
.I 1921
algol convolution procedure bas fast fourier transform algorithm 
.I 1922
propos usa standard data communicate control procedure usa standarad code informate interchange 
.I 1923
pseudofiles approach system interface high level language basic inputoutput support facility describ shown technique provide potential inexpensive method program communicate deeply embedd facility command language processor 
.I 1924
organize matrices matrix operation pag memory system matrix representations operation examin purpose minimize page fault occurr pag memory system shown carefully design matrix algorithm lead enormous savings number page fault occurr small part total matrix main memory time examinate addition multiplicate inversion algorithm show partition matrix representate submatrix partition page case induc fewer page fault row row representate number page pulls requir matrix manipulate algorithm studi function number page main memory algorithm 
.I 1925
concept contour map process generalize technique simplify solution problem relate contour map technique make topological property contour map topology represent graphical structure adjacent contour line connect node generalize technique consist utilize geometrical property determine characteristic straight line drawn contour map technique appli problem locate ground track aircraft elevate readings obtain dur flight 
.I 1926
description format text process program format production program facilitate edit print finish document direct printer relative small computer system feature good performance total free form input flexible formatt capability includ column page automatic capitalize aid index construction minimum nontext item written entire fortran iv 
.I 1927
informate science phd computer science program report recommendations sample course curriculum general area informate organize informate system design phd computer science program subject area briefly describ follow list desirable graduate level course suitable bibliography append 
.I 1928
exclusive simulate active digital network technique simulate detail logic network large active digital system describ essential objective sought improve ease economy model generate economy execution time space facility handl simultaneous activity main result obtain clear separate structural behavioral model description reduction task convert boolean logic structural model eliminate process achieve exclusive simulate active event schedul technique deteriorate economy event queue grow length simulate procedure deal effective mixture serial simultaneous activity passage time simulate precise quantitative fashion system simulate combination synchronous asynchronous logic aspect technique describ simulate network structure digital network 
.I 1929
image computer microfilm plotter digital computer wide process informate data kind includ pictorial informate photographs graphical representations efficient conversion facility putt graphical informate computer retrieve graphical form need commonly employ device obtain permanent graphical output digital computer microfilm plotter regrettable present model provision produc image continuous gray scale half tones note programm technique describ obtain half tone picture microfilm plotter control digital computer illustrative method 
.I 1930
extreme portable random number generate extreme portable subroutine need moderate qual efficiency suffice typical occur library function random number generate core sort entire universal standardize literature random number generators algorithm meet requirement sort extreme portable line fortran program provid bas important paper coveyou macpherson method fourier analysis appli probable function consecutive tuples provid generate equal small modulus maintain portable prevent qual generate high generate compare bound establish mention paper 
.I 1931
interval arithmetic determinant evaluate test chebyshev system recent paper hansen hansen smith shown interval arithmetic ia effective bound error matrix computation present paper method propos hasen smith compar straightforward ia determinant evaluate computation result show accuracy runn time expect ia determinant evaluate applicate ia determinant program test set function form chebyshev system present 
.I 1932
logarithmic error newton method square root problem obtain optimal start calculate square root newton method consider point relative error measure goodness fit optimal result obtain initial approximate fit shown call logarithmic error initial fit optimal type error logarithmic error simplify problem determin optimal initial approximate 
.I 1933
cod lehmer pseudo random number generate algorithm cod technique present quick evaluate lehmer pseudo random number generate modulo prime mersenne number produce number bit greater computer computate method extendible limit problem modular arithmetic prime factorize primitive root largest prime mersenne number construction pseudo random number generate increas cycle length 
.I 1934
arithmetic expression tree description tree represent evaluate arithmetic expression drawn number accumulators need computate represent straightforward manner representate reduce choice order computate specific problem theory graph algorithm solve problem present 
.I 1935
randomize binary search technique mathematical model develop mean variance number trial recover document randomly receive list search method describ binary nature offer potential informate retrieval system 
.I 1936
variable length tree structure minimum average search time sussenguth suggest paper organize double chain tree structure search update frequent structure provide compromise fast searchslow update characteristic binary search slow searchfast update characteristic serial search method limit restriction terminal node lie level tree paper consider effect relax restriction tree property priori filial set node defin studi prove cod node filial set respect number terminal node reachable sufficient guarantee minimum average search time general case entire structure tree changeable treate procedure develop construct tree minimum average search time simple clos expression minimum average search time obtain function number terminal node storage capacity requir implement double chain tree structure digital computer determin final total cost structure sussenguth cost criterion comput shown significant improvement average search time total cost obtain relax sussenguth restriction terminal node lie level tree 
.I 1937
codas data display system codas customer orient data system user orient data retrieval display system command language system provide user easy mean data retrieval display request data display table graph produc format ready publicate paper statement request language general system design describ 
.I 1938
criteria time shar system performance time shar system defin article multiaccess system permit terminal user utilize essential full resource system shar time terminal user terminal user able utilize full resource system make quantitative evaluate time shar system difficult criteria describ successfully perform level quantitative time shar system performance evaluate 
.I 1939
direct random generate sentence problem produc sentence transformation grammar random generate create phrase structure tree input lexical insertion transformation phase discuss pure random generate produce base tree block transformation frequent long practical interest solution offer form computer program allow user constrain direct generate simple powerful device restrict subtrees program direct random generate accept input subtree restriction produce tree satisfy restriction ready phase grammar underly linguistic model noam chomsky present aspect theory syntax program written fortran iv ibm part unifi computer system transformation grammar partial grammar english 
.I 1940
calculate polynomial derivative horner scheme algorithm 
.I 1941
distribution algorithm 
.I 1942
find solution function equations unknown algorithm 
.I 1943
complete elliptic integral algorithm 
.I 1944
student distribution algorithm 
.I 1945
role programm phd computer science program general paper role programm advanc graduate train discuss subject matter relate programm programm se consider importance applicate formal consider ne good empirical experimentate outline sequence course includ subject headings obtain extensive bibliography bibliography programm reference includ 
.I 1946
comput polynomial resultant bezouts determinant collins reduc prs algorithm algorithm comput resultant polynomial variable key repetitive step computate solve system polynomial equations eliminate studi determin algorithm computer implementate depend extent extraneous factor introduc extent propagate error caus truncate real coefficient memory requirement comput spe preliminary considerations narrow choice algorithm bezouts determinant collins reduc polynomial remainder sequence prs algorithm detail test perform sample problem conclusive show bezouts determinant superior respect univariate polynomial case collins reduc prs algorithm faster bezouts determinant prove strikingly superior numerical accuracy display excellent stable regard round error result test report detail 
.I 1947
object code optimize method analyz control flow data flow program dur compilate appli transform program improve object time efficiency dominance relationship statement necessarily execut global common expression eliminate loop identificate implementate optimizations fortran describ 
.I 1948
computer group theory survey computer appli increasingly diverse range problem group theory important area applicate present coset enumerate subgroup lattice automorphism group finite group character table commutate calculus group theory program range simple combinatorial numerical program large symbol manipulate system survey important algorithm describ contrast result obtain exist program extensive bibliography includ 
.I 1949
finiteness assumption intellectual isolate computer scientist 
.I 1950
efficient handl binary data 
.I 1951
estimate distribution random variable computer communications traffic model study multiaccess computer communications characterize distribution underly elementary model user computer interactive process model elementary sense random variable general interest computer communications study decompos element model data examin operation multiaccess system model shown robust variable model distribution independent system examin shown gamma distribution describe discrete variable approximations gamma distribution exponential distribution discuss system studi 
.I 1952
index subject algorithm 
.I 1953
exponential integral eix algorithm 
.I 1954
eigenvalue eigenvectors real symmetric matrix algorithm 
.I 1955
characteristic associate solution mathieus differential equate algorithm 
.I 1956
optimum merg mass storage algorithm display yield merge order total read time defin sum seek time data transfer time minimize sort mass storage analysis parameterize term ratio seek time time take fill core record size unit core length appli convention cpumass storage combinate explicit formula total read time derive term parameter correlate total read time calculate optimum merge order yield algorithm formula involve root simple transcendental equate short table root includ numerical result graphical display wide range parameter found normalize read time optimum merg hardware configurate proportion length time logarithm length 
.I 1957
list set generate construct evaluate set expression list set generate defin algorithm list set generate construct add list process system system handle set efficient generate set result expression involve set set operators efficiency derive evaluate expression parallel evaluate subexpression set arrive final result 
.I 1958
improve round runge kutta computation gills method runge kutta gill scheme common bas incomplete adaptate floate point operation gill method improve version reduce round error significant note heart scheme present fortran language shown improve version method obtain addition fortran statement version significant improvement numerical compar includ 
.I 1959
interrupt bas organize management informate system programm structure language construct supervisory system organize propos design cod large shar data base system base organize generalize interrupt structure newly introduc concept tagg process associate program structure interrupt generate condition item data base algorithm resolve conflict arise schedul interrupt process routine present dpl programm language supervisory system concept implement illustrate organize propos management informate system 
.I 1960
process management resource shar multiaccess system esope main design principle multiaccess system esope describ emphasis plac basic idea underly design implementate detail main feature system include able user schedule parallel process system primitive operation memory relationship allocate schedul policy dynamical take account recent informate user behavior 
.I 1961
efficient search algorithm find elementary circuit graph theoretical efficient search algorithm present exhaustive search find elementary circuit graph algorithm easily modifi find elementary circuit attribute length rigorous proof algorithm applicate empirical bound present relate spe algorithm number vertices number arcs spe relate number circuit graph give relate spe complexity extension undirect graph discuss 
.I 1962
groove program compose store edit function time program make create stor reproduc edit function time describ function typical generate human beings multiple function produc long period time hour sufficient high sampl rate describe fast human reaction sample function variety purpose control machine tool sound synthesizers anyth person normal control program operate small computer ddp function stor disk function create real time human input computer interact stor function comput function real time feedback process controll important link system environment effective man machine interaction carefully nurtur 
.I 1963
condition number pei matrices 
.I 1964
comment work set model program behavior 
.I 1965
correction logical arithmetic computer complement binary arithmetic 
.I 1966
generalize method generate argumentfunction 
.I 1967
improve algorithm produce complex prime algorithm 
.I 1968
eigenvalue eigenvectors real general matrix algorithm 
.I 1969
increas efficiency quicksort algorithm 
.I 1970
unrecord magnetic tape informate interchange track cpi nrzi cpi pe propos american nation standard 
.I 1971
record magnetic tape informate interchange cpi phase encod propos american nation standard 
.I 1972
nonrecursive list compact algorithm simple nonrecursive list structure compact scheme garbage collector suitable compact lisp list structure present algorithm avoid ne recursion partial structure built track list copi 
.I 1973
linear quotient hash code method hash cod present shown possess desirable attribute specifical algorithm simple efficient exhaustive need time probe probe lookup performance data implementate hints 
.I 1974
neater pli source statement reformatter neater accept pli source program operate produce reformatt version logical mode neater logical structure source program indentate pattern output logic error discover neater logical analysis discover economical compilate trial run number option give user full control output format maximize utility neater aid dur early stage development pli source deck option usage neater insert logical unit cod statement case number time execut record dur execution feature expect provide major aid optimize pli program 
.I 1975
multiple precision division algorithm generalize division algorithm positive integral operands present depend algebraic relationship ciphers divisor adjustment original divisor dividend perform division operate initiate uniqueness method trial cipher quotient equal greater final replacement 
.I 1976
multi attribute retrieval combin indexes paper organize scheme design replace popular secondary index fil scheme invert secondary key field describ redundancy stor key access number record satisfy combination secondary index buckets retrieve key satisfy input query derive subset field single access index bucket combination combinate bucket requir query method degenerate case convention secondary index fil scheme work similarly follow advantage eliminate multiple access case eliminate false drops eliminate computer time perform intersection key set qualifi secondary index field avoidance long strings key index field query redundancy case secondary index method general case trade number access query redundancy exist 
.I 1977
interactive display approximate linear programm interactive program graphical display develop approximate data mean linear combinate function includ spline select user coefficient approximate determin linear programm minimize error infinity norm auxiliary condition monotonicity convexity approximate impos interactive system describ 
.I 1978
interactive graphic solve numerical problem advent line time shar computer system graphic terminal dimension numerical problem solve capability simply power achieve fast turnaround develop interactive routine easy take advantage insight visual capability human problem solver line system general purpose mathematical problem solve implement special purpose system solve problem area ordinary differential equations advantage restrict problem area interface user great simplifi paper discuss advantage accru system design considerations interactive routine implementate line square data fitt program peg present result obtain empirical data conclusion area future work field discuss 
.I 1979
numerical inversion laplace transform algorithm 
.I 1980
efficient algorithm sort minimal storage algorithm 
.I 1981
normal curve integral algorithm 
.I 1982
modifi havie integrate algorithm 
.I 1983
spann tree algorithm 
.I 1984
tableless date conversion algorithm 
.I 1985
integer programm problem algorithm 
.I 1986
student quantiles algorithm 
.I 1987
student distribution algorithm 
.I 1988
formal translate interaction formal present describ action processor programm language compiler interpreter assembler interaction complex system compiler compiler extendible language formal define answer question bootstrapp meta compiler metaphase interpretive addition algorithm present decid system produc set component processor 
.I 1989
transition network grammar natural language analysis augment transition network grammar analysis natural language sentence describ structure build action associate arcs grammar network allow reorder restructur copy constituent produce deep structure representations type normal obtain transformation analysis condition arcs allow powerful selective rule meaningless analyses take advantage semantic informate guide pars advantage model natural language analysis discuss detail illustrate implementate experimental pars system transition network grammar briefly describ 
.I 1990
numerical constant algorithm 
.I 1991
number automorphism singly generate automaton 
.I 1992
comment bell quadratic quotient method hash code search 
.I 1993
regular coulomb wave function algorithm 
.I 1994
decision table translate algorithm 
.I 1995
special series summate arbitrary precision algorithm 
.I 1996
system hyperbolic pde algorithm 
.I 1997
increas efficiency quicksort method present analysis generalizations quicksort average asymptotic number comparison need shown logn formula derive express term probable distribution bound partition formula assume simple form generalize consider hoare choice bound median random sample main contribution paper generalize quicksort bound interval single element bound generalize turn easy implement computer program numerical approximate show version quicksort compar original imply decrease number comparison percent actual test show percent save comput time 
.I 1998
complex matrix inversion versus real comparison complex matrix real matrix inversion made shown complex inversion fast real inversion round error bound complex inversion eighth real gaussian eliminate extend product accumulate bound half real system 
.I 1999
optimal start approximations generate square root slow divide machine slow division preferable iterative scheme square root classical heron scheme problem optimal initial approximants consider optimal polynomial initial approximations tabulate 
.I 2000
variate goodman lance method solution point boundary problem recent publish method interpolative solution nonlinear equations improve appli give significant variate goodman lance method solution point boundary problem result method apply numerical solution optimal control problem euler lagrange formulate quantitative estimate present variate nearly fast problem context 
.I 2001
integrate square root differential equate fy difficult integrate numerical singularity point fy vanishes simple trick remove singularity 
.I 2002
amesplot higher level data plott software system amesplot extensible software system design make display data simple painless neat system describ hardware independent implement variety installations manufacturer diverse configurations element common type data plot outlin element combin system bas simple module demonstrate module specifi independent independent axis system attribute plot enable plot complexity construct add replac module basic syntax amesplot outlin description utility software consist macro produce scal plot formal tablet text interspers subplots map coastlines plot system formulate user supply minimum informate fully integrable user program written convention higher language function position locate scal layout multiple subplots axes label element plot handl automatical software system user structur plot multiple independent subplots describ transformate projection scal rotate shift entire plot subplots action simple module user interact free amesplot level enable construct data markers alphabetic character transformation produce variety artistic effect 
.I 2003
interactive software system computer aid design applicate circuit project characteristic interactive software system intend constitute interface designer computer dur step design process present main emphasis description feature high level user orient language operate level interaction bas imol interactive monitor language design perform control function software system design criteria provide user command simple efficient order perform function need computer aid circuit design coif circuit orient graphic language design describe generate manipulate graphic problem specifications extension fortran graphic type variable designer familiar fortran ne learn language applicate computer aid circuit design examin hand adopt design criteria provide sufficient general extend language computer assist applications 
.I 2004
procedure generate dimensional half ton computer graphic presentations description algorithm produc computer generate half tone presentations dimensional polygonal surface structure algorithm achieve significant increase spe computate warnock algorithm develop university utah implement coordinate science laboratory cdc computer system university illinois history lead algorithm development algorithm describ result present compar computer run achieve warnock approach extension procedure variable position illuminate source 
.I 2005
propos revision american nation standard rectangular holes twelve row punch card 
.I 2006
propos american nation standard 
.I 2007
algorithm policyrevis august 
.I 2008
gaussian quadrature formula algorithm 
.I 2009
simpson rule multiple integrate algorithm 
.I 2010
unitary symmetric polynomial algorithm 
.I 2011
sequency order walsh function algorithm 
.I 2012
binary order walsh function algorithm 
.I 2013
rademacher function algorithm 
.I 2014
function minimize linear search algorithm 
.I 2015
technique generate optimal floyd evans production precedence grammar technique develop generate optimal floyd evans production precedence grammar graph formulate problem merg production production generate correspond minimum cost inverse arborescence graph validity technique demonstrate weak precedence grammar defin production mechanical generate precedence grammar modifi correct optimal parser obtain 
.I 2016
instrumentate multics array measur tool devis aid implementate prototype computer utility discuss tool include special hardware clock data channel general purpose programm prob record tool specialize measurement facility measurement interest system combines demand pag multiprogramm describ detail insight effectiveness lack individual tool provid 
.I 2017
sort pag environment sort study part extensive measurement project undertaken mx experimental pag system conceive implement ibm research order explore virtual machine concept study concern implementate sort procedure context dynamic pag environment characteristic virtual memory machine description experimental sort program analysis performance measurement result obtain present insight gain experimental effort arrive set broad guidelines writ sort program pag environment 
.I 2018
full table quadratic search scatter storage quadratic residue search method hash table avoid cluster experienc linear search method simple quadratic search access half table shown length table prime form integer table access quadratic searches separate access original entry point search method present computational simple advantage quadratic search access table sweep 
.I 2019
normalize technique hand print numerals family pattern standardize technique bas geometrical projection appli digitize hand print numerals obtain sale clerks principle involve transform quadrilateral specifi term convex hull pattern square amount overlap class character versus amount class evaluate degree normalize achieve respect publish method includ size shear normalize moment 
.I 2020
allocate computer resource pric answer widespread complex generate comput system broader concern mean resource system allocate user community mean suggest frequent pric procedure paper manner allocate comput resource consider extent pric mechanism fit mold discuss pric serve rate mechanism time considerate mean price adjust flexible order make dynamic allocate resource considerate mean user insulate harmful effect frequent price fluctuations subject pric lot attention recent number misconceptions persist purpose operate attempt made clarify misunderstandings highlight advantage disadvantage highlight advantage disadvantage pric illustrative pric system discuss order demonstrate applicable pric environment 
.I 2021
comment axiomatic approaches programm 
.I 2022
note anomaly pag 
.I 2023
note data base deadlock 
.I 2024
comment paper lowe 
.I 2025
student distribution jacobi polynomial modifi romberg quadrature factorial analysis variance algorithm 
.I 2026
exponential integral algorithm 
.I 2027
ricatti bessel function kind algorithm 
.I 2028
greatest common divisor integer multiplier algorithm 
.I 2029
exponential integral algorithm 
.I 2030
context sensitive pars paper present canonical form context sensitive derivations pars algorithm find context sensitive analysis amount memory requir algorithm essential requir store single complete derivate addition modifi version basic algorithm present block infinite analyses grammar loop algorithm compar previous parser context sensitive grammar general rewrit system difference type analyses discuss algorithm complementary algorithm kuno respect includ space time trade degree context dependence involve 
.I 2031
algorithm bound greatest common divisor integer version euclidean algorithm find greatest common divisor integer ai multiplier xi gcd xa xnan present number arithmetic operation number storage locations linear theorem lame give bound number iterations euclidean algorithm integer extend case integer algorithm construct minimal set multiplier present fortran program algorithm comm acm algorithm 
.I 2032
structure hash function general method structur propos hash function define tree structure type tree examin relate tree studi past explainedresults probable distribution path length derive illustrate 
.I 2033
spacetime trade hash cod allowable error paper trade computation factor set message hash cod method examin compar convention hash cod method computation factor consider size hash area space time requir identify message nonmember set reject time allowable error frequency method intend reduce amount space requir hash cod informate associate convention method reduction space accomplish exploit small fraction error commission tolerable applications applications large amount data involve core resident hash area consequent feasible convention method applications envisag performance improve smaller core resident hash area conjunction method secondary time consum test catch small fraction error associate method discuss illustrate area applicate method analysis paradigm problem demonstrate allow small number test message false identifi member set permit smaller hash area increas reject time 
.I 2034
mobile programm system stage stage level bootstrap sequence easily implement computer flexible provid stage summarize implementate technique made stage runn machine man week effort discuss approach successful machine wide vary characteristic 
.I 2035
conversation access word machine lap line system runn word linc provide full facility text edit automatic fil maintenance program preparate assemble focuses preparate edit continuous display character text strings manuscripts position user edit simply add delet line work direct elastic scroll feature uniform command set augment user machine small aid program design provid display scope premark randomly addressable linc tape standard item environment similar sophisticate terminal tape logical similar disk priority design efficient tape algorithm minimize limitations small memory technique develop handl scroll edit fil layer system structure outlin lap people country design strongly influenc performance criteria establish interviews held linc user dur specificate period 
.I 2036
interactive command generate facility facility permit conversational controll task execut noninteractive environment propos mean program generate interactive time shar command receive correspond output response present command invok typ console keyboard argu facility help overcome limitations man computer communicate set function accomplish embedd str process language suggest informate pertinent implementate facility exist time shar system 
.I 2037
permutations set repetition algorithm 
.I 2038
combination object algorithm 
.I 2039
permanent function square matrix ii algorithm 
.I 2040
modifi romberg quadrature algorithm 
.I 2041
shellsort algorithm 
.I 2042
treesort algorithm certificate algorithm take form proof algorithm correct illustrative practical algorithm treesort sort array prove correct 
.I 2043
eigenvalue eigenvectors real symmetric matrix algorithm 
.I 2044
permutations set repetition algorithm 
.I 2045
combination object algorithm 
.I 2046
relation model data large shar data bank future user large data bank protect know data organize machine internal representate prompt service supply informate satisfactory solution activity user terminal applicate program remain unaffect internal representate data chang aspect external representate chang change data representate need result change query update report traffic natural growth type stor informate exist noninferential formatt data system provide user tree structur slight general network model data section inadequacy model discuss model bas ary relation normal form data base relation concept universal form data base relation concept universal data sublanguage introduc section operation relation logical inference discuss appli problem redundancy consistency user model 
.I 2047
incorporate origin shift qr algorithm symmetric tridiagonal matrices qr iterate eigenvalue symmetric tridiagonal matrix accelerate incorporate sequence origin shift origin shift subtract direct diagonal element matrix incorporate mean implicit algorithm method drawback direct method unnecessarily degrade small eigenvalue implicit method effective loose shift retard convergence paper present method drawback 
.I 2048
comparison adaptive newton cotes quadrature routine evaluate definite integral peak integrands report compare performance adaptive quadrature scheme bas newton cotes point rule approximate set definite integral integralx dx relative accuracy 
.I 2049
accurate floate point summate paper describe alternate method summ set floate point number comparison error bound method standard summate method show considerable sensitive propagate round error 
.I 2050
automatic pars content analysis automatic syntactic semantic analysis unrestrict natural language text applications content analysis stringent coverage requirement preliminary study show harvard syntactic analyzer produce correct unambiguous identificate subject object verb approximate half relevant occurrence provide degree coverage content analysis variable compare favorable method variable compare favorable method sample total text normal process 
.I 2051
pli program assist comparative linguist practical pli program describ assist comparative linguist determine regular sound correspondence genetical relate language investigate arrange data input align pair suspect cognates program tabulate correspondence list process technique sort count pair word assign relative function total frequency data correspondence found pair word output list correspondence type frequency occurrence data separate list correspondence word pair show correspondence relative arbitrarily chosen cutoff point article explain usefulness limitations program illustrate small portion hypothetical data 
.I 2052
schedul reduce conflict meetings conflict schedul treate defin undirect linear graph independent relate activity conflict addition constraint time space connect component graph found algorithm describ gotlieb corneil correspond set event schedul time 
.I 2053
conversion decision table computer program execution time diagnostic pinpoint ambiguity decision table discuss point attempt resolve ambiguity compile time general impossible shown consequence tree method convert decision table program inadequate regard ambiguity detection algorithm programm decision table merit simplicity implementate detection ambiguity execution time present algorithm limit entry decision table clarify importance proper cod informate decision table algorithm program mix entry decision table direct intermediate step conversion limit entry form result storage economy comparison algorithm propos literature made feature decision table fortran iv translate ibm develop author 
.I 2054
feasible voice input line computer process system line digital computer process system consider ordinary telephone complete terminal device input computer provid sequence spoken word output user audio response machine feasible implement system fortran algebraic compiler object processor consider detail specific word recognition program technique depend simplify restriction small vocabulary set known speakers moment silence input word experimental result present give error rate experimental condition machine resource requir accommodate user time result show time economical logical feasible handle user time ibm computer 
.I 2055
subroutine perform situ transposition rectangular matrix algorithm 
.I 2056
gomory algorithm 
.I 2057
random vector uniform solid angle algorithm 
.I 2058
situ transposition rectangular matrix algorithm 
.I 2059
language treate graph language representate graph describ formulate graph operation node andor link deletion insertion union intersection comparison traversal graph graph represent link list language syntactical defin extension algol translate algol mean syntax driven compiler applicate area language operate research network problem control theory traffic problem 
.I 2060
gedanken simple typeless language bas principle completeness reference concept gedanken experimental programm language follow characteristic permitt context language permissible meaningful context function label permissible result function variable assignment indirect address formalize introduc call reference turn possess assignment operate affect relate reference compound data structure treate function type declarations permitt function approach data structure reference insure process accept data structure accept logical equivalent structure regardless internal representate general data structure implicit specifi give arbitrary algorithm comput access component existence label variable permit construction coroutines quasi parallel process unorthodox control mechanism variety programm illustrate general language limitations extension discuss briefly 
.I 2061
algorithm construction bound context parser algorithm describ accept arbitrary context free grammar construct bound context parser parser exist part paper definition context free grammar work bound context parser recall notion reduction class context free grammar introduc connection structure bound context parser pushdown automata generate reduction class context free grammar defin final algorithm describ essential carry exhaustive study run pushdown automata generate reduction class part utility algorithm discuss ed light experience gain compiler design algorithm claim simultaneous design language compiler 
.I 2062
applicate sequential sampl simulate inventory model sequential sampl procedure appli analysis data generate computer simulate experiment multi item inventory model procedure cost computer time requir achieve level statistical precision calculate cost computer time comparable fix sample size method calculate computer cost fix sample size procedure versus sequential sampl procedure compar 
.I 2063
translate equations errata 
.I 2064
operation generalize array genie compiler operation vector matrices higher dimensional storage array standard feature compiler today element structure usual restrict scalars sophisticate applications restriction impose cumbersome data representations efficient system devis implement allow element multidimensional array multidimensional array system develop storage structure locate length content array describ codeword interpret system code word describe array codeword provid need descriptive informate hyperstructures form 
.I 2065
programm system line analysis biomedical image preliminary description software computer display system special emphasis man machine interaction system intend wide variety biomedical applications method appli karyotyp chromosomes system separate programm task picture transformation maintenance picture structur display management picture structur consider vehicle man machine communicate prototype data format picture call picture form develop structure operators defin manipulate picture form produce picture form idea symbolic mathematical laboratory mit conceive marvin minsky 
.I 2066
algol construction procedure parameter procedure 
.I 2067
comment lawlers multilevel boolean minimize 
.I 2068
comment multiprogramm page demand strategy 
.I 2069
comment paper wallace mason 
.I 2070
formal system informate retrieval 
.I 2071
filon quadrature algorithm 
.I 2072
modifi romberg quadrature algorithm 
.I 2073
solution linear program variable implicit enumerate algorithm 
.I 2074
sqank algorithm 
.I 2075
discretize newton method solve system simultaneous nonlinear equations algorithm 
.I 2076
cubic spline uniform meshes simple procedure present construct cubic spline periodic nonperiodic uniform meshes arcs cubic suffice construct basis cardinal spline algorithm require minimal storage computate permit easy trade 
.I 2077
cyclical majority problem problem cyclical majority present simulate result issue ad judges report 
.I 2078
representations space plann problem involve arrangement object space objective function primarily consist derivative distance object arrangement call space plann problem representation requirement problem area defin compar computer graphic language alternative data structure allow automate space plann describ compar 
.I 2079
multiprogramm machine cod computer organize 
.I 2080
nucleus multiprogramm system paper describe philosophy structure multiprogramm system extend hierarchy operate system suit diverse requirement program schedul resource allocate system nucleus simulate environment program execution inputoutput handl uniformly parallel cooperate process fundamental set primitive allow dynamic create control hierarchy process communicate 
.I 2081
complete calculi matrices matrix calculus introduc intention develop data structure suitable high level algorithmic language mathematical programm paper investigate special structure matrices describ utilize efficient comput save memory space superfluous operation sequence matrices sequence sequence matrices consider matrix operators areext end sequence operators cumulative operators algorithm symbol manipulate matrix expression find form suit computate form call normal form completeness result obtain sense expression equivalent expression normal form found specifi calculus 
.I 2082
syntax direct documentate pl language pl phrase structure grammar concrete basis illustrate idea call syntax direct documentate idea phrase structure program define structure formal documentate program syntactic type identifier result structure trigger automatic formate question programmer answer part documentate provide automatic storage retrieval facility programmer want understand modify program access result documentate cross index syntactic type object small pl program found literature work 
.I 2083
create control internal data base fortran programm environment method describ definition user common structure automatic generate common dimension equivalence type declarations user routine definition common easy modify form allow control general communications data routine describ system implement ibm cdc series ibm method prove invaluable definition control common large scale program 
.I 2084
note complement inherent ambiguous context free language 
.I 2085
comment pag anomaly 
.I 2086
method convert hexadecimal decimal 
.I 2087
number system permutations 
.I 2088
netflow algorithm 
.I 2089
prime number algorithm 
.I 2090
symbolic expansion algebraic expression algorithm 
.I 2091
pdel language partial differential equations convention computer method solve continuous system problem characterize partial differential equations time consum cumbersome convenient easy learn high level problem orient language solve study partial differential equate problem design practical translate language design work version construct significant portion language partial differential equate language pdel outlin highlight translate briefly summarize 
.I 2092
deductive question answer natural language inference question answer aspect protosynthex iii pro totype language process system describ exemplifi detail system written lisp operate time shar system system data structure semantic organize deductive question answer formal relation property complex relate form operators question answer procedure employ feature operate describ illustrate system performance limitations question answer capable present discuss shown semantic informate deductive question answer great facilitate process top procedure work question answer enable effective made informate conclud development protosynthex iii practical system work large data base require change data structure algorithm question answer 
.I 2093
comparison error improvement estimate adaptive trapezoid integrate simple choice error improvement estimate trapezoid rule studi demonstrate comparison procedure relative independent profusion adaptive search stopp strategy comparison bas xr inclusion noninteger power make realistic usual polynomial bas comparison behavior singularity found dominant factor estimate bas constant curvature assumption parametric difference consider slight choice consider 
.I 2094
algorithm nonlinear minimax approximate nonlinear minimax approximate problem characterize property permit applicate special algorithm mainly bas exchange algorithm remes solution paper applicate problem type general nonlinear algorithm due osborne watson consider illustrate algorithm give satisfactory result successfully solve problem lead difficulty convention specialist method 
.I 2095
measurement segment size distribution segment size measur routine operate con ditions computer system utilize variable size segment burroughs discuss strik feature measurement large number small segment percent segment word result certainly installate independent influenc feature algol system relevant design computer system especial respect organize pag scheme 
.I 2096
experiment tree search program procedure improvement mini max back procedure wide computer program game play purpose bas principle desirable option mak decision face uncertainty mini max procedure assign max min node highest lowest valu successor node procedure assign max min node function highest lowest valu successor procedure written lisp play game kalah demonstrate procedure significant superior mini max procedure statistical significance important conclusion informate statistical significance lack paper computer experiment artificial intelligence field experiment serve model future work 
.I 2097
program teach programm teach system develop mit ease cost improve result elementary instruction programm student teach offer loose guid experience conversation language design teach mind faculty involvement minimal term experience teach discuss pedagogical system successful straightforward reimplementate make economical successful similar program profound tutorial skill result extend research outline research beginn clear 
.I 2098
test probability algorithm student distribution algorithm 
.I 2099
eigenvalue eigen vector real general matrix algorithm 
.I 2100
ortho algorithm 
.I 2101
square fit fx acosbxc algorithm 
.I 2102
fitt data exponential algorithm 
.I 2103
restrict partition generate algorithm 
.I 2104
number double restrict partition algorithm 
.I 2105
interactive computer system graphical flowchart input interactive computer system operation graphical computer terminal describ system design demonstrate method programm computer interpretate flowchart user draw description sampl data system description transmitt large scale computer design simulate graphic representate process signal scope successful design require numerous modifications original design graphical interactive system provide environment perform iterative process efficient effective 
.I 2106
computer educate graduate school management year experience belief creative design evaluate management informate system require understand relate computer technology concept pag priority interrupt system explain machine language level machine exposition fulfill criteria raise spurious issue allow undue effort solution interest problem capable expos outstand issue significance capable expos outstand issue significance chosen machine seful pursu issue great depth committ equipment provid manufacturer able provide student diagnostic aid great depth allow student ready access machine capable extension expose issue come construct simulate machine associate software meet criteria system call prism system document primer reference 
.I 2107
quadratic quotient method hash code eliminate secondary cluster secondary cluster hash code inefficiency discuss hash method bas eliminate present comparison previous method made analytical empirical 
.I 2108
variate sort address calculate principle address calculate merg combin yield efficient sort technique detail flowchart important program step includ characteristic propos sort discuss 
.I 2109
quadratic residue research quadratic residue search method previous suggest avoid cluster usual encounter hash address collisions occur linear search method search size property quadratic residue limit half storage table shown class prime number complement set quadratic residue easily determin entire table size prime number search 
.I 2110
efficient context free pars algorithm pars algorithm efficient general context free algorithm known describ similar knuth lrk algorithm familiar top algorithm time bound proportion length str pars general bound unambiguous grammar run linear time large class grammar include practical context free programm language grammar empirical comparison superior top bottom algorithm studi griffiths petrick 
.I 2111
spell correction system program specialize technique shown efficient incorporate spell correction algorithm compiler operate system include syntax semantic informate organize restrict keyword symbol table considerate limit class spell error sample cod perform spell correction present system perform spell correction number debugg run program decreas save programmer machine time 
.I 2112
translate equations input limit transduction expression translate equations describe syntax left context sensitive semantic context free language formal procedure derive set translate equations specifications pushdown translate translate consist mealy form finite state automata interact mean pushdown stack framework describ str recognition pars treate special case translate problem 
.I 2113
multistore parser hierarchical syntactic structure syntactic parser describ hierarchical concatenate pattern present analyzer form linear strings emphasis system significant address mean process time large scale match procedure substantial reduc description make frequent fully operation implementate parser experimental english sentence analyzer structur area computer central core storage individual locations byte bit come represent data involve match procedure shift informate reduc minimum search list eliminate altogether matches trac mean binary mask state single bit determine operation flow procedure method implement interpretive grammar provid express function classificate item compos input hierarchical structure 
.I 2114
formal system informate retrieval generalize structure provid concept keyword index record directory structure directory decod record retrieval defin frequent structure invert index sequential multilist derive algorithm retrieve record generalize structure present 
.I 2115
fortran tausworthe pseudorandom number generate 
.I 2116
interchange roll perforate tape informate interchange propos american nation standard 
.I 2117
representate calen dar date machine machine data interchange propos american nation standard 
.I 2118
efficient algorithm sort minimal storage algorithm 
.I 2119
derivative algorithm 
.I 2120
algorithm produce complex prime csieve algorithm 
.I 2121
partition natural order algorithm 
.I 2122
general random number generate algorithm 
.I 2123
generate random number satisfy poisson distribution algorithm 
.I 2124
numerical inversion laplace transform algorithm 
.I 2125
note minimal length polygonal approximate digitize contour method extract smooth polygonal contour digitize image illustrate order sequence contour point connection graph image obtain modifi ledley algorithm image scan minimal perimeter polygon subject specifi constraint chosen approximate contour determinate minimal polygon reduc nonlinear programm problem solve algorithm take account weak bond variable present correspond comput time list 
.I 2126
experience extensible language operation extensible language system describ system base language apprais respect efficiency flexible utility category user 
.I 2127
natural language question answer system recent experiment programm natural language question answer system review summarize method develop syntactic semantic logical analysis english strings conclud minimal effective technique devis answer question natural language subset small scale experimental system paradigm evolve guide research effort field approaches semantic analysis logical inference seen effective beginnings questionable general respect subtle aspect mean applications large subset english generalize small scale experiment language process system bas dictionary thousands entry correspondingly large grammar semantic system entail order complexity require invention development entire approaches semantic analysis question answer 
.I 2128
processor allocate method time shar schedul algorithm propos intend minimize change task processor reduce head algorithm applicate general resource allocate problem implement mean method efficient handl dynamical chang segment list 
.I 2129
recursive computate derivative study error propagate study made propagate error linear order difference equations recursive computate successive derivative exx xx consider illustrate 
.I 2130
automatic segmentate cyclic program structure bas connective processor tim time shar multiprogramm overlay batch system frequent require segmentate computer program discrete portion program portion transferr executable peripheral storage segmentate program manner reduce frequency transfer subject paper segmentate technique propos ramamoorthy subject limitations arise preferr segment size compatible physical restriction impos comput equipment generalize ramamoorthy suggestion made order allow applicate circumstances ideal 
.I 2131
rapid computate weight interpolatory quadrature rule algorithm 
.I 2132
rapid computate coefficient interpolate formula algorithm 
.I 2133
algorithm assignment problem rectangular matrices algorithm 
.I 2134
extension munkres algorithm assignment problem rectangular matrices assignment problem munkres propos algorithm solution square matrices present author develop extension algorithm permit solution rectangular matrices tim result obtain adapt version silvers algol procedure discuss relate solution time problem size 
.I 2135
rapid computate general interpolate formula mechanical quadrature rule let continuous clos interval ab let linear function attempt made approximate polynomial approximate algorithm develop rapid computate wide class selection include lagrangian hermitian rule special case 
.I 2136
note modificate nordsiecks method step point 
.I 2137
lisp technique pag environment system describ employ block concept global local variable addition method appli lisp system mean list representate local sequential list create dur compilate block level sequential create dynamical garbage collection algorithm introduc make list compact partial garbage collection perform block exit total garbage collection storage exhaust algorithm customary flagg procedure combinate feature eliminate ne free list effective minimize number page moment 
.I 2138
bliss language system programm language bliss describ language design especial suitable writ production software system specific machine pdp compiler operate system prime design goal design able produce highly efficient object code allow access relevant hardware feature host machine provide ration mean cope evolutionary nature system program major feature contribute realize goal mechanism permitt definition representate data structure term access algorithm element structure 
.I 2139
implementate substr test hash technique describ implement test determine str substr low probable test satisfi shown operate speed considerable preced test chosen hash code strings 
.I 2140
retrieval update spe tradeoffs combin indices paper november communications acm lum introduc technique index nam combin indices technique permitt decreas retrieval time cost increas storage space paper examine combin indices condition usage fraction retrieval update tradeoff curve develop show minimal cost usage group partial combin indices 
.I 2141
algorithmic selection method compress map data strings dozen method compress map data illustrate choice generate encod data strings sequence code method direction relationship develop compression alternative avoid compar technique compress data forest resource map wide applicable map photographic data reduction 
.I 2142
reconstruction picture projection situations natural science medicine electron microscopy ray photography desirable estimate gray level digital picture individual point sum gray level straight line projection angle usual situations picture determin problem find representative picture algorithm describ monte carlo method design solve problem algorithm applicable large vari number field important reconstruction asymmetric particle electron micrographs dimensional ray analysis 
.I 2143
chebyshev approximate continuous function chebyshev system function algorithm 
.I 2144
accurate floate point summate accumulate floate point sum consider computer perform digit base floate point addition exponents range algorithm accurate summ digit floate point number number split part form qn digit floate point number add auxiliary digit accumulators final accumulators add yield comput sum qnn digit floate point addition perform usual condition relative error comput sum tvb addition qn digit addition comput sum correct full digit accuracy ibm typical case tvb 
.I 2145
automate etch pattern layout help heuristic etch pattern layout program applicate program develop computerize tedious error prone vital important wir design print circuit board help help automate design stage step closer production logical design design wir pattern layer circuit board ics dual line package discrete component transistors resistors plac help employ method wir heuristic method simulate human approaches wir design theoretical interest time consum method maze runn bas lees algorithm help perform percent requir wir heuristic path respect performance function point point point line connection br number successful wir connection close percent 
.I 2146
optimize polyphase sort dispersion algorithm polyphase sort procedure examinedthe optimum algorithm bas minimize total number unit strings read display logic algorithm complicate dispersion algorithm straightforward logic present simple dispersion algorithm discuss horizontal approximate fourth half percent read writ algorithm today addition fourth percent improvement achieve utilize modifi optimum algorithm algorithm relative straightforward require fairly close estimate total number unit strings dispersion begin 
.I 2147
computer higher educate past recommendations status need data survey conduct nation science foundate support publish december review point regard computer higher educate nation goal state rosser pierce report attain qual lack hardware course nearly half associate bachelors degree program data process computer science offer plea made continu study status goal comput higher educate improvement degree program nation test laboratory education technology 
.I 2148
composition semantic algol main feature algol explain semantic point view shown language permit composition action ultimate program minimum set primitive fundamental recursive rule composition associate syntax briefly review attempt made obtain structur simple introduction algol orthogonal design 
.I 2149
entcaf entcre evaluate normalize taylor coefficient analytic function algorithm 
.I 2150
concurrent control reader writer problem mutual exclusion independent process simultaneous access critical section discuss case distinct class process known reader writer reader share section writer exclusive access solution present case wish minimum delay reader case wish writ take place early 
.I 2151
user program measurement time shar environment general discussion measurement software system follow description hardware software scheme measur user program time shar environment tx computer mit lincoln laboratory implementate system characteristic implementate report scenario show system present final shown time shar system provide similar measur facility 
.I 2152
display procedure structur display widespread interactive computer graphic structure present number problem tend restrict general usefulness paper discuss problem suggest alternative approach display system design avoid structur display technique employ display procedure generate informate display includ transformation call procedure simplify specificate picture spe generate display procedure permit picture element defin conditional facilitate process input point device paper illustrate aversion euler language display procedure implement 
.I 2153
experiment automate instruction system numerical method computer system develop purdue university teach portion undergraduate course numerical method instruction unit lesson divid mode instruction allow student press computer controll presentate student controll investigate system design classroom independent course study semesters student lieu convention classroom instruction initial measure effectiveness student acceptance operation cost result test system independent instructor intervention system operation cdc teletype terminal 
.I 2154
clarificate fortran standard report year effort fortran programm language standardize unit state initial achievement study applicate standard specifications reveal ne maintenance standard result work initiate initial set clarify interpretations prepar clarificate publish communications acm work continu result preparate set clarify interpretations nature maintenance set correction interpretations standard specifications report 
.I 2155
understand data structure paper present notate formal describ semantic data structure bas direct graph nam edge transformation graph addition implementate facility describ part programm language allow programmer express semantic algorithm term graph implementate data structure order gain efficiency 
.I 2156
comment cheneys list compaction algorithm 
.I 2157
average binary search length dense order list 
.I 2158
stopp criterion newton raphson method implicit multistep integrate algorithm nonlinear system ordinary differential equations 
.I 2159
note sid approximations 
.I 2160
canonical structure attribute bas organize structure attribute bas retrieval propos paper allow query involve arbitrary boolean function attribute pair process tak intersection list structure highly dependent unique determin specificate allow query structure retrieval basis range attribute retrieval basis single permitt organize propos bas atoms boolean algebra generate query desirable property claim structure prove maintenance question discuss 
.I 2161
algorithm block cutnodes graph corrigendum 
.I 2162
efficient bit table technique dynamic storage allocate word block efficient bit table technique dynamic storage allocate word block require minimize amount memory bookkeep purpose describ technique test implementate list process language number idea incorporate processor describ 
.I 2163
educate relate computer organization acm curriculum committee computer educate management carry study curriculum development management informate system educate college university grant nation science foundate position paper provide framework study preliminary conclusion present ne educate administrative informate system college curricula course suggest role professional society organization computer discuss plan committee outlin initial approach committee describe educate effective computer organization classify position educate requir survey education program 
.I 2164
symbolic integrate stormy decade approaches symbolic integrate describ artificial intelligence slagles saint large degree moses sin algebraic manipulate manoves implementate horowitz tobeys reexaminate hermite algorithm integrate ration function mathematics richardsons proof unsolvable problem class function rischs decision procedure elementary functionsgeneralizations rischs algorithm class special function program solve differential equations find definite integral describ 
.I 2165
general relative applicate algebraic manipulative system paper describe applications symbolic algebra system problem general relative includ derivate field equations petrov classificate metric solution field equations presence matter simple case attention drawn strict algebraic difficulty encounter work 
.I 2166
automate algebraic manipulate celestial mechanics paper consider applications automate algebraic manipulate made celestial mechanics attention paid poisson series typical problem perturbate theory describ requirement processor celestial mechanics consider compar general manipulate package future direction research system briefly outlin illustrate relative simplicity algorithm requir celestial mechanics typical integrate problem consider appendix 
.I 2167
algebraic simplificate guide perplex algebraic simplificate examin point view user need comprehend large expression point view designer want construct efficient system describe technique akin substitution technique decrease thesize expression make intelligible user delineate spectrum approaches design automatic simplificate capability algebraic manipulate system system divid type type provide facility manipulate simplificate expression final discuss theoretical result relate algebraic simplificate describe positive result existence powerful simplificate algorithm number theoretic conjecture re result nonexistence algorithm class expression includ 
.I 2168
list trac system allow multiple cell type list process system allow single size configurate list cell paper system describ allow arbitrarily size configurations list cell specifi run time 
.I 2169
altran system ration function manipulate survey altran complete system symbolic computate ration function variable integer coefficient design implement handle large problem ease efficiency considerable effort spent ensure minimum amount machine dependence implementate permitt system install quickly easily variety comput machine paper description language run time data structure implementate 
.I 2170
applications symbol manipulate theoretical physics paper survey applications symbolic computate technique problem theoretical physics emphasis plac applications quantum electrodynamics active occurr 
.I 2171
solution simultaneous nonlinear equations 
.I 2172
graph plotter algorithm 
.I 2173
procedure stable marriage problem algorithm 
.I 2174
stable marriage problem original work gale shapley assignment method stable marriage criterion extend find stable marriage assignment algorithm derive find stable marriage assignment prove satisfy condition problem algorithm apply paper 
.I 2175
subexpression order execution arithmetic expression arithmetic expression broken component subexpression depend hardware environment expression execut subexpression evaluate serial parallel combinate mode paper show expression execution time minimize considerate order subexpression subexpression execut order decreas memory processor time requirement observate valid configurations rang uniprocessor unbuffer main memory multiprocessor cache buffer memory number subexpression execut parallel exceed number processor execution subexpression postpon procedure combines requirement earlier order considerations provide optimal execution sequence 
.I 2176
buffer allocate merge sort fix buffer allocate merge sort present minimize number input output operation order merge sort movable arm disk number seek equal number input output operation seek time usual control sort time standard terminology introduc input buffer allocate method describ follow analysis improvement expect convention allocate analysis make distribution function analysis complete distribution yield similar result suggest result depend distribution function optimum output buffer size determin conclud buffer allocate significant reduce time merge sort movable arm disk input data random output buffer allocate data random 
.I 2177
algorithm block cutnodes graph efficient method present find block cutnodes arbitrary undirect graph graph represent order list edge ii pack adjacency matrix denotes word length machine employ storage machine word requir graph node edge increase essential mn case nwin case ii spann tree label edge grown edge final bear label belong block representation time requir analyze graph node increase ng depend type graph bound attain derive suitable family test graph generate extension web grammar approach algorithm compar detail propos read 
.I 2178
language extension graph process formal semantic simple programm language extension graspe process direct graph defin graspe consist type direct graph data structure set primitive operation manipulate structure graspe easily implement embedd host language emphasis plac graspe method definition commonly definition language involve definition syntactic element explanate mean assign semantic definition graspe sole term semantic data structure operation defin precise assignment syntactic representate language implement assignment explicit syntax implementate graspe embedd lisp illustrate advantage disadvantage definition language term semantic discuss 
.I 2179
simple lrk grammar class context free grammar call simple lrk slrk grammar defin class shown include weak precedence simple precedence grammar proper subset construct parser slrk grammar shown parser construction technique extendible cover lrk grammar knuth implement direct comparison prove superior precedence technique range grammar cover spe parser construction size spe result parser 
.I 2180
programmer train project project describ purpose train select black resident albany schenectady area computer programm arrange job computer field organize curriculum course discuss 
.I 2181
state computer orient curricula business school acm committee computer educate management support nation science foundate grant establish appraise state art develop series recommendations improve computer educate management provide committee material study curricular need regional meetings unit state held broad cross section invit academicians practitioners consider state curricula business school topics cover curricula general manager computer relate material requir function course curricula student concentrate computer bas informate system analysis minute meetings reveal common set experience rais similar pedagogic economic issue presentate give summary discussion condensate pedagogic substantive concern rais considerate resource allocate issue involve preliminary committee recommendations improve computer educate management report prepar provide participants administrators institution background informate ongo task course development chairman ten man committee daniel teichroew university michigan 
.I 2182
interrupt driven programm 
.I 2183
binary summate 
.I 2184
mean programm system assum similarity function data programm language operate system function discuss term basic concept order identify extent overlap suggest similarity idea directory storable object type context manipulations context discuss length simple extension churchs lambda notate deal nice idea context manipulate function regard abstraction bas term expression lambdaname listexpressionvalue list found context view abstraction bas term equivalent expression muname listvalue listexpression 
.I 2185
note compil fix point binary multiplications algorithm develop compil sequence shift additionsand subtraction fix point binary multiplications involve constant significant characteristic algorithm simplicity test determine algorithm appli degree suggest efficient object code 
.I 2186
numerical property ritz trefftz algorithm optimal control paper ritz trefftz algorithm appli computer solution state regulate problem algorithm represent modificate ritz direct method design improve spe solution storage requirement point real time implementate feasible modificate shown stable computational tradition ritz approach concern paper describe algorithm establish property valid numerical technique property definiteness reasonableness condition establish method part paper devot comparison technique standard procedure numerical integrate matrix riccati equate determine feedback matrix technique shown significant faster comparable accuracy 
.I 2187
computer science conceptual framework curriculum plann view computer science consider global view attempt capture broad characteristic field relationship field local view focuses structure field structure present term kind knowledge problem activity exist discipline relation approach curriculum plann computer science present guid structure field fact change important feature situate expectate computer science continue increase work contacts discipline 
.I 2188
approach optimum design computer graphic system display system designer fac difficult task select major subsystem intelligent subsystem chosen large number alternative selection bas considerations system response time system cost distribution data storage process graphic processor support data process system work report develop objective quantitative design procedure help give understand configure display system accomplish mean mathematical model computer driven graphic system parameter model function capability graphic hardware computation requirement graphic applicate model analyz numerical queue analysis simulate obtain average response time prediction combin model optimize graphic system configurate subject cost constraint found applications optimum configurations turn find general display system design guidelines 
.I 2189
generate rosary permutations express hamiltonian circuit systematic generate specific class permutations fundamental schedul problem describ nonorient complete graph vertices hamitonian circuit equivalent specific permutations element term rosary permutations defin correspond circular permutations mirror image generate successive number system cover set edge set edge ek ek determin recursive construct hamiltonian circuit vertices hamiltonian circuit vertices start hamiltonian circuit vertices basic operate consist transposition pair adjacent vertices position pair permutate determin ek algorithm treate vertices present easy derive permutations rosary permutations cycl permutations tak reverse order procedure perform fairly efficient computer 
.I 2190
function minimize 
.I 2191
algorithm partial sort 
.I 2192
recursion induction principle inductive method prove things recursive defin function describ shown prove partial function equivalent applicable proof interpreter programm language 
.I 2193
implementate label variable variable label mode conventional implement technique fail trap programm error fine grain calendar clock recent allow implementate label variable technique trap programm error variety 
.I 2194
address short algorithm present minimize sum length block cod produc assembler compiler length computer instruction assum long short long memory locate address predetermin distance locate short block instruction beginnings origin separate prespecifi amount computer permit bit address interpret relative locate counter full bit address memory assemble compil block instruction mutual reference computer simple iterative procedure address short paper demonstrate wide class problem type formulate cover problem solvable mean elementary arithmetic operation column vector ternary matrix 
.I 2195
optimal detection curve noisy picture technique recognize system line present technique heuristic problem embedd recognition algorithm express figure merit multistage decision process able recognize input picture optimal system line accord figure merit due global approach greater flexible adequacy problem achieve relate structure figure merit complexity optimize process discuss method describ suitable parallel process operation relative state comput parallel number stage equal length curve log approximate method 
.I 2196
man machine approach solve travel salesman problem travel salesman problem belong important class schedul rout problem subproblem solve warehouse distribution problem attack mathematical method meager success special form problem problem moderate number point solve exact large amount computer time heuristic procedure propos test slight result paper describe computer aid heuristic technique modest amount computer time real time solve large point problem technique take advantage computer human problem solve ability computer ask solve problem brute force today heuristic ask organize data human human solve problem easily technique paper point direction field man machine interaction field artificial intelligence 
.I 2197
merit regional comput network suggest mean stimulate spread comput capability institution higher learn construction regional comput network network construct san francisco bay area stanford university paper report lesson learn operate network past year major impact network computer power deliver school awaken comput awareness foster capable development school expertise assistance central facility shar idea participants important benefit qual variety service provid central facility found play key role effectiveness network regional network bring benefit judg purveyor raw computer power 
.I 2198
introduction feature analysis generalize data base management system paper separate publish introduction main report analyze feature generalize data base management system introduction give review state art system discuss difference similarity capability found host language system found system discussion problem data independence bindingthe user level identifi describ technical problem fac future designer describ handl exist stor data provid complex data structure convention programm language problem high level interrogate update function act network structure mention follow discussion problem cater high volume transactions initiate terminal parametric user lowest level user cobol basis development work consider length respect data structure host language capability capability section assess effect data base task group proposal final section outline ten major topics main body full report 
.I 2199
sparse matrix package part algorithm 
.I 2200
complement division division algorithm theorem express form permit serve basis devis division operation produce quotient remainder complement form algorithm division yield complement result derive number represent base greater radix radix complementate scheme consider binary form algorithm include complement implementate problem quotient overflow complement result dealt select form remainder condition complement division 
.I 2201
animate line dimensional film animate system animate computer animate system design overcome inherent disadvantage associate convention computer animate techniquesthe dec serve input terminal movie mak allow trial error design picture sequence conversation mode dur stage system input element light pen pushbuttons teletype maintain user request record ibm instruction produce sequence picture generate anticipate primary contribution animate provision facility allow professor produce expository film strips 
.I 2202
dynamic microprogramm processor organize programm dynamical microprogramm processor characterize small bit word read write micro storage access time storage similar cycle time machine nsec microstorage data subroutine micro instruction processor differ convention perform pure combinatorial operation sequenc control microinstruction presence read write microstorage permit flexible assignment resource read storage processor develop paper stress simultaneous operate microinstruction adder shifter masker test facility processor microassemble language develop overhead involve subroutine linkage analyz efficiency flexible software linkage scheme examin overhead subroutine characteristic final problem orient programm consider result cod compar system assemble language version technology normalize 
.I 2203
key address transform technique fundamental performance study large exist formatt result study key address transformate method appli set exist present method appli load factor bucket size vari wide range addition variable pertinent specific method take performance method summarize term number access requir record number overflow record create transformate peculiarity method discuss practical guidelines obtain result state final proposal quantitative fundamental study outlin 
.I 2204
program development stepwise refinement creative active programm distinguish cod usual taught serve exhibit technique consider sequence design decision concern decomposition task subtasks data data structure process successive refinement specifications illustrate short nontrivial number conclusion drawn regard art instruction programm 
.I 2205
difsub solution ordinary differential equations algorithm 
.I 2206
exact solution linear equations residue arithmetic algorithm 
.I 2207
automatic integrate ordinary differential equations integrate technique automatic solution initial problem set ordinary differential equations describ criterion selection order approximate propos objective criterion increase step size reduce solution time option permit solution stiff differential equations program embody technique discuss algorithm 
.I 2208
storage utilize memory hierarchy storage assignment perform hash algorithm utilize storage studi level memory hierarchy storage level fast store divid number storage area entry fil hierarchy hash algorithm attempt place entry area area full entry plac slower level store area level store space entry fil entire hierarchy expression derive expect number entry fil level storethis expression give measure effective level store mean storage utilize studi function hash algorithm number storage area level store divid total size level store 
.I 2209
schedul algorithm computer assist registrate system paper present schedul algorithm computer assist registrate system university tennessee notate defin logic algorithm implement education policy describ result term implementate present 
.I 2210
automatic program synthesis elementary outline theorem prove approach automatic program synthesis dwell technical detail method illustrate automatic construction recursive iterative program operate natural numberslists tree order construct program satisfy specifications theorem induc specifications prove desir program extract proof technique appli transform recursive defin function iterative program frequent major gain inefficiency emphasize order construct program loop recursion principle mathematical induction appli relate version induction rule form program construct explor detail 
.I 2211
scann display computer graphic television scann display system successfully implement honeywell ddp computer installate scann image stor core memory computer software scan conversion convert rectangular coordinate point word bit output display array core storage result flicker free display large amount data reasonable fast graphical interaction scann image size point display frame rate 
.I 2212
distribution 
.I 2213
root matrix pencils generalize eigenvalue problem algorithm 
.I 2214
complex interval arithmetic complex interval arithmetic defin real interval arithmetic complex interval division defin assure smallest result interval 
.I 2215
applicate game tree search technique sequential pattern recognition sequential pattern recognition spr procedure test feature pattern select feature test receive result test procedure classify unknown pattern select feature test medical diagnosis spr paper author suggest spr view person game play nature chance virtual powerful technique develop search person strict competitive game tree easily incorporate direct analogy spr procedure incorporate mini average back procedure gamma procedure analogues minimax back procedure alpha beta procedure respective computer simulate experiment character recognition present result approach promis 
.I 2216
probable distribution binary tree integral equate derive generate function binary tree reflect sort effort analysis assume uniformly distribut branch ratio applicable family sort algorithm discuss hoare singleton van emden solution integral equate advanc algorithm family make minor reduction expect sort effort substantial reduce variance sort effort statistical test thousand tree point moment distribution function satisfactory agreement moment comput generate function empirical test analytical result agreement previous publish result moment case uniform nonuniform distribution branch ratio moment case uniform distribution branch ratio 
.I 2217
experiment automatic learn multipurpose heuristic program automatic learn capable develop implement multiple multipurpose program learn heuristic tree search program present appli resolution theorem prove predicate calculus multiple prove program pp evaluate function guide search proof goal achievable thirteen general feature predicate calculus clause create automatic learn evaluate function pp multiple regression program produce optimal coefficient linear polynomial function term feature automatic data handl routine written pass data learn program prove program analyz summarize result data general collect learn regression analysis experience pp number experiment perform test effectiveness general learn program result show learn produc dramatic improvement solution problem domain collection learn data learn shown generalize successfully domain data collection experiment demonstrate learn program simultaneous improve performance problem specific domain problem variety domain variation learn program test 
.I 2218
analysis time shar technique effectiveness time shar technique program relocate disk rotation delay minimize swap volume minimize investigate summary data present findings discuss vehicle investigate simula bas simulate model reflect early framework plann burroughs time shar system system bas variable size segment dynamic overlay procedure data present provide effectiveness type organize time shar environment design characteristic operation capability simulate model describ 
.I 2219
policy driven scheduler time shar system service receive process time shar operate system characterize resource count sumwirij rij number unit service receive process resource wi cost unit service class user characterize policy function amount service user belong class receive function time priority change dynamical function difference service promis user policy function service actual receive schedul swapp algorithm resource count process policy function provide specifi level service overhead reduc avoid swap process receive level service algorithm implement general purpose operate system provid significant service interactive batch job previous scheduler 
.I 2220
conversion limit entry decision table computer program propos modificate pollacks algorithm pollack propos algorithm convert decision table flowchart minimize subsequent execution time compil computer program modifications algorithm propos relies shannons noiseless cod theorem communications concept entropy complete test rule modificate complete test rule result execution modificate modifications result modificate guarantee global optimal solution 
.I 2221
comment conversion decision table computer program 
.I 2222
comment londons certificate algorithm 
.I 2223
minit algorithm linear programm algorithm 
.I 2224
complex gamma function algorithm 
.I 2225
circular integer partition algorithm 
.I 2226
evidence analysis algorithm programm problem purpose note report computation experience addition recent summarize gue al algorithm linear programm problem error gue paper correct utility algorithm suboptimize 
.I 2227
proof program find proof correctness algorithm find informal description purpose program method systematic technique describ construct program proof dur process cod prevent intrusion logical error proof terminate treate separate exercise final conclusion relate general programm methodology drawn 
.I 2228
comment prevention system deadlock habermanns method deadlock prevention discuss deadlock defin system state resource allocations process shown scheduler introduce artificial deadlock habermanns method prevent permanent block situate process receive resource request shown deadlock prevention necessarily eliminate permanent block method prevent permanent block 
.I 2229
construction ration negative power formal series method describ generate fraction negative power formal series poisson series chebyshev series shown elementary operation addition subtraction multiplicate ration positive negative power series construct basical approaches binomial theorem iterate method method describ relationship point known classical formula obtain case shown convergence property formula improve addition computation final end article numerical experiment describ chebyshev series fourier series 
.I 2230
language treate geometric pattern dimensional space paper cadep problem orient language position geometric pattern dimensional space present language specifical design automatic generate integrate circuit mask turn suit placement problem architecture design urban plann logical block diagram representate design criteria structure specific feature cadep illustrate 
.I 2231
reconstruction binary pattern projection horizontal vertical projection finite binary pattern construct original pattern paper give characterize pattern reconstructable projection algorithm develop reconstruct unambiguous ambiguous pattern shown unambiguous pattern perfect reconstruct time pattern similar ambiguous pattern construct time dimension pattern frame 
.I 2232
pattern width angle pattern feature width function angle possess interpretations demonstrate paper review width concept pattern recognition geometrical concept object work clarify word description made precise computer algorithm feature extraction obtain focus theoretical subject matter result consist set theoretic definition width angle theorem relate pattern boundary radius vector description alternate width width calculate illustrative graphical tabular comparison substantial variate width angle magnitude found principal conclusion set theoretic width angle pattern feature easily comput investigate informate part width function recommend case computate width angle difficult 
.I 2233
signature simulate cryptographic code cyphers allegedly author thomas jefferson beale subject intensive study year generations cryptanalysts expend untold man year success attempt tode code vast armies fortune hunters treasure seekers devot herculean labors digg roll hill virginia try locate promis bonanza history pertinent activity fill volume student cryptography nagg doubts cyphers authenticity alleg known solution cypher number deposit county bedford miles bufords excavate vault aid unsanitize version declarate independence mere superb imaginative grandiose hoax perpetrate ages ago reason modern computer technology obvious perform signature analyses process encod yield clues deeper insight construction benefit uninitiate encod method cypher employ specifi document word simply number consecutive letter word sought random match letter word sought random match letter clear text message sequence number correspond matches written final code primitive process advantage relative security source document known moment cypher decod grader work complet help univac include numerous analytical study beale cypher type simulations turn entire process simulate encod scheme machine analyz signature synthetic code encod message hand text variety method obtain signature simulations provide convinc evidence signature process data dependent strongly mr beale cypher real mere matter time find correct source document locate vault common wealth virginia 
.I 2234
root matrix pencils algorithm 
.I 2235
decision table translate algorithm 
.I 2236
remark characteristic associate solution mathieus differential equate exponential integral system hyperbolic pde algorithm 
.I 2237
bandsolve algorithm 
.I 2238
square surface fit algorithm 
.I 2239
squank algorithm 
.I 2240
pseudo random number algorithm 
.I 2241
product type point gauss legendre simpson integrate algorithm 
.I 2242
product type point gauss legendre simpson integrate algorithm 
.I 2243
product type simpson integrate algorithm 
.I 2244
product type trapezoidal integrate algorithm 
.I 2245
trace driven model analysis cpu schedul multiprogramm system microscopic level job stream data obtain production environment event driven software probe drive model multiprogramm computer system cpu schedul algorithm model systematical vari technique call trace driven model provide accurate replica production environment test variation system time alterations schedul method easily carri controll effect relationship isolate schedul method test includ worst method tradition method multiprogramm theory round robin come serve dynamic predictors relative absolute performance schedul method conclud successful cpu schedul method preemptive prevent job hold cpu long period 
.I 2246
level language portable software increas amount software implement portable form popular accomplish encode software special design machine independent language map language macro processor assemble language desir object machine design machine independent language key factor operate paper discuss relative merit pitch language high level low level present comparative result 
.I 2247
criteria decompos system module paper discuss modularize mechanism improve flexible ad comprehensible system allow shorten development time effectiveness modularize dependent criteria divid system module system design problem present convention unconvention decomposition describ shown unconvention decomposition distinct advantage goal outlin criteria arrive decomposition discuss unconvention decomposition implement convention assumption module consist subroutine efficient case alternative approach implementate effect sketch 
.I 2248
method solution cauchy problem parabolic equations integral equate representate parabolic partial differential equations equations defin unbound domain initial cauchy problem solution integral equate method successive approximate inherent advantage method error bound method order increment size depend finite difference approximations involve 
.I 2249
comparison multivariate normal generators method generate outcomes multivariate normal random vector specifi variance covariance matrix present comparison made determine method require computer execution time memory space utilize ibm method basis standard gaussian random number generate result comparison method bas triangular factorize covariance matrix general require memory space computer time method 
.I 2250
computer method sampl exponential normal distribution corrigendum 
.I 2251
weight increment linear search scatter table linear search hash table increment step function key address present comparison known method term efficiency computate complexity method apply table size allow full table search practical eliminate primary cluster low cost 
.I 2252
method incremental compil language nest statement structure method incremental compilate present apply especial programm language statement nest algol pli method permit edit source language general purpose text editor incremental process change frequent recompilate entire routine essential point method syntax language restrict insof ar construct occur line internal data structure call skeleton maintain represent statement structure recompilate partial batch sense recompilate modifi line occur set edit command receive pars compilate factor part individual line global handle relationship line 
.I 2253
index range matrix calculi paper describe scheme symbolic manipulate index expression arise product symbolic manipulate expression matrix calculi describ author previous paper scheme attempt program optimize transform original algorithm machine code goal automatical generate code handl tedious address calculation necessitate complicate data structure paper preoccupi index position relationship index index position discuss 
.I 2254
dynamic partition array language classical process partition array subarrays extend array language operate mode partition defin type array subarrays vary original array nearly arbitrary manner definition motivate realistic illustrate partition array language general interest data structure partition consist dynamic tree structure derive maintain array control informate describ sufficient detail design array language description present paper implement array language ol development university illinois 
.I 2255
comment moorers music computer composition 
.I 2256
comment dijkstras concurrent programm control problem 
.I 2257
note optimal double chain tree 
.I 2258
addition result key address transform technique fundamental performance study large exist formatt 
.I 2259
modifi incomplete gamma function algorithm 
.I 2260
exact probability contingency table algorithm 
.I 2261
approximate method generate symmetric random variable method generate continuous symmetric random variable relative fast require essential computer memory easy develop method uniform random number source bas inverse function lambda distribution turkey approximate continuous theoretical distribution empirical distribution frequent simulations method simulate practitioners 
.I 2262
garbage collection virtual memory computer system list process typical grow demand space dur program execution paper examine practical implications growth virtual memory computer system propose garbage collection technique virtual memory system compare tradition method discussion simulate 
.I 2263
conversion limit entry decision table optimal optimal flowchart algorithm algorithm derive optimal optimal flowchart limit entry decision table present take account rule frequency time need test condition algorithm call optimum find algorithm lead flowchart truly minimize execution time decision table simple rule contract complex rule call optimum approach algorithm require fewer calculation necessarily produce optimum flowchart algorithm derive treate decision table rule optimum approach algorithm shown equal valid table includ rule algorithm compar exist appli large decision table derive real case comparison conclusion drawn optimum approach algorithm usual lead result comparable exist require usual computate time general greater computate effort need apply optimum find algorithm justifi small reduction execution time obtain 
.I 2264
derive semantic programm language construct construct simple programm language introduc describ informal term side effect translate defin translate language flowchart simple machine action machine execut flowchart defin proof construct effect translate execut program express sole term side effect program dur course construct proof formal definition concept side effect derive order make proof rigorous correctness implementate involve check definition derive step acceptable formalize informal description step 
.I 2265
model type check programm language treat computate class object number strings label function correct compilate execution follow question arise program properly construct operation operands compatible active answer question usual call type check paper attempt isolate notion type check present partial solution type check problem bas notion abstraction applicate function program mapp expression decidable subset lambda calculus characterize type relation program eliminate informate determinate type wise correctness incorrectness program resolve reduc correspond lambda calculus expression normal form constant correct type wise correct program constant error applicate type check algol made attendant problem fac notion type check discuss 
.I 2266
highly parallel algorithm approximate polynomial real algorithm describ bas newton method simultaneous approximate polynomial real algorithm conceptual suitable parallel computate determine start convergence guarante multiple multiplicity readily determin point method polynomial deflate 
.I 2267
algorithm reveal property floate point arithmetic algorithm present form fortran subroutine subroutine compute radix number digit floate point number round chopp machine run method shown work reasonable floate point computer 
.I 2268
comparative study computer program integrate differential equations study compar performance computer program integrate system ordinary differential equations report integrate method represent include multistep method predictor correctors single step method runge kutta extrapolate method polynomial ration test procedure describ evaluate criteria appli set test problem program test includ appendix problem criteria investigate found program bas ration extrapolate show performance 
.I 2269
tableless date conversion algorithm 
.I 2270
interpolate smooth curve fitt bas local procedure algorithm 
.I 2271
aesthetics human factor programm corrigendum 
.I 2272
sort natural selection family sort algorithm propos member make fuller memory space yield longer sort strings extensive simulate result present implications applications discuss 
.I 2273
conversion decision table rule mask method rule mask algorithm generate computer program decision table describ algorithm allow handl limit entry extend entry mix entry table algorithm bas rule mask method ne mask execution time perform logical operation end interpret process execution time considerable reduc instant mark rule applicable algorithm condition test algorithm algorithm combine degree advantage mask method tree method 
.I 2274
generate english discourse semantic network system describ generate english sentence form semantic net node word sense meanings path primarily deep case relation grammar system form network impose order set syntactic transformation express lisp function generate algorithm informate semantic network select generate path grammar system design computation tool allow linguist develop study method generate surface strings underly semantic structure initial find regard form determiners voice form tense mood rule embedd sentence attention pronominal substitution report system programm lisp author 
.I 2275
integral equations immunology inversion integral equate fredholm kind basic problem consider strategy yield success consist essential point fit known experimental data curve property derive property unknown function stabilize computate unknown function singular decomposition constrain unknown function approximate represent probable distribution nonnegative number test case present set actual experimental data analyz procedure present 
.I 2276
computer method sampl exponential normal distribution method known transform uniformly distribut random number exponential normal distribut quantity efficient compar term memory requirement spe algorithm number procedure convert taylor series expansion direct sampl step approach sampl continuous distribution exponential distribution definite recommendate made case normal distribution remain choice slower shorter algorithm faster space consum method 
.I 2277
demand pag utilize work set maniac ii hardware implementate maniac ii computer work set model demand pag introduc denn discuss characteristic maniac ii description basic demand pag scheme associate memory add maniac ii hardware final description hardware design implementate work set model discuss specificate action condition arise dur operate full work set model demand pag system 
.I 2278
foster informate storage retrieval avl tree 
.I 2279
controller braille terminal 
.I 2280
comment deadlock prevention method 
.I 2281
eigen problem block tridiagonal matrices 
.I 2282
comparison floate point summate method 
.I 2283
thinn algorithm rectangular hexagonal triangular array report thinn algorithm develop rectangular hexagonal triangular array approach development algorithm pictorial result produc algorithm present relative performance algorithm compar found algorithm operate triangular array sensitive image irregularity noise yield thinn image reduc number point conclud algorithm operate conjunction hexagonal array feature strike balance array 
.I 2284
solution matrix equate axxbc algorithm 
.I 2285
computer routine quadratic linear programm problem algorithm computer program bas lemkes complementary pivot algorithm present solve linear quadratic programm problem program extensive test wide range problem result extreme satisfactory 
.I 2286
automatic error analysis determin precision problem consider evaluate ration expression desir tolerance computer perform variable precision floate point arithmetic operation automatic error analysis technique determin direct result trial low precision interval arithmetic calculate precision data accuracy requir achieve desir final accuracy technique generalize easily evaluate nonration expression 
.I 2287
approach automatic scann contour map problem automatic digitize contour map discuss structure general contour map analyz topological property utilize develop scann algorithm problem detection recognition contour line solve color label method shown map normal contour line suffice distinguish call odd line tangency problem involve practical scann discuss solution bas minimize computer memory space simplify control program suggest 
.I 2288
organize consecutive retrieval property consecutive retrieval property important relate query set record set existence enable design informate retrieval system minimal search time redundant storage important theorem consecutive retrieval property prove paper condition consecutive retrieval property exist remain invariant establish outline design informate retrieval system bas consecutive retrieval property discuss 
.I 2289
cellular array solution graph problem cellular array dimensional checkerboard type interconnection identical module cell cell bit memory small amount combination logic communicate mainly neighbors array chief computation advantage offer cellular array improvement spe achieve virtue possibility parallel process paper shown cellular array inherent suit solution graph problem adjacency matrix graph easily mapp array matrix element stor cell array typical row column operation readily implement simple cell logic major challenge effective cellular array solution graph problem determinate algorithm exploit possibility parallelism especial problem solution inherent serial parallelize algorithm present solution spann tree distance path problem direct applications wire rout pert chart analysis analysis type network algorithm exhibit computate time case grow rate exceed log number node graph straightforward cellular implementations known serial algorithm problem require step noncellular implementations require step 
.I 2290
predominators direct graph algorithm 
.I 2291
localize root polynomial algorithm 
.I 2292
note generate rosary permutations 
.I 2293
comment average binary search length 
.I 2294
bonus van wijngaardens device 
.I 2295
comment composition semantic algol 
.I 2296
compil fix point multiplications 
.I 2297
model memory contention pag machine paper concern aspect contention main memory resource multiprogramm computer system operate demand pag model present number page frame main memory allocate problem program varies time change memory configurate represent explicit model cpu requirement page exception characteristic program material describ statistical expression distribution number page frame allocate execut program long run expect fraction program execution time number page frame average execution interval multiprogramm load obtain point heuristical demonstrate numerical increase obtain able average execution interval multiprogramm load result equal fix partition main memory 
.I 2298
environment research microprogramm emulate development research project microprogramm emulate state university york buffalo consist phase evaluate machine support research decision purchase machine superior consider organize definition goal group project phase report emphasis plac early result achieve research 
.I 2299
extensible editor small machine disk storage design philosophy develop sophisticate utility program illustrate actual design implementate text editor versatile data structure employ small number programm subroutine type data manipulate data structure describ merit illustrate ease powerful extension implement term basic edit function 
.I 2300
political redistrict computer problem political redistrict consider computer method redistrict present criteria acceptable redistrict discuss includ populate equal compactness contiguity preservate natural andor political boundary nonpartisan criteria consider bureau census populate data specific result ten congressional districts state missouri st louis county council seats result algorithm feasible political redistrict aid computer 
.I 2301
generate parser affix grammar affix grammar level grammar similar van wijngaardens level grammar definition algol affix grammar shown koster equal power van wijngaarden grammar suit pars koster inventor affix bas recursive procedure paper present bottom scheme pars bas extension floyd production language fpl includ algorithm similar deremers convert large class affix grammar fpl paper conclude discuss briefly applicability conversion algorithm affix grammar general extension koster definition affix grammar 
.I 2302
computer employment relationship computer automate employment part general relate technological change employment obvious effect increase productive due technology eliminate job technology affect individual worker nature amount work attitude work technological change affect occupation structure entire labor force central importance effect impact technology subject extensive study economists sociologists political scientist psychologists single discipline study contradictory conclusion color political overtones wish delineate issue present argument support viewpoint 
.I 2303
archaeology computer reminiscences period preced found acm dominate large computer eniac characteristic describ foreshadow later development 
.I 2304
western view computer history history digital computer field tend impersonal heavy emphasis eastern university commercial development article record event early year personal people organization technology computer period western part unit statesare describ happen 
.I 2305
plankalkul konrad zuse forerunner today programm language plankalkul attempt korrad zuse devise notation conceptual system writ today term program early approach programm language lead practical plan describ feature standard today programm language investigate historical interest provide insight lead advancement state art modern programm terminology plankalkul present extent reconstruct publish literature 
.I 2306
ancient babylonian algorithm early origin mathematics discuss emphasize aspect greatest interest standpoint computer science number babylonian tablet translate english quot 
.I 2307
dynamic document process role computer automatic document process briefly outlin reason early promise library automate mechanize documentate process fulfill dynamic document environment outlin cluster search informate retrieve follow interactive user controll search process method describ automatic query modificate bas user need continuous reorganize stor informate function earlier process normal collection growth propos procedure provide powerful tool informate retrieval control dynamic library collection item continual add retir 
.I 2308
computer urban society survey computer urban society cover broad range activity found city future scope applications limit imaginate inventiveness future system designer programmer analyst decision makers computer properly respect human dignity civil liberty significant factor improve efficiency urban process expect benefit computer usage outweigh cost look forward expansion usage 
.I 2309
computer instruction process direction research development survey computer applications instruction process suggest computer professional contribute effective education system 
.I 2310
language analysis humanity computer language orient humanity exhaustive list detail indices concordance widespread accept desirable implications computer science humanity science entail gather data construction test model wide recognize accept paper argues computer major role language analysis humanity establish sciencethus area humanity rigor precision analyz literature teach student write composition computer critical important facilitate 
.I 2311
generation perspective informate system development system development categorize generation point view parallel commonly describ comput system generation generate scope development project technological world view system developer examin 
.I 2312
present future scientific computate pessimistic forecast expect happen applicate computer physical science 
.I 2313
evolution storage structure data base management system grown rapidly power complexity year history data process commercial computer original concept split term adopt refer concept data structure diagram graphic technique illustrate splitt concept structural relation exist concept point evolution 
.I 2314
requirement advanc programm system list process list process system design facilitate production large program manipulate large complex symbolic data store paper present overview number system feature author feel important improve productive programmer work domain system view focus language feature algorithm cod language form debugg modifi made efficient run data general frameworkthe requirement specifi applicable design advanc programm system wide range applications aspect programm system highlight good interactive facility programmable control structure sophisticate data communicate mechanism interactive feature describ facilitate program composition entry test debugg edit optimize packag implementate generalize environment structure model specifi allow programm control regimes includ multiprocess coroutines backtrack alternative method procedure invocate requir include invocate pattern monitor condition ne extend data form storage management extensible stress dual data retrieval function evaluate syntax direct input output data facilitate complex data store 
.I 2315
production mathematical software observations made step create mathematical software step suggest ne coordinate effort create center focus activity area 
.I 2316
programm language history future paper discuss history future programm language higher level language difficulty writ history key part paper tree show chronological development language interrelationship reason proliferate language major language list reason importance section chronology happenings significant previous time period major topics key concept specific language discuss 
.I 2317
programm system language spite impressive gain pli fortran cobol remain language world production program written remain foreseeable future great deal theoretical interest algol extensible language practical impact problem orient language important language development area ten year operate system area major computer manufacturer set produce ambitious multiprogramm system ran similar problem number university projectsthough direct comparable manufacturer contribut great understand operate system principle important trend include increas interest development system measurement evaluate techniquesand increas microprogramm programm system function 
.I 2318
role computer system model performance evaluate model constitute mean investigate computer system performance paper examine interrelationship model method evaluate performance computer system establishes circumstances model 
.I 2319
operate system performance overview future position respect operate system performance great deal informate large number model subsystem develop gaps exist knowledge severe interaction subsystem operate system model total system develop able analyze design performance aspect operate system total system design exception today project increasingly common future design philosophy clearly severe impact modularize operate computer system 
.I 2320
structur multiprogramm paper present proposal structur representate multiprogramm high level language notate explicit associate data structure shar concurrent process operation defin clarify mean program permit large class time dependent error caught compile time combinate critical region event variable enable programmer control schedul resource compet process degree desir concept sufficient safe operate system user program 
.I 2321
interface computer data communications system future system combine computer digital terminal communications equipment present design optimize problem require reconsiderate tradition function responsibility respective subsystem standard interface mean computer digital terminal connect communications system requir interface considerate problem coordinate synchronize error control signal stream multiplex switch control addition minimize technological interdependence specific subsystem design focus problem obtain discussion detail specificate computer communications system interface 
.I 2322
view computer architecture attempt made predict development year field computer architecture standardize inexpensive microcomputers single chip predict extensive provide logical function noncomputation device incidental design superscale computer 
.I 2323
general theory special function list number natural development field algebraic manipulate prospects general theory function defin ordinary differential equations discuss claim made recent development mathematics algorithmical generate property solution differential equations theory preferable general effort make algebraic manipulate system knowledgeable usual special function exponential hypergeometric 
.I 2324
management science view nonlinear programm history integer continuous nonlinear programm present obstacles practical mathematical programm technique forecast contribution nonlinear programm actual made year consolidations theoretical breakthroughs contribution documentate standard test problem construction user orient software comparison known algorithm demonstrate technique specific problem 
.I 2325
numerical mathematics computer science numerical mathematics view analysis continuous algorithm component numerical mathematics discuss foundations finite precision number system computation complexity synthesis analysis algorithm analysis error program program library 
.I 2326
fix point approach theory computate follow fix point theory scott semantic computer program defin term fix point recursive program allow justificate exist verificate technique extension handl uniform manner property computer program includ correctness terminate equivalence 
.I 2327
automata theory brain source idea automata theory study brain push mathematical development theory paper suggest automata theory evolve year contribute understand brain process informate 
.I 2328
individualize instruction generative cai tutor 
.I 2329
computer science vicious circle 
.I 2330
calculate fourier integral algorithm 
.I 2331
integer programm problem algorithm 
.I 2332
special series summate arbitrary precision algorithm 
.I 2333
random vector uniform solid angle algorithm 
.I 2334
general random number generate algorithm 
.I 2335
eigenvalue eigenvectors real general matrix algorithm 
.I 2336
complex error function algorithm 
.I 2337
sort problem complexity technique prove min max norm sort algorithm algorithm find minimum maximum element set fewest comparison prove optimal technique 
.I 2338
start method solve nonlinear volterra integral equations kind fourth order start method volterra integral equations kind numerical present 
.I 2339
computer assign code verbal response desirable convert verbal response multidigit code conversion general accomplish clerk coder study conduct test feasible translate verbal description numerical code computer program primary emphasis plac computerize construction reference verbal description program result study clearly show procedure feasible 
.I 2340
boolean matrix method computate linear precedence function modifi version bell boolean matrix method computate linear precedence function associate conflict free matrix precedence relation algorithm detect precedence function exist provide exist corrective action sufficient condition existence precedence function boolean matrices prove existence precedence function associate class conflict free grammar illustrate 
.I 2341
block data type snobol data type call block implement snobol block dimensional aggregate character form parallelepip thought dimensional extension str dimension overstrik block print concatenate dimension merg basis program defin connection point block adapt size shape environment block operation mainly compos printable output variety graphical problem includ flowchart bargraphs logic diagram mathematical equate formate text justificate preparate programm printer easy natural addition specialize applications block good general purpose device independent output formate mechanism especial suitable nonnumerical work concept block large language independentthat block require specialize syntax readily absorb external structure programm language 
.I 2342
interference communicate parallel process kind interference communicate parallel process examin dijkstra knuth solution mutual exclusion problem associate subproblem form parallel program informal proof correctness solution paper system parallel process regard machine proceed state collection pertinent data process configurations state accordance transition rule set rule yield sequence state dictate system behavior mutual exclusion problem associate subproblem formulate question inclusion set state existence sequence mechanical proof procedure shown verify prove correctness discredit prove incorrectness attempt solution respect interference property shown calculate transition rule partial rule individual process operate formate partial rule calculate transition rule applicable hardware process software process symmetry process requir 
.I 2343
proposal establish pseudo virtual memory writable overlay computer system solve executable storage size problem large program overlay overlay scheme balanc combinate capability found exist technique proposal present utilize capability exist scheme complement addition feature writable overlay writable overlay capable provide virtual memory effect programmer requir design overlay configurate overlay structur complex task tool includ graphic display includ proposal order aid programmer design content overlay briefly discuss detail final overlay configurate decid fact 
.I 2344
optimize performance time shar system simulate simulate model time shar system finite noncontiguous store infinite auxiliary store study variate system parameter store size number job allow execute simultaneous job schedul algorithm effect variation measure system performance ascertain parameter controllable job schedul algorithm includ schedul require optimize parameter normal controllable schedul algorithm mark effect system performance system performance bas mean cost delay job process shown significant improvement measure system performance obtain variable time slice technique select optimum round robin cycle time feature benefit optimize parameter controllable schedul algorithm affect system performance predictable manner benefit optimize feature normal control schedul algorithm mark effect measure performance supervisor overhead size store spe cpu comparison made result simulate model analytical equations quantum orient nonpreemptive time shar system comparison found favorable 
.I 2345
curriculum recommendations graduate professional program informate system ne educate relate informate system organization discuss curriculum propos graduate professional program university master level material program identifi course incorporate specifi detail course description present program organize discuss implementate question consider 
.I 2346
hu tucker minimum redundancy alphabetic cod method algorithm 
.I 2347
fourier cosine integral algorithm 
.I 2348
merge sort algorithm algorithm 
.I 2349
generate random correlate normal variable algorithm 
.I 2350
clenshaw curtis quadrature algorithm 
.I 2351
optimal winograds formula 
.I 2352
minimax nonlinear approximate approximate subset 
.I 2353
fast finite difference solution biharmonic problem sett reynolds number equal method solve navier strokes equations numerical result fast numerical method biharmonic problem equate treate system order equations simple smooth process essential convergence applicate made crack type problem 
.I 2354
implement clenshaw curtis quadrature ii comput cosine transformate companion paper methodology experience automatic clenshaw curtis quadrature scheme describ quadrature formula scheme require cosine transformate integrand shown high cost cosine transformation drawback clenshaw curtis quadrature problem relate cosine transformate trouble convention computate cosine transformate recurrence relate numerical unstable low frequency largest effect integral case automatic scheme require refinement sampl storage requir save integrand cosine transformate comput part paper show cosine transformate comput modificate fast fourier transform problem overcome modificate applicable circumstances requir cosine sine transformation polynomial interpolate chebyshev point 
.I 2355
implement clenshaw curtis quadrature methodology experience clenshaw curtis quadrature important automatic quadrature scheme variety reason especial high accuracy obtain relative integrand receive require computate cosine transformate arithmetic cost prohibitive paper part companion paper ii comput cosine transformate show objection overcome comput cosine transformate modificate fast fourier transform algorithm part discuss strategy error estimate summarize experience implementate scheme 
.I 2356
technique software module specificate paper present approach writ specifications part software system main goal provide specifications sufficient precise complete piece software written interact piece specifi addition informate secondary goal include specificate informate meet goal technique illustrate mean variety tutorial system 
.I 2357
mux simple approach line comput line system operate part normal batch system cdc computer describ system requir man year initial software implementate basical simple provide element input modify submit batch execution provide result user terminal multiplexer design develop part project cost man year design checkout part fabricate aspect system describ includ design criteria implementate cost overhead user reaction 
.I 2358
multics virtual memory concept design experience line operate system grown ne share informate system user increasingly apparent contemporary system permit degree shar usual shar accomplish allow user share data input output informate stor secondary storage segmentate multics provide direct hardware address user system program informate independent physical storage locate informate stor segment potential sharable carry independent attribute size access privilege design implementate considerations segmentate shar multics discuss assumption informate resides large segment main memory size main memory contemporary system limit shown multics software achieve effect large segment main memory honeywell segmentate pag hardware 
.I 2359
improve index sequential access method hash overflow index sequential access method isam important management system moveable head disk device study investigate unconvention method treate overflow record method hash technique allocate space record condition satisfi superior convention isam method chain overflow record link list technique condition long overflow chain significant overflow lack tight disk space constraint record key small compar total record size significant index oppos sequential mode hash overflow time locate record dependent total volume overflow record convention isam percentage space dedicate overflow record 
.I 2360
comment double chain tree 
.I 2361
note cheneys nonrecursive list compact algorithm 
.I 2362
linear equate solver algorithm 
.I 2363
minimal spann tree algorithm 
.I 2364
complex gamma function error control algorithm 
.I 2365
matrix computation fortran pag efficiency convention fortran program matrix computation improve revers order nest loop modifications produce modest savings common situations significant savings large problem run operate system pag 
.I 2366
complex gamma function error control algorithm compute gamma function log gamma function complex variable present standard algorithm modifi respect insure continuity function reduce accumulate round error addition computate function algorithm include object time estimate round error experimental data regard effectiveness error control present fortran program algorithm algorithm section issue 
.I 2367
computer society propos course computer scientist purpose paper describe course concern effect computer society responsibility computer scientist society impact computer divid component political economic cultural social moral main part paper define component present relevant issue remain portion format course discuss topic topic outline select set reference list hop proposal make easier initiate course subject 
.I 2368
implement graph algorithm winn shannon switch game tutorial paper computer program wins shannon switch game describ game play graph program good implementate graph algorithm players shannon switch game connect cut nonsimilar goal connect cut player move guarante existence winn strategy simple strategy explain paper valid case fact major routine ne know computer connect cut 
.I 2369
hidden line eliminate rotate object method present determin part dimensional object visible invisible object rotate axis paper describe polygon comparison scheme relationship polygon classifi tree type discuss relationship chang pair polygon rotate axis rotate table defin pair polygon remain fix long rotate axis provide mean rapidly determin visible hidden line relationship polygon addition work extend approach simultaneous rotate axes 
.I 2370
experimental laboratory pattern recognition signal process interactive computer controll scann display system operate ibm thomas watson research center year system include fly spot scanner tv camera special interfac process control digital computer dot mode vector display analog input output facility variety experimental equipment system design programm support describ typical applications scanner control optical character recognitionand image process present 
.I 2371
system interprocess communicate resource shar computer network system communicate process time shar system describ communicate system extend process distribut computer network hypothetical applicate system exist network discuss 
.I 2372
implementate security measure informate system security informate system represent model matrix element decision rule row column indices user data item respective set function access matrix translate execution time distinguish data dependent data independent decision rule enable perform check security translate time repeatedly execution time model explain security feature exist system serve framework proposal general security system implementate today language operate system 
.I 2373
property work set model program work set wtt time set distinct page recent referenc page relation average work set size miss page rate interreference interval distribution derive time average definition ensemble average statistical definition efficient algorithm estimate quantity relate lru recent pag characterize independent reference model page reference statistical independent assess effect interpage dependency work set size observations general assumption work set size shown normal distribut 
.I 2374
study storage partition mathematical model local fix dynamic storage partition procedure examin multiprogramm system storage requirement program model stationary gaussian process experiment justify model describ mean model dynamic storage partition shown provide substantial increase storage utilize operate efficiency fix partition 
.I 2375
comparative analysis disk schedul policy known schedul policy movable head disk compar performance criteria expect seek time system orientedand expect wait time individual io request orient analytical simulate result obtain variance wait time introduc meaningful measure performance show discriminate individual request choice utility function measure total performance includ system orient individual request orient measure describ function allow differentiate schedul policy wide range input load condition selection implementate maximum performance policy algorithm discuss 
.I 2376
synchronize communicate process formalize defin synchronize mechanism prove concurrent runn process system communicate correct demonstrate system consist send process deposit message buffer receive process remove message buffer formal description synchronize mechanism make easy prove buffer overflow underflow senders receivers operate message frame buffer run deadlock 
.I 2377
hardware architecture implement protection rings protection computation informate important aspect computer utility system segmentate memory address scheme protection achieve part associate concentric rings decreas access privilege computate paper describe hardware processor mechanism implement rings protection mechanism implement rings protection mechanism allow cross call subsequent occur trapp supervisor automatic hardware validate reference boundary perform call user procedure protect subsystem includ supervisor identical call companion user procedure mechanism pass referenc argument case 
.I 2378
operate system bas concept supervisory computer operate system organize small supervisor set independent process describ supervisor handle io external device directory system schedule active process manages memory handle error provide small set primitive function execute process process able request complicate action part supervisor usual wait occurrence compound event system combin primitive supervisory computer program part supervisor execute program view software implement supervisory computer paper develop concept detail outline remainder supervisor discuss advantage approach 
.I 2379
design venus operate system venus operate system experimental multiprogramm system support concurrent user small computer system produc test effect machine architecture complexity software system defin combinate microprogram software microprogram define machine unusual architectural feature software exploit feature define operate system simply paper development system describ emphasis principle guid design 
.I 2380
tenex pag time shar system pdp tenex time shar system implement dec pdp augment special pag hardware develop bbn report set goal important time shar system describe tenex design implementate achieve goal include specifications powerful multiprocess large memory virtual machine intimate terminal interaction comprehensive uniform io capability clean flexible system structure implementate describ requir compromise achieve system operation month hardware checkout tenex met major goal provid reliable service sites arpa network 
.I 2381
average binary search length dense order list corrigendum 
.I 2382
reconstruction picture projection corrigendum 
.I 2383
music computer composition problem discuss simulate human composition western popular music computer relevant theory music harmony problem kind program scheme known work discuss previous computer composition discuss includ illiac suite program generate short melody fragment written simulate aspect human composition sample output present discuss discover fragment show characteristic popular melody strange alien sound theorize relevant probability discriminate unfamiliar sequence 
.I 2384
hidden line plott program algorithm 
.I 2385
complex polynomial algorithm 
.I 2386
dynamic microprogramm processor organize programm corrigendum 
.I 2387
maximum comput power cost factor centralize problem simple analysis computer economic factor involve compar multimachine installations versus large single machine installations mathematical model derive assist policy decision 
.I 2388
optimize binary tree grown sort algorithm item retrieve binary tree grown form algorithm quicksort average time proportion log number item tree binary tree grown algorithm branches longer reduce average retrieval time restructur tree make branches uniform length algorithm present algorithm discuss compar restructures tree item add 
.I 2389
preliminary report system general space plann computer language set program language describ allow formulate solve class space plann problem language extension algol include mean represent space object manipulate test result arrangement accord variety constraint algorithm solve problem express language re heuristic programm language search algorithm detail 
.I 2390
proposal computer bas interactive scientific community problem create explosion paper mathematical science drawback place research suggest tree mathematical result terminology maintain multiterminal computer system user system store computer update knowledge select paper read obtain computer minimum subtree theorem requir br know background knowledge paper assume condition mean provid contribution comment reader work interaction commentators author paper describe system organize role requir reader writer commentators 
.I 2391
unitary symmetric polynomial algorithm 
.I 2392
situ transposition rectangular matrix algorithm 
.I 2393
calculate fourier integral algorithm 
.I 2394
order fx fx positive monotonic 
.I 2395
quadratic programm nonlinear regression quadratic programm algorithm describ magnifi diagonal method nonlinear regression linear constraint regression method publish jacm july 
.I 2396
muse model understand simple english muse computer model natural language process bas semantic memory network quillians tlc muse model understand simple english process english sentence unrestrict content restrict format model apply syntactic analysis eliminate interpretations employ simplifi semantic intersection procedure find valid interpretate input semantic process similar tlc syntactic component include early parse tree special purpose rule relation triple notate dur interpretate input compatible muse memory structure allow direct verificate familiar concept addition muse repertoire action range edit report content memory indirect form question answer present demonstrate model interpret text resolve ambiguity add informate memory generalize perform action 
.I 2397
optimize polyphase sort corrigendum 
.I 2398
teacherstudent author cai newbasic system pedagogical advantage general purpose interactive system call newbasiccatalyst discuss newbasiccatalystincorporates advanc implementate basic system level interactive feature general capable extension user orient function attachment applicate feature provide flexible cai scan capable illustrate interaction system level show student mix advantage independent solo mode comput guid dual mode interaction preliminary experience system urban secondary school sett discuss 
.I 2399
crt edit system test edit manipulate program describ program operate low cost cathode ray tube entry display stations keyboard function buttons applications potential economy operate aspect implementate discuss 
.I 2400
hough transformate todetect line curve picture hough propos interest computational efficient procedure detect line picture paper point angle radius slope intercept parameter simplify computate show method general curve fitt give alternative interpretations explain source efficiency 
.I 2401
shrink binary picture pattern parallel process algorithm shrink binary pattern obtain single isolate element pattern present procedure count pattern matrix hardware implementate algorithm large scale integrate technology envision principal feature method small window employ element parallel nature process shrink pattern regardless complexity configurate problem regard merg disconnection pattern dur process determinate maximum number step obtain single isolate element pattern review discuss analogy neural network description term mcculloch pitts neurons present 
.I 2402
pictorial pattern recognition phase problem ray crystallography interactive dimensional computer graphic system coupl powerful digital computer encourages development algorithm adapt environment pictorial pattern recognition technique make number approaches ray structure determinate bas molecular model build chemical informate frame structural hypotheses computational test refin reference experimental data applicate standard pattern recognition algorithm hinder fact cross correlate model correct structure comput fundamental incompleteness measur data compute upper bound cross correlate simple demonstrate informate basis technique structure determinate make effective interactive graphic system model build cross correlation intrinsic advantage usual crystallographic technique bas autocorrelate patterson function especial large structure significant crystallography biological macromolecules hasbeen continue field intense interest 
.I 2403
procedure natural spline interpolate algorithm 
.I 2404
exponential integral algorithm 
.I 2405
linear system tridiagonal matrix algorithm 
.I 2406
data definition mapp language data definition language sa declarative computer language data structure data definition language concentrate declarate logical data structure concern structure physical realize computer system ne data definition language describe logical physical aspect data increasingly apparent language key system advanc data management system distribut data base paper review past work data definition language describ logical physical aspect data applications generalize data definition language discuss 
.I 2407
curriculum recommendations undergraduate program informate system ne educate relate informate system organization discuss curriculum propos undergraduate program material program identifi course incorporate specifieddetail course description present program organize problem implementate discuss 
.I 2408
solve biharmonic equate square direct versus semidirect method method solve biharmonic equate compar method direct eigenvalue eigenvector decomposition method iterative solve poisson equate direct iterate 
.I 2409
algorithm approximate solution wiener hopf integral equations explicit approximate solution equate assum classical wiener hopf technique appli assum fourier transform known explicit approximate solution depend positive parameter 
.I 2410
recurrence scheme convert orthogonal expansion generalize scheme hamm convert polynomial pnx chebyshev series combin recurrence scheme clenshaw summ finite series term satisfy term recurrence formula 
.I 2411
tree structur program 
.I 2412
comment brents scatter storage algorithm 
.I 2413
note subexpression order execution arithmetic expression counterexample suppos optimal algorithm generate schedule tree task unequal execution time present comparison critical path heuristic discuss 
.I 2414
arithmetic overa finite field algorithm 
.I 2415
algorithm automatic numerical integrate finite interval algorithm 
.I 2416
matrix transposition place algorithm 
.I 2417
combinatorial algorithm algorithm 
.I 2418
student frequency algorithm 
.I 2419
eigenvalue real symmetric tridiagonal matrix algorithm 
.I 2420
experiment automatic theorem prover havingpartial order inference rule automatic theorem prover ne made efficient mind slagle shown axioms partial order replac built inference rule theorem prove algorithm bas hyper resolution paramodulate rule embody transitive partial orderings close relationship predicate program develop modifi version rule theorem prover found powerful solve problem involve partial orderings paper present detail description program comprehensive account experiment perform 
.I 2421
scan conversion algorithm reduc storage requirement graphic system raster scan output device crt hardcopy maintain display xy random scan format scan converter hardware software provid translate picture description xy format raster format publish scan conversion algorithm fast reserve buffer area large accommodate entire screen hand small buffer area slow require multiple pass xy display scan conversion algorithm describ link list data structure process line draw strips correspond group scan line relative small primary memory buffer area accumulate binary image group scan line portion draw plott buffer reus portion list process procedure single pass xy display requir generate binary image slight increase execution time fully buffer core result result slow storage requirement reduc percent caus percent increase execution time 
.I 2422
adaptive correction program statement corrigendum 
.I 2423
parser generate system construct compress compiler paper describe parser generate system pgs cdc computer purdue university pgs fortran cod compiler input translate grammar bnf syntactic rule correspond empty code generate realizable assemble language fortran algol subroutine call syntactic rule appli parse program typical pass compiler construct pgs translate source program speed approach card minute xpl compiler parser program table occupy word bit core memory word pars table entry word link code generators 
.I 2424
dynamic verificate operate system decision dynamic verificate decision imply time decision made consistency check perform decision independent hardware software dynamic verificate operate system decision prime system design construct university california berkeley prime experimental time shar property continuous data privacy cost effectiveness technique dynamic verificate allow construction operate system make decision improperly presence single hardware software fault multiple fault lead unreliable operate fault happen reinforce prime dynamic verificate ensure user informate user gratuitous presence single hardware software faultthe amount addition hardware software requir dynamic verificate modest 
.I 2425
programmer navigate 
.I 2426
algorithm scale scale scale determinate scale computer generate plot algorithm 
.I 2427
bivariate normal distribution algorithm 
.I 2428
cubic spline solution class function differential equations algorithm 
.I 2429
calculate optimum parameter alternate direction implicit procedure algorithm 
.I 2430
elementary circuit graph algorithm 
.I 2431
discrete linear approximate interval linear programm algorithm 
.I 2432
addendum multiple precision division algorithm 
.I 2433
control structure illiac iv fortran part effort design implement fortran compiler illiac iv extend fortran call ivtran develop language provide mean express data control structure suitable exploit illiac iv parallelism paper review hardware characteristic illiac single unconvention feature expect influence language compiler design implications feature data layout algorithm structure discuss conclusion drawn data allocate code structur crucial illiac optimize problem satisfactory method data allocate present language structure utilize storage method express parallel algorithm describ 
.I 2434
page residency select work set parameter dennings method select work set parameter interreference interval examin omissions model assumption introduc overcome omissions modifi model denings result page residency rederive reconsider select work set parameter 
.I 2435
class dynamic memory allocate algorithm anew dynamic memory allocate algorithm fibonacci system introduc algorithm similar advantage buddy system generalize mention include system special case 
.I 2436
note confinement problem note explore problem confin program dur execution transmit informate program caller set attempt stake boundary problem condition solution state informal justifi 
.I 2437
general performance analysis key address transformate method abstract concept paper present approach analysis performance key address transformate method approach key assum select key space accord probabilistic selection algorithm number key select key space suitable weight accordance algorithm average performance transformate method potential method analysis method performance classifi key distribution partial transformation identifi analytical approach appli group transformate method key select randomly 
.I 2438
model stack implementate multiple environment control access environment structure require storage procedure activate exist time control nest procedure activate straightforward implement dynamic storage allocate link block activate expensive time space paper present implementate technique single stack hold procedure activate storage allow retention storage durations necessarily ti control flow technique property simple caseit run identical usual automatic stack allocate deallocate procedure applications technique multitask coroutines backtrack label valu variable function argument discuss initial model single real processor assum implementate assume multiple process coordinate pass control explicit multiprocessor implementate require change basic technique describ 
.I 2439
multiple terminal user program control time shar environment user written program dartmouth time shar system communicate remote terminal simultaneous control interaction terminal program written standard input output instruction language system paper describe multiple terminal facility implement requir change system executive system compiler interpreter 
.I 2440
localize root polynomial algorithm 
.I 2441
hidden line plott program algorithm 
.I 2442
sparse matrix package algorithm 
.I 2443
generate permutations lexicographic order algorithm 
.I 2444
find cliques undirect graph algorithm 
.I 2445
rout problem algorithm 
.I 2446
analysis skew representation symmetric group algorithm 
.I 2447
sard kernel bivariate cubatures error analysis bivariate cubatures remainder obtain sard kernel numerical result computer graph kernel function 
.I 2448
reversible execution 
.I 2449
simple technique structur variable lookup simple technique symbol table lookup structur variable bas simple automata theory present technique offer deterministic solution problem handl nondeterministic manner pli cobol compiler 
.I 2450
empirical work set behavior work set model program behavior propos recent year basis design schedul pag algorithm word work set commonly encounter literature deal resource allocate dearth publish data program measurement hope worker field find experimental evidence substantiate base theoretical work 
.I 2451
design tree structure efficient query standard informate retrieval operate determine record data collection satisfy query express term data process locate desir response represent tree search model paper pose optimize problem design tree serve specifi applicate problem academic sense ordinarily optimal tree implement mean practical technique hand potential comparison afford observe performance intuitive attractive ideal search procedure practical applicate model paper consider design tree search scheme bas bit vector representate data show essential algorithm design ideal search tree bit vector tree experimental study small formatt illustrate concept 
.I 2452
evaluate selection organize model system work discuss factor affect data base organize performance elusive subject present methodology model programm system estimate primarily total storage cost average access time organization specific data base query characterize device relate specifications bas estimate structure select specific situate system convenient tool study structure facilitate process data base structure design evaluate 
.I 2453
informate theory appli conversion decision table computer program idea informate theory paper develop heuristic algorithm convert limit entry decision table tree structur computer program minimum average process time method applicable limit entry decision table require action single rule cost test condition equal general previous publish heuristic algorithm compar optimal algorithm reinwald soland algorithm easy code take smaller translate time felt practice algorithm suit conversion decision table flowchart 
.I 2454
computation algorithm clos queue network exponential servers method present comput equilibrium distribution customer clos queue network exponential servers expression marginal distribution derive computation algorithm bas dimensional iterative technique highly efficient simple implement implementate considerations storage allocate strategy order evaluate examin detail 
.I 2455
generalize avl tree generalize avl tree propos imbalances triangle shape small integer experiment perform compare tree standard avl tree balanc tree basis mean retrieval time amount restructur expect worst case retrieval time shown permitt imbalances unit retrieval time increas small amount amount restructur requir decreas factor ten theoretical result derive includ correction earlier paper duly compar experimental data reasonable good correspondence found 
.I 2456
capability repeat exit statement form program defin program loop statement properly nest enter beginn correspond definition form flowchart shown program form written repeat multi level exit statement sequence control shown ifwhile repeat statement single level exit suffice shown flowchart convert form flowchart node splitt practical implications discuss 
.I 2457
inductive methodsfor prove property program main purpose paper clarificate extension known result computate recursive program emphasis difference theoretical practical approaches presentate examinate known method prove property recursive program discuss detail powerful inductive method computation induction structural induction includ applications 
.I 2458
localize root polynomial algorithm 
.I 2459
hu tucker minimum redundancy alphabetic cod method algorithm 
.I 2460
clenshaw curtis quadrature algorithm 
.I 2461
graph plotter algorithm 
.I 2462
efficient prime number generate algorithm 
.I 2463
complex gamma function algorithm rc 
.I 2464
complex method constrain optimize algorithm 
.I 2465
gaussian quadrature formula bromwichs integral algorithm 
.I 2466
enumerate combination object algorithm 
.I 2467
chi square quantiles algorithm 
.I 2468
rosenbrock function minimize algorithm 
.I 2469
petri net spe independent design petri net investigate method model spe independent asynchronous circuit study circuit realizations petri net lead demonstrate usefulness model spe independent operate usefulness emphasize design spe independent processor module develop investigate petri net implementate 
.I 2470
fen axiomatic basis program semantic formal system present abstract notion data item function relate argu system suitable set theory derivative concise accurate description program semantic shown system build composite data type simper operation row structur unit demonstrate complete primitive type introduc language mechanism singleton data type deterministic nondeterministic function shown definable system describ local environment model data item imperative statement consider function environment nature recursive function briefly discuss technique present introduc system technique contrast paradoxical combinate question local global environment mode function call parameter pass touch theory appli proof elementary theorem concern semantic assignment condition iterative statement appendix includ present detail formal system govern web fen abstraction informal body paper 
.I 2471
learn program play partnership dominoes learn program written basic play player partnership dominoes dominoes game incomplete informate program principle artificial intelligence program game complete informate checker chess program construct strategy signature table classify board situations interaction game parameter entry table adaptive determin weight advi sable strategy chosen strategy employ probable analysis linear polynomial evaluate choose move program wins approximate game tournament situations defeate championship player 
.I 2472
minimal spann tree algorithm 
.I 2473
hidden line plott program algorithm 
.I 2474
difsub solution ordinary differential equations algorithm 
.I 2475
solution linear programm problem variable algorithm 
.I 2476
equivalence andor graph context free grammar 
.I 2477
multiple exit loop goto 
.I 2478
computer science seminar undergraduate 
.I 2479
curriculum recommendations graduate professional program informate system recommend addendum informate system administrate addendum report acm curriculum committee computer educate management propos propos addendum include curriculum course informate system administrate important reason system designer understand administrative framework operate work effective important objective curriculum recommendations prepare future manager computer active felt importance reason justify addition recommend course course outlin format original report 
.I 2480
teach programm paper present goal organize course programm design provide enter student graduate program cultural enrichment professional live student expect programm course prior familiar programm language student user teach program similar teach play musical instrument skill taught learn teacher serve vital purpose present set rule produc form utterances offer numerous demonstrations skill function involve critic final teacher source informate process student involve 
.I 2481
distribution program primary fast buffer storage virtual memory computer system fast buffer cache memory primary memory central process unit consider optimal distribution program buffer primary memory studi program lifetime function expression distribution program maximize fraction cost time integral primary fast buffer storage obtain swapp nonswapp buffer management policy 
.I 2482
mix solution deadlock problem mixture detection avoidance prevention provide effective practical solution deadlock problem individual technique tailor subproblem resource allocate operate prevent deadlock paper present method bas concept hierarchical operate system construct mixture suggest subsystem frequent occurr resource allocate problem 
.I 2483
coko iii cooper koz chess program coko iii chess player written entire fortran ibm coko iii play minimal chess game rate sec cpu time move level close lower chess club play selective tree search procedure controll tactical chess logistic allow deployment multiple minimal game calculation achieve optimal move selection tree search algorithm heart coko effectiveness conceptual simple addition interest phenomenon call tree search catastrophe plagu coko entire development trouble human player standard exponential growth curb large extent definition trimm fischer set clear distinction tree prun selective tree search made representate chess environment describ strategical preanalysis procedure map lasker region specific chess algorithm describ command structure desir chess program experimentate comparison made mysterious action human player coko iii 
.I 2484
note informate organize storage logical structure data base represent tree graph natural view process design data base construct tree graph general method construct tree graph provid important element general construction method set binary relation algorithm construct subset set algorithm select element set object relation algorithm result informate structure list tree problem informate organize storage reduc defin relation formulate algorithm set constraint result present valuable designer design concept serve basis develop formal theory subject 
.I 2485
manag computer resource stage hypothesis bas study expenditure data process descriptive stage hypothesis present suggest plann organize controll activity associate manag computer resource change character period time evolve pattern roughly correlate stage computer budget stage computer acquisition stage ii intense system development stage iii proliferate control stage iv userservice orientate stage describ relate individual task manag computer resource 
.I 2486
computer photocomposition technical text computer assist typesett mean photocomposition special problem arise highly technical material mathematical formula solution problem devis informate system american institute physics include representate special character foreign alphabet mathematical symbol input keyboard photocomposer generate symbol overprint precise position accent mark floate diacritics line break word formula plac part end line part beginn aspect error correction 
.I 2487
cubic spline solution fourth order boundary problem cubic spline approximate fourth order differential equate ypxyqxyrxytx shown reduce solution term recurrence relationship special case approximate shown simply relate finite difference representate local truncate error order ydelta 
.I 2488
square piecewise cubic curve fitt matrices involve linear square formulate determin problem fitt piecewise cubic function possess continuous derivative array planar data 
.I 2489
number multiply restrict partition algorithm 
.I 2490
efficient algorithm graph manipulate algorithm efficient algorithm present partition graph connect component biconnect component simple path algorithm partition graph simple path iterative iterate produce path vertices path start vertex specifi dynamical number vertices number edge algorithm require time space proportion max ve execut random access computer 
.I 2491
thread code concept thread code present alternative machine language code hardware software realizations software realize interpretive code need interpreter extension optimizations mention 
.I 2492
development decision table pars complex decision situations pars technique propos allow pars bas syntactical characteristic decision problem require description problem decision grid chart format allow development decision table defin limit avoid minimize repetition condition action result table 
.I 2493
optimum data base reorganize point data base organize scheme cost access increase due structural inefficiency caus update reorganize data base cost access reduc high cost reorganize prohibits frequent reorganizations paper examine strategy select optimum reorganize point 
.I 2494
computer generate aid cluster analysis computer generate graphic method conjunction hierarchical scheme cluster analysis describ illustrate graphic principle representate element data matrix similarity dissimilarity computer print symbol character overstrikes shades darkness dark symbol correspond small dissimilarity plot appli data matrix cluster rearrang matrix cluster show glance cluster brought distinctive cluster known set data consist correlation psychological test illustrate comparison groupings method factor analysis method cluster analysis 
.I 2495
adapt optimal code generate arithmetic expression instruction set present day computer 
.I 2496
optimal shortest latency time drum schedul discipline computer system practical determine instantaneous drum position popular discipline determin sequence record access call shortest latency time sltf discipline collection vary length record access specifi drum position known sltf discipline necessarily minimize drum latency time show total time access entire collection sltf schedule drum revolution longer minimum latency schedule 
.I 2497
synchronize processor memory content generate interrupt implementations lock unlock method synchronize processor multiprocessor system usual require uninterruptable memory pause type instruction interlock scheme call read interlock require memory pause instruction develop dual dec pdp system real time requirement read interlock method require specialread interlock instruction repertoire processor special read interlock cycle repertoire memory module processor examine lock memory locate read interlock instruction interrupt lock set examin lock set set event sequence read interlock cycle writ lock clear processor interrupt encounter set lock branch advantageous branch result effective interrupt 
.I 2498
minimize wast space partition segmentate pag virtual memory system finite number page size consider algorithm assign page segment discuss algorithm simple implement problem choos page size minimize expect total wast space internal fragmentate page table segment solve probable density function segment size express convex combinate erlang density 
.I 2499
efficient multiprogramm resource allocate account thought component time shar operate multiprogramm involve broader question resource allocate fairness requir meet response criterion multiprogramm system serve maximal resource unfair hold inputoutput channel idle program complete small amount processor usage enable channel applications principle suggest multiprogramm executive dynamical adjust allocate algorithm gain efficiency allocate resource close connect account resource rais problem repeatable minimal uncharg overhead relative weight charge dependent resource weightings depend allocate algorithm arbitrary account parameter repeatable account omits extensive overhead paid multiprogramm prove efficient overcharges result multiprogramm turn allocate memory resource essential control resource general suggestion allocate account appli question detail provid case monitor control virtual memory machine 
.I 2500
practical approach manag resource avoid deadlock resource schedul allocate expensive regard time space multiprogramm time shar environment involve large number task resource conflict requirement detection andor prevention deadlock require massive amount addition overhead efficient usage resource maintain resource management program describ link list technique overcome large portion overhead program runn part large scale general purpose operate system resource relative active detect prevent deadlock implement state change permit comprehensive level deadlock preventiondetection addition cost incorporate runn system due infrequency deadlock situations 
.I 2501
wylbur interactive text edit remote job entry system wylbur comprehensive system manipulate kind text computer program letter manuscripts typewriter terminal connect computer facility remote job entry retrieval facility text alignment justificate powerful method address text content provid paper describe external appearance wylbur internal structure short description major feature orvyl general purpose time shar system operate conjunction wylbur includ 
.I 2502
comment practical aspect computer science educate 
.I 2503
comment computer music 
.I 2504
concern music computer composition computation linguistic 
.I 2505
reflection free permutations rosary permutations adjacent transposition algorithm 
.I 2506
sparse matrix package algorithm 
.I 2507
exact solution linear equations residue arithmetic algorithm 
.I 2508
increas efficiency quicksort algorithm 
.I 2509
minit algorithm linear programm algorithm 
.I 2510
minit algorithm linear programm algorithm 
.I 2511
maxflow algorithm 
.I 2512
coulomb wave function algorithm 
.I 2513
nonrecursive list move algorithm efficient nonrecursive algorithm move lisp type list algorithm require storage node list move addition bit node mark algorithm run time proportion number node list original list structure destroy move 
.I 2514
array grammar programm system package fortran program develop permit user interactive design test array grammar user control rule selection procedure derivate parse weight programm matrices choice instance selection scheme rasterrandom parallel involve array language consist simple geometrical pattern language neuron picture 
.I 2515
minimal event node network project precedence relation procedure construct minimal event node network represent set precedence relation parallel activity present minimal event node network event node network number node number arcs minima preserve precedence relation counterexample show algorithm present fisher liebman nemhauser produce event node network minimal procedure include set cover problem time requir grow exponential number activity 
.I 2516
hierarchical storage informate retrieval probabilistic analysis employ determine effect hierarchical storage organization informate retrieval operation data storage hardware assum consist level linearly connect memory hardware increas data access time increas data storage capability system consist fast semiconductor memory computer core memory extend core storage disk memory data cell equations derive predict effect system data access time sequential random access structur employ multiple hierarchical link list 
.I 2517
comment ambiguous decision table conversion computer program paper comment recent publish work decision table translate method similar rule mask technique applicable method convention table mean discuss argu place multi rule single rule action set convention decision tale usage 
.I 2518
programm questionnaire effective decision table programm questionnaire combine aspect decision table programm general purpose programm decision table construct applicate program selection source statement predefin propos programm questionnairy compromise general special purpose programm significant class large scale problem element approach discuss exist applicate describ 
.I 2519
problem communicate complex informate nature difficulty involve communicate mathematical result scientist computer bas informate retrieval system examin problem analyz term psychological informate process process turn vicious circle effect describ include augment written natural language notation linguistic device exhibition structure inherent informate communicate sophisticate interactive system controll computer 
.I 2520
greatest common divisor integer multiplier algorithm 
.I 2521
ten subroutine manipulate chebyshev series algorithm 
.I 2522
design implementate evaluate work set dispatcher behavior computer system large dependent algorithm employ allocate system resource process compet recent research time shar pag system develop work set model program behavior source allocate strategy bas model propos implementations principle report case result announc report discuss design implementate dispatcher bas work set principle present data permit analysis behavior future direction research method controll computer system 
.I 2523
region color technique scene analysis method convert picture cartoon map region correspond textur region describ texture edge picture detect solid region surround usual broken edge color propagate process result map clean compar region color texture correspond region picture merg region accord criteria bas topology size method appli construction cloud cover map cloud cover picture obtain satellite 
.I 2524
approaches match search problem search set key find key closest query key discuss closest term metric key space suitable defin structure present correspond search algorithm intend reduce number comparison requir achieve desir result method derive inequality satisfi metric graph theoretic concept empirical result present compare efficiency method 
.I 2525
statistical study accuracy floate point number system paper present statistical result test accuracy arithmetic system evaluate sum product product analytic error estimate computation arithmetic system studi digit hexadecimal digit binary floate point number representation combin usual chop round mode arithmetic number guard digit modifi round mode guard digit sense arithmetic system differ binary hexadecimal number representation shown approximate statistical equivalent inaccuracy usual round mode guard digit shown statistical superior accuracy usual chop mode case save modifi round mode found superior chop mode case 
.I 2526
asymmetric memory hierarchy study present system implications memory hierarchy back secondary store small read time relative time requir writ read time convention back storage device analytic model introduc shown hierarchy operate differ convention hierarchy shown multiprogram situate past back storage device roughly symmetric respect read write time situate continue device development small read timewrite time ratio study place emphasis system rca readwrite holographic optical memory 
.I 2527
implementate high level language machine comput machine direct execute statement high level language propos past report describe actual implementate machine computer machine language apl machine fully operation correct execute apl operation scalars vector array machine automatical allocate memory execute statement call function convert number type check subscript automatical detect type programmer error 
.I 2528
binary pattern reconstruction projection algorithm 
.I 2529
binary pattern reconstruction projection algorithm 
.I 2530
algorithm extract phrase space optimal fashion algorithm 
.I 2531
graduate educate phd glut 
.I 2532
harrisons substr test technique 
.I 2533
gray code sign sequence fx order 
.I 2534
design implementate diagnostic compiler pli plc compiler dialect pli design objective provide maximum degree diagnostic assistance batch process environment part assistance implicit provid automatical compiler remarkable characteristic plc perseverance complete translate program submitt continue execution user establish error limit reach require compiler repair error encounter dur translate execution design plc dominate considerate plc introduce explicit user controll facility program test accommodate extension pli abandon compatible ibm compiler plc permit pseudo comment construction content optional consider source test comment spite diagnostic effort plc fast efficient processor effective demonstrate compiler provide diagnostic assistance customarily offer sophisticate source language employ assistance ne prohibitive cost 
.I 2535
effect multiplex computer communications system study made asynchronous time division multiplex change stochastic nature arrival process user computer consequent affect performance time shar computer communications system conclud system parameter noticeable improvement performance computer model sense time shar schedul delay reduc improvement offset transmission delay impos multiplex change computer communications system performance analytical simulate result bas model computer communications system md queue multiplexor tandem single exponential server computer analytical result include general description output process md queue condition output process approximate poisson 
.I 2536
telecommunications front end minicomputer front end minicomputer provide vari remote terminal access large scale computer consider problem embedd telecommunications io operate system discuss shown decentralize intelligence acquir front end process vast simplify problem specific implementate discuss emphasis main processor minicomputer link hardware software implementate effect main processor operate system assessment advantage hard wir line controller 
.I 2537
common phrase minimum space text storage method save storage space text strings compiler diagnostic message describ method relies hand selection set text strings common message phrase stor storage technique give rise mathematical optimize problem determine message phrase minimize storage requirement problem nontrivial phrase overlap exist dynamic programm algorithm present solve problem time grow linearly number character text algorithm apply paper 
.I 2538
computer science course program small college acm subcommittee small college program committee curriculum computer science cccs appoint consider unique problem small college university make recommendations regard computer science program school report authorize subcommittee cccs supply set recommendations course resource implementate problem discuss specifical constraint limit faculty purpose satisfy wide variety objective detail description course suggestion made advanc work extensive library list includ 
.I 2539
solution transcendental equate wexpwx algorithm 
.I 2540
property work set model corrigendum 
.I 2541
overview ispl computer system design paper explore advantage concurrent design language operate system machine microcode create interactive programm laboratory describe synergistic effect freedom move alter feature domain design system implement freedom simplifi incremental compilate system address structure centralize communicate mechanism enable construction hierarchical subsystem suggest important concept operate system separate schedul maintenance function resource allocate separate enable incorporate schedul algorithm decision endanger system integrate correct perform schedul decision 
.I 2542
software design evaluate system critical failure software system design implementate methodology performance propos design evaluate actual implement paper reason failure explor methodology overcome difficulty propos system integrate performance evaluate design implementate describ system bas simple high level language describe evolve system stage development source language description direct input performance analysis simulate routine performance informate obtain routine feedback problem adverse affect performance detect early correct cost major reimplementate propos system 
.I 2543
reduc retrieval time scatter storage technique method enter retrieve informate hash table describ method intend efficient entry look time expect number probe look entry predict theoretical verifi monte carlo experiment considerable comparable method table nearly full fortran implementate 
.I 2544
automatic error bound simple analytic function cauchy ostrowski theorem convergence newton iterate analytic function variable extend include computation error complex interval arithmetic numerical polynomial real complex root bessel function kind 
.I 2545
theory discrete pattern implementate snobol notion discrete pattern formalize property deduc pattern shown generalize formal language algorithm implement kind pattern snobol general approach create bottom parse top specificate 
.I 2546
grammatical inference design programm language design programm language extend exist language designer fac problem derive natural grammar language propos interactive approach grammar design problem designer present sample sentence structure input grammatical inference algorithm algorithm construct grammar reasonable generalize submitt designer implementate present restrict subclass operate precedence grammar algorithm outlin apply larger class context free grammar 
.I 2547
representate contour ad region efficient computer search computer searchable representate basic pictorial feature contour map region coverage line structure describ representate practical storage requirement provide rapid mean search large data associate geometric position attribute applicate representate handl terrain informate illustrate utility algebraic property data structure make computational easy determine point lie clos boundary compute area clos boundary generate clos boundary represent union intersection clos boundary determine neighbor boundary point minimum distance point 
.I 2548
normal deviate algorithm 
.I 2549
random deviate dipole distribution algorithm 
.I 2550
multidimensional monte carlo quadrature adaptive stratifi sampl algorithm 
.I 2551
mutual recursion algol restrict compiler 
.I 2552
note chain overflow item direct access table 
.I 2553
practical aspect computer science educate discussion 
.I 2554
reduction band symmetric generalize eigenvalue problem algorithm describ reduc generalize eigenvalue problem ax lambda bx ordinary problem case symmetric band matrices positive definite order matrix bandwidth matrices partition block algorithm describ term block algorithm reduce generalize problem ordinary eigenvalue problem symmetric band matrix bandwidth algorithm similar rutishauser schwartz reduction symmetric matrices band form calculate require order mn operate round error calculate order sum error nm step algorithm error large determin condition respect inversion 
.I 2555
variable precision exponentiate previous paper present efficient algorithm call recomputate algorithm evaluate ration expression desir tolerance computer perform variable precision arithmetic operation recomputate algorithm appli expression involve variable precision operation sumei error bound denotes operation precision ei denotes error operation ith argument paper present efficient variable precision exponential operate error bound order operation log sin simple series expansion handl similarly 
.I 2556
adaptive correction program statement method analyz statement programm language tolerate considerable inaccuracy specificate propos method involve principle present mainly confin study area artificial intelligence feature extraction approximate tree match strategy improvement feedback match process pilot program incorporate principle describ preliminary operate result present final section survey principle investigate 
.I 2557
time requir sequence matrix product paper discuss multiplicate conformable sequence row vector column vector square matrices minimum time requir evaluate product ordinary serial computer parallel computer discuss algorithm present properly parse matrix sequence subject constraint machine organize 
.I 2558
protection programm language linguistic mechanism protect subprogram malfunction describ function produc function type tagg scheme consider attempt made distinguish access limitate authenticate 
.I 2559
reallocate hash cod table space allocate hash cod table alter table entry rescatter space technique accomplish rescatter present technique independent length table hash function utilize conjunction linear reallocate table rescatter eliminate previous flagg deletion hash cod table change hash method efficiency technique discuss theoretical statistic 
.I 2560
queu model multiprogramm computer level storage system result present analysis probabilistic model multiprogramm computer system level storage system sequential dependency access device expression obtain long run probable cpu storage device busy numerical result quantify gain cpu utilize obtainable multiprogramm presence type storage system 
.I 2561
heuristic approach inductive inference fact retrieval system heuristic procedure present develop perform inference generalize informate procedure make similarity structure impos data base nonnumerical cluster algorithm implement model fact retrieval system formal query language property list data structure program experiment describ procedure test data base alter delet part data purpose introduc false data found system infer correct response variety condition involve incomplete inconsistent data 
.I 2562
rout problem algorithm 
.I 2563
merge sort algorithm 
.I 2564
hidden line plott program algorithm 
.I 2565
gaussian pseudo random number generate algorithm 
.I 2566
exact cumulative distribution kolmogorov smirnov statistic small sample algorithm 
.I 2567
exponential method solution system ordinary differential equations explicit coupl single step method numerical solution initial problem system ordinary differential equations present method design general purpose nature especial efficient deal stiff system differential equations general order case linear system constant coefficient linear forc term case method order implement put routine usage biological applications stiffness frequent favorable result compar standard fourth order runge kutta implementate computate time requir method rang comparable nonstiff problem order magnitude faster highly stiff system 
.I 2568
graph formulate school schedul algorithm problem classical titl examinate schedule problem take form literature formulations present terminology classical network theory formulate nondirect network partition node minimal number subset member subset connect anarc obvious lower limit number size largest strongly connect subgraph kirchgassner prove upper limit size logical extension previous work introduction variable length examinations wi number period exam object paper generalize definition largest strongly connect subgraph include weight node present approximate algorithm usual find largest strongly connect subgraph discuss applicate algorithm solution school schedul exam schedul problem 
.I 2569
computer generate gamma random variate non integral shape parameter shape parameter integral generate gamma random variable digital computer straightforward simple method generate gamma random variate non integral shape parameter common procedure approximate generate random variable call probable switch method procedure exact due johnk paper present rejection method exact generate gamma random variable greater efficiency rejection method shown efficiency johnk method paper conclude non integral follow mix procedure yield combinate accuracy efficiency johnk method rejection method greater probable switch method 
.I 2570
comparison list schedule parallel process system problem schedul processor minimize execution time program consist set partial order task studi case task execution time deterministic execution time random variable analyz shown algorithm suggest literature vary significant execution time schedule coffman graham optimal dynamic programm solution case execution time random variable present 
.I 2571
analytic model hasp execution task monitor hasp execution task monitor periodical rearranges dispatch chain give task preemptive execution priority inverse order cpu utilize history effect io bound task active prevent cpu bound task lock task paper develop simple model execution task monitor employ study effectiveness monitor improve system performance modifi strategy monitor control investigate case task execution memory hierarchy vary speed 
.I 2572
argument moratorium construction community informate utility article author urges prudent decentralize approach question design desirable computerize community informate utility accept inevitable desirable technology sure feasible internal external propos project wait change complementary technique evaluate project supplementary technique establish existence demand propos take step involve representative group ultimate user system design carefully think side effect man world view proposal community informate utility examin framework conclusion drawn society position justify construction informate utility prototype community acceptance policy favor widespread implementate 
.I 2573
computer programm art 
.I 2574
multiple exist loop label 
.I 2575
match problem document retrieval 
.I 2576
simple technique represent strings fortran iv 
.I 2577
site data management system applicate field archaeology 
.I 2578
stabilize system spite distribut control 
.I 2579
register allocate usage count paper introduce notion usage count show usage count develop algorithm eliminate redundant computation describe usage count provide basis register allocate paper compare register allocate bas usage count commonly register allocate technique present evidence show usage count technique significant technique 
.I 2580
method compos simple tradition music computer method describ compos musical round computer method music theory addition heuristic fundamental method set production set applicable rule weight rule operate production decid extent round generate computer implementate method present general resultant music sound mediocre professional usual pleas layman full blown music theory need round hardware requir structural level piece author tri address musicians computer scientist 
.I 2581
local organize parser spoken input paper describe lpars local organize pars system design continuous speech recognize lpars process str phonemes ambiguity error system local organize sense build local parse structure reliable word candidates recognize input utterance local structure islands reliable guide search highly garble word complete utterance 
.I 2582
improve local critical work set approach program local improvement restructur describ method suit system primary memory manag accord work set strategy bas concept critical work set work set memory reference data method operate extract trace program restructur shown special case method optimum experimental result obtain method restructure interactive text editor system module operate system shown substantial superiority method propos literature 
.I 2583
guidelines humanize computerize informate system report stanley house 
.I 2584
enumerate full time programmer data census department labor area wage survey derive estimate number full time programmer employ dur year figure considerable suggest earlier report recommend education administrators consider course aim train programmer justifi vocation basis 
.I 2585
efficient implementate variable projection algorithm nonlinear square problem errata 
.I 2586
adapt optimal code generate arithmetic expression instruction set present day computer errata 
.I 2587
construction representative synthetic workload errata 
.I 2588
rosenbrock function minimize algorithm 
.I 2589
computer routine quadratic linear programm problem algorithm 
.I 2590
hypergeometric algorithm 
.I 2591
numerical inversion laplace transform algorithm 
.I 2592
generate test problem linear programm code user linear programm computer code realize necessity evaluate capacity effectiveness accuracy solution provid code large scale linear programm code installations assum generate correct solution bench mark test problem known solution reason failure adequate test code rare large problem known solution readily paper present theoretical justificate illustrative implementate method generate linear programm test problem known solution method permit generate test problem arbitrary size wide range numerical characteristic 
.I 2593
back end computer data base management propos data base management function plac dedicate back end computer accept command relative high level language codasyl data base task group april report host computer access data base secondary storage result advantage configurate discuss experimental implementate call experimental data management system xdms describ conclusion back end approach drawn implementate 
.I 2594
structur data structure programm system permit arbitrary link list structure enable user create complicate structure sufficient protection deletion result unreachable data element guarantee addition perform properly remedy situate paper propose gauge provide create restrict class data structure ensure correctness program accomplish explicit structure declarate facility restriction permissible operation execution time check 
.I 2595
note calculate work set size finite length reference str arbitrary structure consider exact expression average work set size term correct interreference interval statistic derive discuss upper lower bound obtain average work set size function shown efficient obtain set page size single pass reference str work follow development paper denn schwartz consider infinite length reference strings satisfy statistical property derive expression relate asymptotic average work set size asymptotic miss page rate function work set replacement 
.I 2596
weight buddy method dynamic storage allocate extension buddy method call weight buddy method dynamic storage allocate present weight buddy method allow block size original buddy method allow block size extension achieve addition cost bit block simulate result present compare method buddy method result uniform request distribution buddy system total memory fragmentate weight buddy algorithm total fragmentate smaller weight buddy method request exponential distribut block size 
.I 2597
monitor operate system structur concept paper develop brinch hansen concept monitor method structur operate system introduce form synchronize describe method implementate term semaphores give suitable proof rule illustrative include single resource scheduler bound buffer alarm clock buffer pool disk head optimize version problem reader writer 
.I 2598
extend informate theory approach convert limit entry decision table computer program paper modify earlier algorithm convert decision table flowchart minimize subsequent execution time compil computer program algorithm consider paper perform limit search necessarily result global optimal solution greater search effort need obtain global optimal solution complex decision table usual justifi sufficient savings execution time analogy problem convert decision table efficient flowchart understood problem informate theory noiseless cod result noiseless cod literature explore limitations algorithm solve decision table problem analogy problem develop improvement informate algorithm extend depth search condition propos addition condition add decision table final informate algorithm compar algorithm propos recent paper verhelst 
.I 2599
order approximate optimum checkpoint interval 
.I 2600
computate spline factorize method algorithm 
.I 2601
evaluate modifi bessel function kz kz complex argument algorithm 
.I 2602
mask dimensional plot program rotation algorithm 
.I 2603
equivalence reduc transition language deterministic language class reduc transition language introduc eickel paul bauer samelson shown morris proper superclass simple precedence language paper result extend show fact class equivalent class deterministic context free language 
.I 2604
interactive graphic display region partition linear programm linear programm interactive graphic display system implement solve region design problem partition region nonoverlapp subregions area specifi proportion total cost servic minimum conversation manner user easily obtain partitionings modify boundary service center locations area proportion cost function includ 
.I 2605
precise numerical analysis program description program comput solution small number standard numerical analysis problem specifi accuracy limit correct decimal place comput number bound interval multiple precision midpoint arithmetic operation involve number execut accord interval arithmetic concept non significant digit automatical discard detail suppli problem specificate problem computate 
.I 2606
integrate algorithm ordinary differential equations bas continu fraction approximations integrate algorithm found implementate compar programm algorithm algorithm step step procedure solve initial problem ordinary differential equations design approximate pole small integer order solution differential equations continu fraction obtain manipulate sum truncate taylor series expansion method compar gragg bulirsh stoer taylor series method taylor series method method shown superior spe accuracy method shown superior solution requir singularity method final seen pass automatical singularity method discuss fail 
.I 2607
problem list issue concern computer public policy 
.I 2608
recurrence relation fresnel integral similar integral 
.I 2609
interpolate round ramp function interpolate function introduc infinite continuous derivative composition ramp function smooth bends call round ramp function interpolate function extend variable shown efficient fortran program interpolate function obtain point set 
.I 2610
gauss harmonic interpolate formula let open bound simply connect region xy plane let xy point assum starlike respect xy discuss method comput gauss harmonic interpolate formula point xy formula approximate harmonic function xy term linear combinate select point boundary formula approximate solution dirichlet problem 
.I 2611
complex method constrain optimize algorithm 
.I 2612
rosenbrock function minimize algorithm 
.I 2613
transitive set algorithm 
.I 2614
arrow precedence network transformate algorithm 
.I 2615
procedure comput smooth interpolate natural spline algorithm 
.I 2616
conversion program decision table method objective problem convert program decision table investigate objective conversion mainly program debugg optimize practice extension theory computate computable suggest 
.I 2617
note subexpression order evaluate arithmetic expression 
.I 2618
solution dijkstra concurrent programm problem simple solution mutual exclusion problem present allow system continue operate despite failure individual component 
.I 2619
graph color condition existence solution timetable problem sufficient condition present existence solution gotlieb class teacher timetable problem relationship establish class teacher timetable problem graph preconditions preconditions place addition restriction colorate graph preconditions correspond unavailable constraint preassign meetings class teacher timetable problem recent result convert graph preconditions graph shown existence colorate graph requir sufficient condition 
.I 2620
execution time requirement encipherment program encipherment discuss mean protect computer data cost establish experiment conduct measure cpu time cdc requir additive cipher programm assemble language fortran null transformate measure time move data encipherment encipherment word key encipherment word key double key encipherment encipherment pseudo random key result analyz consistency run effect constant intermittent error consider tim rate assemble language encipherment rang character pseudo random key cipher character constant word key cipher equivalent rate requir simply move data encipherment fortran test requir time cpu time paper introduce idea encipher time coefficient ratio encipher time time fetch store data encipherment 
.I 2621
high security log procedure protection time shar system unauthorize user achieve passwords cipher code passwords risks involve stor passwords computer avoid discuss selection suitable cipher suggest purpose polynomial prime modulus superior cipher derive sannon code 
.I 2622
user authenticate scheme requir secrecy computer computer operate system user authenticate enter secret password known sole system system compare password record password table authenticate program integrity system depend table secret paper password scheme present require secrecy computer aspect system includ relevant code data base known attempt intrude scheme bas function intruder unable invert function appli user password result compar table entry match interpret authenticate user intruder know access table penetrate system invert determine input produce output paper discuss issue surround selection suitable plausible argument penetrate exceedingly difficult argu rigorous result unlike final human engineer problem relate scheme discuss 
.I 2623
technique compression storage data widespread tendency storage large program block text produc ne efficient method compress stor data paper describe technique case decrease storage size factor technique involve special handl lead trail blank encod symbol group fix size unique fix point number efficiency system consider pertinent statistic compar statistic informate cod technique 
.I 2624
formal requirement virtualizable generate architecture virtual machine system implement limit number generate computer system cp ibm previous empirical study known generate computer system dec pdp support virtual machine system paper model generate computer system develop formal technique derive precise sufficient condition test architecture support virtual machine 
.I 2625
capable bas address address scheme mak segment table examin inadequacy scheme deal shar address explain inadequacy trac lack efficient absolute address object system direct capable address shown overcome difficulty provide need absolute address implementate capable bas address discuss predict tag identify capability dominate hardware address translate scheme require modificate representate capability suggest scheme main memory hash table obtain segment locate main memory unique code hash table avoid recent access segment mean set associative register computer capable bas address substantial superior present system basis protection simplicity programm convention efficient implementate 
.I 2626
protection control informate shar multics design mechanism control shar informate multics system describ design principle help provide insight tradeoff design key mechanism describ include access control list hierarchical control access specifications identificate authenticate user primary memory protection paper end discussion known weakness protection mechanism design 
.I 2627
schedul independent task reduce mean finish time sequenc minimize mean finish time mean time system desirable user tend minimize point time storage requir hold incomplete task paper deterministic model independent task introduc result derive extend generalize algorithm known minimize mean finish time addition present analyz algorithm shown general mean finish time problem independent task polynomial complete unlike admit non enumerative solution 
.I 2628
minimal total process time drum disk schedul discipline article investigate applicate minimal total process time mtpt schedul discipline rotate storage unit random arrival request allow fix head drum move head drum move head disk storage unit consider emphasis plac relative merit mtpt schedul discipline respect shortest latency time sltf schedul discipline result simulate study present show schedul discipline unconditional superior fix head drum applications sltf discipline preferable mtpt intra cylinder disk schedul mtpt discipline offer distinct advantage sltf discipline computation requirement algorithm implement mtpt schedul discipline shown comparable sltf algorithm case sort procedure time consum phase algorithm 
.I 2629
time shar system general purpose multi user interactive operate system digital equipment corporate pdp computer offer number feature seldom found larger operate system includ hierarchical system incorporate demountable volume compatible device inter process io able initiate asynchronous process system command language selectable user basis subsystem includ dozen languagesthis paper discuss nature implementate system user command interface 
.I 2630
comput set shortest path graph algorithm present construct shortest path pair vertices direct graph algorithm generalize floyd algorithm dantzig algorithm find shortest path pair vertices direct graph 
.I 2631
informate theoretic approach text search direct access system direct access computer bibliographic informate attempt made overcome problem associate informate retrieval maintenance large dictionary greater part infrequent method present map hyperbolic frequency distribution suit implementate storage device method treat text str character word bound space choose subset strings frequency occurrence word type member subset index key retrieval rectangular distribution key frequency result simplifi organize promise considerable cost advantage 
.I 2632
hydra kernel multiprocessor operate system paper describe design philosophy hydra kernel operate system cmmp carnegie mellon multi mini processor philosophy realize introduction generalize notion resource physical virtual call object mechanism present deal object includ create type specificate operation applicable type shar protection reference object improper applicate operation defin respect type object mechanism provide coherent basis extension system direction introduction facility create highly secure system 
.I 2633
compact representate contour plot phone line transmission method compact representate contour plot describ test intend reduce cost transmitt contour plot phone line feel method transmit contour plot voice grade phone line 
.I 2634
evaluate statistical software social science hundr college university computer installations offer type statistical package general wide osiris sps bmd data text tsar order provide user basis selection test made system result summarize cost performance 
.I 2635
exact probability contingency table algorithm 
.I 2636
generate random correlate normal variable algorithm 
.I 2637
hidden line plott program algorithm 
.I 2638
hidden line plott program algorithm 
.I 2639
calculate fourier integral algorithm 
.I 2640
modifi havie integrate algorithm 
.I 2641
minimal spann tree cluster method algorithm 
.I 2642
solution overdetermin system equations norm algorithm 
.I 2643
minimize spatial multiplex character set paper describe technique compact character set digital computer retain fast access individual bit consider problem minimize storage need table reduction technique develop problem shown reduce cover problem 
.I 2644
theorem prove language experimentate large number strategy inference rule present considerate automate theorem prove ne develop language especial orient automate theorem prove paper discuss feature instruction language language permit easy extension automate theorem prove program include strategy andor inference rule extend able permit general experimentate alternative system 
.I 2645
language estimate program efficiency language enable user estimate efficiency computer program present program efficiency wishes estimate written language programm language include feature algol language consist interactive command enable user provide addition informate program written language output result estimate efficiency processor language describ processor syntax direct translate compile program symbolic formula represent execution time program sound processor set procedure program processor set procedure algebraic manipulate call user operate formula produc processor usage language includ limitations present system relate knuth work analysis algorithm direction research discuss 
.I 2646
model mask rotation latency dynamic disk allocate paper present background algorithm mask rotation latency disk drum discuss anticipatory input output block data buffer primary memory mono programm computer system basic permutate algorithm variation anticipatory nature io schedul algorithm restrict class program predictable behavior method restrict numerical computation matrix partial differential equate method typical shown latency mask small amount buffer memory method discuss independent size data base consider 
.I 2647
algorithm reveal property floate point arithmetic unit 
.I 2648
design number theory package optimize trial division routine number theory package describ double link list structure stor multiprecise integer package cod ibm basic assemble language make heavy macro language condition assemble optimal cod trial division routine describ determine unique factorize large integer 
.I 2649
distribution significant digit roundoff error generalize logarithmic law derive distribution significant digit random digital integer result determine distribution roundoff error floate point operation mixture uniform reciprocal distribution 
.I 2650
order correction regular language method present calculate str belong regular language nearest number edit operation input str view reasonable correction erroneous str original intend str calculate method present require time proportion number character method find applications informate retrieval artificial intelligence spell correction system 
.I 2651
treatment data type el construct general purpose programm language key issue provid sufficient set data type associate operation manner permit natural problem orient notate efficient implementate el language number feature specifical design simultaneous satisfy requirement result treatment data type include provision programmer defin data type data type generic routine programmer control type conversion flexible data type behavior context allow efficient compil code compact data representate 
.I 2652
reduction compilate cost language contraction programm language tailor group user construct remove unwant feature general purpose language paper describe simulate technique predict savings compilate cost achievable approach result suggest function describe effect change power language compilate cost algorithm express language feature actual algorithm remove language cost compil algorithm decrease moderate feature need remove compilate cost increase sharply 
.I 2653
solution transcendental equate wexpxx algorithm 
.I 2654
generate set partition exact subset algorithm 
.I 2655
subprogram curve fitt spline tension algorithm 
.I 2656
scalar planar valu curve fitt spline tension spline tension introduc schweikert attempt imitate cubic spline avoid spurious critical point induce defin equations present efficient method determin parameter comput resultant spline standard scalar valu curve fitt problem discuss fitt open clos curve plane curve importance tension fitt contour line mention applicate 
.I 2657
improve program synthesize algorithm correctness improve program synthesize algorithm bas algorithm propos waldinger lee algorithm program synthesize problem translate theorem prove problem program obtain analyz proof improve algorithm analysis program obtain soon proof complet achieve modifi variable trac mechanism invent green correctness improve algorithm prove program obtain satisfy specificate 
.I 2658
alternative approach mutual recursion algol restrict compiler 
.I 2659
remark lookup structur variable 
.I 2660
addendum patrick paper 
.I 2661
ideal teach machine solution pedagogic language problem 
.I 2662
graduate educate phd glut response rebuttal 
.I 2663
study computer graduate school business 
.I 2664
parallelism tape sort method employ parallelism tape sort present method natural parallelism method approximate achieve goal reduc process time divisor number processor 
.I 2665
copy list structure bound workspace algorithm present list structure copy bound workspace primarily theoretical interest show cell tag bit task perform time algorithm assum tag bit cell deliver attractive practical spe noncyclic structure copi linear spe cyclic structure copi average time nlogn foreknowledge cycle absence achieve linear spe variate algorithm solve open problem concern list structure mark result demonstrate mark average time nlogn aid supplemental tag bit stack 
.I 2666
lions counter gotlieb method construction school timetable timetable problem essential discrete problem discrete problem feasible solution exist solution equivalent continuous problem nondiscrete solution interpret set timetable differ week week satisfy long term requirement timetable problem 
.I 2667
execution characteristic program page demand system data present show execution characteristic type commonly program large scale time shar computer system software monitor facility built supervisor data collection dur normal system operate data analyz result analysis present fortran compiler interactive line editor probable distribution function data things cpu interval io interval number interval dur execution empirical distribution compar simple theoretical distribution exponential hyperexponential geometric data show pag characteristic task function number page task core 
.I 2668
computate page fault probable program transition diagram algorithm calculate page fault probable virtual memory system operate demand pag memory size replacement rule order markov model program behavior assum representate system bas memory state control state memory substates present algorithm general sense page fault probability calculate nonpredictive replacement rule appli program represent step markov chain detail illustrate algorithm random recent lru replacement rule 
.I 2669
simple linear model demand pag performance predict performance propos automatical manag multilevel memory system require model pattern program refer informate stor memory recent experimental measurement multics virtual memory suggest rough approximations remarkable simple program reference model suffice simple model combine effect informate reference pattern effect automatic management algorithm produce single composite statement mean number memory reference pag exception increase linearly size pag memory result model easy manipulate applicable diverse problem choos optimum size pag memory arrang reproducible memory usage charge estimate amount core memory shar 
.I 2670
efficient implementate variable projection algorithm nonlinear square problem nonlinear square frequent arise variable solve separate linear nonlinear part variable projection algorithm develop recent design take advantage structure problem variable separate paper give slight efficient slight general version algorithm earlier 
.I 2671
note combinatorial problem burnett coffman 
.I 2672
emotion content consider dangerous 
.I 2673
quadratic search hash table size pn 
.I 2674
scan conversion algorithm cell organize raster display raster scan computer graphic real time character generators previous limit alphanumeric character display describ extend capability organize include general graphic fundamental scan conversion algorithm develop support display present suitable non interactive applications interactive applications algorithm implement fortran cdc computer result obtain implementations show noninteractive algorithm significant reduce display storage requirement cost execution time convention raster display interactive algorithm improve response time reduce storage requirement 
.I 2675
computer routine quadratic linear programm problem algorithm 
.I 2676
complex polynomial algorithm 
.I 2677
incomplete beta ratio algorithm 
.I 2678
visible surface plott program algorithm 
.I 2679
performance test quicksort descendants detail performance evaluations present acm algorithm quicksort shellsort stringsort treesort quickersort qsort algorithm refinement algorithm discuss detail evidence demonstrate qsort require comparison author claim algorithm quickersort require fewest comparison sort random array 
.I 2680
optimal space allocate disk storage device amount space requir storage exceed amount line decision made permanent resident mountable decision affect number mount request issu operators bottleneck comput facility reduc number mount decrease turnaround time optimize model assignment disk pack pack resident nonresident status present heuristic suggest case inefficient compute actual optimum 
.I 2681
dynamic memory repack probabilistic model multiprogramm system exercis order determine condition dynamic repack main memory beneficial expression derive maximum interference repack process introduce original performance system degrad alternative approaches repack discuss operate condition lead improve system throughput repack delineate 
.I 2682
construction representative synthetic workload general method construct drive workload representative real workload describ real workload characterize demand system resource characteristic real workload obtain system account data characteristic drive workload determin match joint probable density real workload drive workload drive workload realize synthetic program characteristic vari vary parameter calibrate experiment conduct determine expression relate synthetic program parameter workload characteristic general method appli case variable cpu number io activity synthetic workload job construct represent month workload consist job 
.I 2683
synthesis loop predicate method mechanical program verificate require complete predicate specificate loop tedious error prone produc program complete correct predicate reasonable difficult facilitate machine assistance paper discuss technique mechanical synthesize loop predicate class technique consider heuristic method derive loop predicate boundary condition andor partial specifi inductive assertion extraction method input predicate weak interpretations obtain class loop predicate evaluate weak interpretate 
.I 2684
production system bnf development bnf definition syntax programm language universal associate context free requirement numerous interest difficult issue syntax stem context sensitive requirement notable compatible declarate identifier correspondence actual formal parameter issue aris block structure paper explore formal notate call production system provid readable complete formal definition syntax practical illustrate small significant subset pli consider detail presentate applicate define abstract syntax translations language previous paper author 
.I 2685
parallel execution loop method develop parallel execution iterations loop asynchronous multiprocessor computer array computer consider practical applicate design compiler computer discuss 
.I 2686
approximate method generate asymmetric random variable tukey lambda distribution generalize provide algorithm generate unimodal asymmetric random variable algorithm advantage symmetric random variable generate previous author addition parameter complicate problem find parameter fit distribution 
.I 2687
cell organize raster display line drawings raster scan computer graphic display real time character generators previous limit alphanumeric character display describ extend capability organize include general graphic feasible display shown derive minimum number pattern requir read memory character generate synthesize arbitrary line synthesis process compromise picture qual result dot pattern identical convention raster display time constraint raster display shown satisfi typical design complex line drawings 
.I 2688
attribute bas organize pag memory environment high cost page access imply ne careful data organize pag memory typical invert similar approaches multi key retrieval article analyses cost propose method call multiple key hash attempt minimize approach preferable inversion combin method describ exact specifications combinate data traffic characteristic formulate mathematical program propos heuristic solution program improve simple inversion technique factor 
.I 2689
crt report generate system 
.I 2690
number system combination 
.I 2691
comment algorithm verhelst conversion limit entry decision table flowchart 
.I 2692
reentrant polygon clipp family clipp algorithm describ algorithm able clip polygon irregular convex plane fac volume dimension remove part polygon lie volume dimension algorithm permit clipp irregular convex window polygon clipp represent order sequence vertices repetition mark contrast representate collection edge heretofore common procedure output polygon identical format vertices introduc sequence describe newly cut edge edge algorithm easily handle difficult problem detect vertex requir corner clipp window algorithm describ achieve considerable simplicity clipp separate clipp plane window boundary code capable clipp polygon single boundary reenter clip subsequent boundary reentrant stage clipp ne store vertex begin process soon output vertex proceed stage ready code reenter clipp subsequent boundary clipp complex window shape practical perspective applications dimentions plane truncate pyramid chosen clipp volume addition plane parallel projection screen serve limit range depth preserve projection perspective projection method provide arbitrary view angle depth field spite simple fix clipp plane describ method ideal subsequent hidden surface computation 
.I 2693
bivariate interpolate smooth surface fitt bas local procedure algorithm 
.I 2694
computate legendre series coefficient algorithm 
.I 2695
tridiagonalize permutations tridiagonalize matrix similarity transformation important computation tool numerical linear algebra consider class sparse matrices tridiagonalize row correspond column permutations advantage transformate include absence round error improve computate time compar standard transformation graph theoretic algorithm examine arbitrary matrix determine permut tridiagonal form algorithm require arithmetic number comparison number assignment number increment linear compare favorable standard transformate method matrix permutable tridiagonal form algorithm give explicit tridiagonal form early rejection occur 
.I 2696
method bivariate interpolate smooth surface fitt bas local procedure method design interpolate point rectangular grid plane smooth bivariate function zzxy interpolate function bicubic polynomial cell rectangular grid emphasis avoid excessive undulate grid point propos method extension method univariate interpolate develop earlier author likewise bas local procedure 
.I 2697
fast method solve class tridiagonal linear system solution linear system real symmetric diagonal dominanttridiagonal coefficient matrices constant diagonal consider prove diagonal lu decomposition converge floate point precision prove comput lu decomposition converge floate point arithmetic limit lu diagonal floate point roughly machine precision limit real arithmetic fact exploit reduce number floate point operation requir solve linear system nk order matrix element subdiagonals superdiagonals nk operation need entire lu decomposition take word storage considerable savings array subscript achieve upper lower bound obtain term ratio coefficient matrix diagonal constant parameter floate point number system generalizations result discuss 
.I 2698
syntax direct error analysis context free language practical approach error recognize develop informal known recognize earley element bellman dynamic programm analyzer take general class context free grammar drivers finite str input recognition consist error count correct version input relative driver grammar algorithm design emphasize practical aspect help programm 
.I 2699
automatic data structure choice language high level setl set theoretical orient language high level repertoire semantic object include finite set order tuples set order tuples usable mappings paper describe structure optimize language method interest optimize technique allow relation inclusion membership establish domain range tabulate mappings estimate single valuedness tabulate mappings prove fact kind establish automatic choice data structure method employ bas extend known technique data flow analysis 
.I 2700
reduction method prove property parallel program prove parallel program property convenient assume statement indivisible statement interleave rest program sufficient condition obtain show assumption statement indivisible relax preserve property halt correctness proof parallel system great simplifi 
.I 2701
fast usual linear algorithm global flow analysis abstract complete paper jacm january algorithm global flow analysis reducible graph present algorithm shown treat general class function space graph edge algorithm worst case time bound oe log function operation shown programm term number operation proportion number exit program loop consequent restriction entry exit control structure linearity algorithm extend larger class function space graph relax time bound code improvement problem solve algorithm 
.I 2702
complexity lrk test problem determin arbitrary context free grammar member easily pars subclass grammar lrk grammar consider time complexity problem analyz consider fix integer consider parameter test case shown exist onk algorithm test lrk property size grammar question hand subject grammar problem parameter complexity problem depend strongly representate chosen specifical shown problem np complete express unary express binary problem complete nondeterministic exponential time result carry parameterize class grammar llk strong llk slrk lck strong lck grammar 
.I 2703
intrinsical exponential complexity circularity problem attribute grammar attribute grammar extension context free grammar devis knuth mechanism includ semantic context free language syntax language circularity problem grammar determine semantic sentence program fact defin prove problem general computational intractable specifical shown deterministic algorithm solve problem infinite case exponential amount timean improve version knuth circularity test algorithm actual solve problem exponential time 
.I 2704
exception handl issue propos notate paper define exception condition discuss requirement exception handl language feature satisfy propose language feature deal exception orderly reliable propos language feature serve highlight exception handl issue show deficiency approaches remedi 
.I 2705
programm language natural language mathematics social aspect programm illuminate analogy similar aspect mathematics natural language split pure appli mathematics found similarly programm development natural language flexion word order bas language type speaks programm language design bas general abstract construct analogy incidents history artificial auxiliary language suggest fortran cobol remain dominant long time come promis avenue work wide influence seen high qual program literature program general utility study question relate program style 
.I 2706
note set basis problem relate compaction character set note discuss reduction set basis problem clique cover problem 
.I 2707
backtrack programm technique purpose paper twofold exposition general backtrack technique history shown macro considerable shorten computate time case technique allow solution previous open combinatorial problem computate term known series substantial reduction computate time solution combinatorial problem 
.I 2708
practical syntactic error recovery paper describe recovery scheme syntax error provide automatical generate high qual recovery good diagnostic informate relative low cost previous recovery technique summarize empirical comparison made suggestion research topic conclude paper 
.I 2709
genealogy control structure issue program control structure history heate controversy put issue solid foot paper review numerous theoretical result control structure explore practical implications classic result bohm jacopini theoretical completeness discuss recent idea control structure explor include review control structure result timespace limitations theorem relate relative power control structure notion equivalence conclusion impact theoretical result practic programmer importance control structure operation abstraction discuss argu insufficient evidence warrant variant 
.I 2710
query relation expression square data sublanguage paper present data sublanguage call square intend ad hoc interactive problem solve non computer specialist square bas relation model data shown relational complete avoid quantifiers bound variable requir language bas relation calculus facility query insertion deletion update tabular data base describ syntax suggestion made alternative syntaxes includ syntax bas english key word user limit mathematical background 
.I 2711
vector space model automatic index document retrieval pattern match environment stor entity document compar incom pattern search request index property space entity lie circumstances index system expressible function density object space retrieval performance correlate inverse space density approach bas space density computation choose optimum index vocabulary collection document typical evaluate result shown demonstrate usefulness model 
.I 2712
horner rule evaluate general clos queue network solution separable clos queue network require evaluate homogeneous multinomial expression number term expression grow combinatorial size network direct summate impractical algorithm show combinatorial operate count algorithm bas generalize horner rule polynomial shown mean queue size throughput obtain negligible extra cost normalize constant evaluate 
.I 2713
remark stable update mean standard deviate data corrigendum 
.I 2714
merg parallel processor consider linearly order set bn mn pm parallel processor work synchronous paper present algorithm merg parallel processor require log mmp mplog nm step bm integer algorithm require log mpb step case order magnitude nkm constant algorithm require log mpk step performance compare favorable previous parallel merg algorithm batchers algorithm require np mnplog step general case kmp kmplog special case nkm 
.I 2715
implementate structur english query language relation model data xrm relation memory system sequel language cover previous paper review sequel relation data sublanguage intend ad hoc interactive problem solve non computer specialist version sequel implement prototype interpreter describ interpreter design minimize data access operation requir respond arbitrary query optimize algorithm design purpose describ 
.I 2716
optimize performance relation algebra database interface approach implement smart interface support relation view data propos basic idea employ automatic programm technique interface analyze efficient refines high level query specificate suppli user relation algebra interface call squiral design approach describ detail squiral seek minimize query response time space utilize perform global query optimize exploit disjoint pipelin concurrency coordinate sort order temporary relation employ directory analysis maintain local page reference algorithm implement operators codds relation algebra present methodology compos optimize performance user query describ 
.I 2717
convert high level translate definition language data conversion paper describe high level nonprocedural translate definition language convert provide powerful highly flexible data restructur capability design bas simple underly concept form enable user visualize translate process make data translate simpler task convert chosen convey purpose language confus language program bear 
.I 2718
preliminary system design dbtg data structure function approach database design introduc approach goal design derive data structure capable support set anticipate query structure model business operation computer program describ utilizers function approach design data structure conform data base task group specifications automatic programm technology utilize program typical generate procedure generate declarative 
.I 2719
mechanical program analysis mean analyz program performance derive clos form expression execution behavior paper discuss mechanize analysis describe system metric able analyze simple lisp program produce clos form expression runn time express term size input paper present reason mechanize program analysis describe operate metric explain implementate discuss limitations 
.I 2720
optimal balanc io request disk determin policy efficient allocate utilize set disk drive differ operation characteristic examin analytical technique standard queue theory disk drive characterize queue model service time disk drive represent probable density function sum uniform distribution total response time set disk model minimize vary load condition result faster device higher utilize factor number device type utilize tend decrease decreas load specific combination examin 
.I 2721
digital simulate river plankton populate dynamic paper deal development mathematical model digital simulate fortran iv phytoplankton zooplankton populate density river previous develop rate expression order study relationship ecological mechanism involve simulate parameter vari illustrate response ecosystem condition includ correspond type chemical thermal pollution investigate accuracy simulate method simulate actual populate dynamic asterionella columbia river made bas approximations condition river total accurate simulate found predict general annual pattern plankton growth fairly specifical reveal importance annual velocity cycle determin pattern addition study demonstrate usefulness digital simulations examinations aquatic ecosystem environmental plann involve examinations 
.I 2722
multidimensional binary search tree associative search paper develop multidimensional binary search tree tree dimensional search space data structure storage informate retrieve associative searches tree defin shown storage requirement significant advantage structure single data structure handle type query efficient utility algorithm develop proven average runn time record insertion log deletion root nk deletion random node log optimize guarantee logarithmic performance searches log search algorithm partial match query key specifi proven maximum runn time nk tk nearest neighbor query empirical observe average runn time log performance surpass known algorithm task algorithm present handle general intersection query main focus paper theoretical felt tree applications potential 
.I 2723
multiprocess compactify garbage collection algorithm multiprocess compactify garbage collector present discuss simple case processor perform lisp list operation perform garbage collection continuous examin capability processor defin interprocessor communicate interlock complete procedure garbage collection standard list process primitive present explain attention problem mark relocate list cell processor operate primary aim allow list processor run unimped processor reclaims list storage complex case involve list processor garbage collection processor briefly discuss 
.I 2724
lemniscate constant corrigendum 
.I 2725
comparison simulate event list algorithm corrigendum 
.I 2726
combin decision rule decision table technique minimize logic circuit appli simplificate decision table combin decision rule method logical equivalent quien mccluskey method find prime implicants decision rule impli rule occur low frequency rule simplify decision table objective merit considerate optimize decision table reduc machine execution time reduc preprocess time reduc requir machine memory reduc number decision rule improve clarity decision table human reader shown objective method objective attain overspecifi decision rule combin objective compar potential benefit objective decid method 
.I 2727
multiple byte process full word instruction method describ allow parallel process pack data item ordinary full word computer instruction process require operation execution contingent datum provide technique process small data item alphanumeric character 
.I 2728
consecutive storage relevant record redundancy paper study property class organization crwr record relevant query stor consecutive storage locations organization redundancy theorem provide tool reduc redundancy crwr organization develop redundancy obtain applicate theorem compar query invert organization crwr organize minimum redundancy develop query set key 
.I 2729
comment paper chen ho 
.I 2730
interactive consult natural language interactive programm system help command give programmer line instruction regard system command argu relative easy make help command significant helpful accept request natural language demonstrate weizenbaums eliza program provid script turn natural language system consultant 
.I 2731
remark stable update mean standard deviate data 
.I 2732
guard command nondeterminacy formal derivate program call guard command introduc build block alternative repetitive construct allow nondeterministic program component active evok final state necessarily unique determin initial state formal derivate program express term construct calculus shown 
.I 2733
deterministic pars ambiguous grammar method describ syntax programm language flexible natural convention bnf description consider method involve ambiguous context free grammar rule resolve syntactic ambiguity shown efficient lr ll parser construct direct class specifications 
.I 2734
external storage fragmentate produc fit fit allocate strategy publish comparison external fragmentate produc fit fit memory allocate consistent simulate series experiment perform order obtain data relative performance fit fit understand reason underly observe difference time memory product efficiency fit fit general percent small populations size request populate effect allocate efficiency exponential hyperexponential distribution request fit outperform fit normal uniform distribution exponential distribution distort fit outperform fit hypothesize fit outperform fit fit preferential allocate end memory encourages large block grow end sufficient contiguous space relative large request result simulate experiment support hypothesis show relative performance fit fit depend frequency request coefficient variate request distribution greater approximate equal unity fit outperform fit 
.I 2735
discriminate employment women computer industry 
.I 2736
note hash link 
.I 2737
determin minimum area encas rectangle arbitrary clos curve paper describe method find rectangle minimum area arbitrary plane curve method interest pack optimum layout problem consist determin minimal perimeter convex polygon encloses curve select rectangle minimum area capable polygon theorem introduc show side minimum area rectangle colinear edge enclos polygon minimum area encas rectangle convex polygon minimum area rectangle curve 
.I 2738
concept transparency design hierarchical structur system paper deal design hierarchical structur programm system develop method evaluate cost requir programmer work abstraction real machine number hardware software illustrations method 
.I 2739
restriction language computer grammar natural language past year number system computer analysis natural language sentence bas augment context free grammar context free grammar define set parse tree sentence group restriction tree conform order valid sentence analysis coverage grammar increas efficient representate essential development paper present programm language design specifical compact perspicuous statement restriction natural language grammar bas ten year experience pars text sentence comprehensive english grammar nyu linguistic str project embody syntax routine relation found adequate computerize natural language analysis language implementate linguistic str parser 
.I 2740
large semaphore bas operate system paper describe internal structure large operate system set cooperate sequential process process synchronize mean semaphore extend semaphore queue semaphore number parallel process carefully justifi semaphore construction explain system prove free deadly embrace deadlock design principle alternative dijkstra hierarchical structur operate system project management performance discuss operate system large rc multiprogramm system 
.I 2741
decomposable instability saturate multiprogramm system step step approach model dynamic behavior evaluate performance comput system propos bas technique variable aggregate concept nearly decomposable system borrow econometrics approach order identify multiprogramm pag system unstable regimes operation ii critical comput load br system state saturate analysis lead complete definition circumstances thrash set 
.I 2742
improve event scann mechanism discrete event simulate simulate model large complex real world applications occasional earn reputate eate hour computer time problem attribut part difficulty slow stochastic convergence addition problem lie fact significant amount bookkeep time requir future event proper sequence paper present method significant reduc time spent scann future event list discrete event simulations model present improve effectiveness event list scan problem burdensome 
.I 2743
sort 
.I 2744
addition arbitrary base radix conversion paper present generalize programm technique itone add subtract number represent radix includ mix radix stor digit byte byte sufficient size radix conversion unnecessary loop requir number stor display io format applications cobol mix hexadecimal sum discuss 
.I 2745
linear space algorithm comput maximal common subsequences problem find longest common subsequence strings solve quadratic time space algorithm present solve problem quadratic time linear space 
.I 2746
efficient str match aid bibliographic search paper describe simple efficient algorithm locate occurrence finite number keyword str text algorithm consist construct finite state pattern match machine keyword pattern match machine process text str single pass construction pattern match machine take time proportion sum length keyword number state transition made pattern match machine process text str independent number keyword algorithm improve spe library bibliographic search program factor 
.I 2747
simplifi recombinate scheme fibonacci buddy system simplifi recombinate scheme fibonacci buddy system require table repetitive calculation addition bit buffer present 
.I 2748
indirect thread code efficient arrangement interpretive code describ relate bell notion thread code require space amenable machine independent implementations 
.I 2749
significant event simulate paper compare method simulate organize call significant event method call clock pulse method automobile traffic model significant event method found efficient clock pulse method low level system interaction efficient high level simple mathematical model trade relative runn time method develop model aid choos simulate method experiment conclud significant event method simulate system computation efficiency sufficient importance 
.I 2750
cost orient algorithm data set allocate storage hierarchy data set allocate today multilevel storage system usual bas qualitative ad hoc decision desirable obtain optimal solution allocate problem clear number parameter involve make intractable straight forward solution situate find set assumption simplify problem great provide basis consider significant cost element paper present quantitative allocate step consider significant detail cost system utilize data storage data stag data migrate avenue improvement present algorithm usefully accurate aid quantify problem data set allocate storage system configurate device design 
.I 2751
illuminate computer generate picture qual computer generate image dimensional scene depend shad technique paint object cathode ray tube screen shad algorithm depend part method model object determine hidden surface algorithm method object model shad hidden surface removal strongly interconnect shad technique correspond method object model relate hidden surface algorithm present human visual perception fundamental law optics consider development shad rule provide qual increas real generate image 
.I 2752
generate cycle graph set basic cycle algorithm 
.I 2753
heuristic problem solve design system equipment furniture layout designer problem solver dps demonstrate computer perform simple design task design furniture equipment layout task chosen simple defin characteristic design task architecture engineer urban plann natural resource management space plann task usual involve manipulate dimensional representation object create feasible optimal solution problem involve topological metric spatial constraint paper describe extensive test perform program dps heuristic problem solver plann phase prefix plann process give sense direction diagnostic procedure locate difficulty remedial action recover difficulty convex polygon representate accurate describe object layout representate allow topological metric constraint test design easily update dps appli problem slow limit scope idea general demonstrate ne selective controll search method achieve task specific informate plann diagnostic procedure remedial action selective alternative generators 
.I 2754
syntactic algorithm peak detection waveform applications cardiography peak digitize waveform detect algorithm incorporate piecewise linear approximate tabular pars technique parameter serve identify waveform context enable accurate measurement peak amplitude durate shape algorithm sufficient spe allow line real time process applicate demonstrate electrocardiogram 
.I 2755
math computer programm corrigendum 
.I 2756
problem list public policy issue concern computer health care 
.I 2757
kth shortest path 
.I 2758
note lu factorize symmetric matrix 
.I 2759
solution overdetermin system equations norm algorithm 
.I 2760
visible surface plott program algorithm 
.I 2761
visible surface plott program algorithm 
.I 2762
ten subroutine manipulate chebyshev series algorithm 
.I 2763
basic cycle generate algorithm 
.I 2764
intelligent analyzer understander english paper describe work analysis generate program natural language handle paragraph length input core system preferential choice deep semantic pattern bas call semantic density system contrast syntax orient linguistic approaches theorem prove approaches understand problem 
.I 2765
analysis performance invert data base structure ne envision architecture data base system hierarchical level level framework stress invert data base organize analyz consider implementate orient aspect invert directory view realistical large data base subject inversion formulations derive estimate average access time read storage requirement formalize interaction data base content characteristic logical complexity query machine tim block specifications identifi order effect performance formulations present conjunction index selection criteria determine optimum set index key 
.I 2766
copy cyclic list structure linear time bound workspace bound workspace copy algorithm arbitrary list structure algorithm operate linear time require tag bit previous bound workspace copy algorithm achieve time tag bit log time tag restriction algorithm copy plac contiguous section memory method applicable fix variable size node 
.I 2767
comparison simulate event list algorithm algorithm consider schedule event general purpose discrete simulate system algorithm bas end order tree structure event notices index linear list algorithm test set typical stochastic schedul distribution especial chosen show advantage limitations algorithm end order tree algorithm shown advantageous replacement algorithm simulate language promis algorithm index list concept require adaptive routine employ general purpose simulatorsbut performance study fruitful 
.I 2768
algorithm locate adjacent storage block buddy system simple scheme determinate locate block storage relative block describ scheme applicable buddy type storage allocate system 
.I 2769
modificate warshalls algorithm transitive closure binary relation algorithm comput transitive closure binary relate represent boolean matrix algorithm similar warshalls execute faster sparse matrices computer pag environment 
.I 2770
quadratic hash method table size prime number previous work quadratic hash method limit mainly case table size prime number result derive composite number shown composite number square component prime full period integer coefficient quadratic hash function 
.I 2771
synthesis solid bound face technique present allow class solid object synthesize stor computer synthesis begin primitive solid cube wedge cylinder solid move scal rotate solid add subtract algorithm perform addition describ practical designer technique advantage operation concise readily compos term easily imagin solidsquite short sequence operation suffice build complex solid bound face 
.I 2772
maintenance opportunity list class teacher timetable problem principal component procedure solution class teacher timetable problem maintenance opportunity list opportunity list maintenance method bas condition existence solution general framework condition specific set condition 
.I 2773
weight buddy method dynamic storage allocate corrigendum 
.I 2774
remark algorithm 
.I 2775
dilogarithm function real argument algorithm 
.I 2776
computer network higher educate socio economic political factor study present result nationwide survey computer network higher educate conduct dur major minor network identifi major network includ arpa net california state college network university iowaiowa state university network michigan education research informate triad triangle university computate center network north carolina depth study conduct net bas experience operate network number factor identifi considerate develop network final recommendations advanc regard development network higher educate future 
.I 2777
solution cigarette smokers problem condition statement report discuss problem introduc patil claim cigarette smokers problem solve operation introduc dijkstra condition statement examinate patil proof show establish claim strong restriction restriction eliminate programm technique dijkstra introduction semaphore concept paper solution problem discuss ne generalize operators suggest patil 
.I 2778
perturbations eigenvalue non normal matrices corrigendum 
.I 2779
discrete square polynomial fit recurrence relate orthogonal polynomial wide discrete square data fitt variant classical algorithm numerical property present reason improve performance explain 
.I 2780
comput element inverse sparse matrix recursive algorithm comput inverse matrix lu factor bas relationship takahashi al examin formula algorithm dependency relationship derive computation cost develop general comment applicate stable made 
.I 2781
algorithm sequential access method alternative index sequential 
.I 2782
reply gentleman marovich 
.I 2783
algorithm select find ith smallest element algorithm 
.I 2784
expect time bound selection selection algorithm present shown efficient average theoretical practical number comparison select ith smallest number nminin ion lower bound percent formula derive 
.I 2785
glypnir programm language illiac iv glypnir earliest exist language design programm illiac iv computer syntax language bas algol extend allow programmer explicit parallelism algorithm term word vector paper describe characteristic goal philosophy language discuss problem associate parallel computer architecture 
.I 2786
system typesett mathematics paper describe design implementate system typesett mathematics language design easy learn people secretary mathematical typists know mathematics typesett experience language learn hour rule fewer exception typical expression size font change position line draw print accord mathematical convention automatical input sum io infinity ipi produce formula syntax language specifi small context free grammar compiler compiler make compiler translate language typesett command output maybe produc phototypesetter terminal forward reverse half line motion system interface direct text formatt program mixture text mathematics handl simply paper typeset author system describ 
.I 2787
matrix reduction efficient method paper describe efficient method reduction binary matrices arise school time table problem development describ john lions generalize adapt fit complete timetable process compact data representate efficient process technique take fuller advantage previous knowledge matrix design structur program readily cod reader high level low level programm language choice practical test method shown good basis realistic timetable algorithm 
.I 2788
find circle array accumulators 
.I 2789
minimal spann tree cluster method algorithm 
.I 2790
elementary circuit graph algorithm 
.I 2791
exact probability contingency table algorithm 
.I 2792
jacobi polynomial algorithm 
.I 2793
chi square quantiles algorithm 
.I 2794
state space problem reduction theorem prove relationship paper suggest bidirection relationship state space problem reduction representation present formal bas multiple input multiple output operators provide basis view type representation manner representate language recognition problem bas cocke pars algorithm illustrate method represent problem order logic inference system employ resolution bas theorem prover determine set clause interpret state spacer mode problem reduction mode present analogous concept problem reduction theorem prove terminology refer relationship problem reduction input resolution linear resolution discuss 
.I 2795
sentence paraphras conceptual base model natural language bas underly language free representate mean describ program bas model able produce sentence paraphrases demonstrate understand respect context generate operate conjunction natural language analyzer combin memory inference model generate sentence mean structure program employ informate retrieval deduction capability memory model model encompass diverse class linguistic knowledge include executable test conceptual property stor discriminate net informate relate conceptual syntactic role stor word sense dictionary surface grammatical knowledge stor formal grammar 
.I 2796
monitor operate system structur concept corrigendum 
.I 2797
order approximate optimal checkpoint interval corrigendum 
.I 2798
analysis interleave memory system blockage buffer model interleave memory system present analysis model monte carlo simulate discuss simulations investigate performance system structure scheme send instruction data request memory system performance measur determin distribution number memory module operate dur memory cycle important observate investigations separate group instruction data request memory substantial increase average number memory module operate dur memory cycle result simulations analytical study display system structure 
.I 2799
stable update mean standard deviate data consider sample mean set data fit data constant function computation method bas matrix formulate transformation sample mean standard deviate update data accumulate procedure numerical stable require storage data method deal weight data data removal present update mean square standard deviate process require square root 
.I 2800
connection accuracy stable property linear multistep formula paper concern stable accuracy family linear step formula depend parameter emphasis numerical solution stiff ordinary differential equations upper bound pk derive order accuracy ainf stable formula criteria stable shown pk arbitrary ainf stable imply condition stable strict stable mean extraneous root ppsi satisfy psi pkand ainf stable constraint imply strict stable parameter class formula pkandor ainf stable imply stable 
.I 2801
storage efficient representate decimal data usual decimal digit represent bit computer actual bcd digit compress optimal reversible bit digit bit simple algorithm bas fix length combinate variable field length encodings half case compress code result convention bcd code simple removal redundant bit long decimal message subdivid digit block separate compress result differ asymptotic minimum length percent hardware requirement small mappings 
.I 2802
math computer programm structur programm prove important methodology systematic program design development structur program identifi compound function expression algebra function algebraic property function expression permit reformulate expansion reduction nest subexpression independent environment model known stepwise program refinement program execution final structur programm characterize term selection solution elementary equations defin algebra function solution general formula involve single parameter display entire freedom create correct structur program 
.I 2803
pseudoinverses conjugate gradient paper devot study connection pseudoinverses matrices conjugate gradient conjugate direction routine 
.I 2804
elementary divisor tensor product elementary divisor tensor product linear transformation known year paper provide short easily accessible proof result point interest combinatorial consequence proof 
.I 2805
perturbations eigenvalue non normal matrices problem consider give bound finite perturbations simple multiple eigenvalue nonnormal matrices bound term eigenvalue departure normal frobenius norm perturbate matrix term eigen system bound derive shown attainable set matrices 
.I 2806
hadamard number matrices discussion function entry square matrix relate hadamard determinant theorem merit alternative norm bound condition number linear system known eigen system 
.I 2807
stable gauss jordan eliminate pivot stable gauss jordan algorithm partial pivot solution general system linear equations commonly regard suspect shown respect suspicions unfound general absolute error solution strict comparable correspond gaussian eliminate partial pivot back substitution ill condition residual correspond gauss jordan solution greater correspond gaussian eliminate solution 
.I 2808
lemniscate constant lemniscate constant inde method actual comput play enormous part development mathematics account method derivations made elementary method material teach purpose relevant interest historical material accelerate method develop purpose evaluate constant problem 
.I 2809
positive norm follow line joint work householder character algebraic method theory norm demonstrate result concern norm archimedian vector lattice necessarily total order generalize order unit norm norm norm applicate operate norm concern contraction property positive operators 
.I 2810
professional comput field term professional mean things people general technical social standard normal associate professional term general appli practitioner researcher broad definition specifi comput practitioner regard professional type institution academic industry government professional society educate employ regulate mold practitioner contribute nonprofessional status comput practitioner role institution examin shortcomings recommend change suggest analysis professional status bestow earn university industry specifical make improvement help comput practitioner achieve professional status 
.I 2811
structural pattern recognition carotid pulse wave general waveform pars system general waveform pars system applicate structural pattern recognition carotid pulse wave describ carotid arterial pulse wave medical importance variate structure induc arterial ag cardiovascular disease syntax driven waveform analysis system appli good result pulse wave detect measure structural variation waveform pars system model compiler compiler system allow user enter applicate specific informate data general applicable waveform 
.I 2812
computer aid analysis design informate system paper describe computer aid analysis design development integrate financial management system navy material command support active nmcsa computer aid analysis consist set procedure computer program specifical design aid process applications software design computer selection performance evaluate major component problem statement language problem statement analyzer generate alternative design performance evaluate statement requirement written ad accurate defin system analyz problem statement analyzer ad ad problem definition supplement addition informate order create complete problem definition analyz problem statement translate form soda system optimize design algorithm program generate alternative specifications program module logical database structure 
.I 2813
computer science engineer research study cosers computer science engineer research study cosers briefly describ motivate organize schedule nsf support study reference subject area panel chairmen member steer committee identifi 
.I 2814
roster programm language 
.I 2815
high level bind low level linkers easy implement scheme describ compiler enforce agreement complex data type separate compil module scheme design work exist link editor link loader matter deficient obscure run time error caus inconsistent usage forestall static error detect link time 
.I 2816
optimal reorganize distribut space disk database organization cost access database increase due structural change caus update insertion reorganize databasethe access cost reduc basic problem establish proper tradeoff performance storage cost reorganize cost paper consider optimum point reorganize database disk organize allow distribut free space describ cost function describ excess cost due physical disorganize defin function minimize obtain optimum reorganize point numerical bas characteristic exist disk storage device 
.I 2817
notion consistency predicate lock database system database system user access shar data assumption data satisfy consistency constraint paper define concept transaction consistency schedule show consistency require transaction request lock releas lock argu transaction need lock logical physical subset database subset specifi predicate implementate predicate lock satisfy consistency condition suggest 
.I 2818
interference multiprocessor computer system interleave memory corrigendum 
.I 2819
experiment text compression system compression data view strings character present method general apply equal english pli digital data system consist encoder analysis program decoder algorithm encod str differ slight earlier proposal analysis program attempt find optimal set code represent substrings algorithm operate describ compar parameter algorithm optimize obtain high degree compression sample text 
.I 2820
design implementate table driven interactive diagnostic programm system caps highly interactive diagnostic compilerinterpreter allow beginn programmer prepare debug execute fairly simple program graphic display terminal complete syntax check semantic analysis perform program enter subsequent edit analysis perform character character remarkable feature caps able automatical diagnose error compile time run time error automatical correct caps interact student help find error component caps table driven reduce space need implementate increase flexible multilingual system student caps learn fortran pli cobolin conjunction computer assist course introductory computer science 
.I 2821
cobol control sample set cobol programm standard offer standard constrain code develop structur form data control structure require syntax exist cobol language fact utilize typical limit subset cobol standard standard prove extreme valuable practice reduc cost time produce maintain large software system deploy live multiple customer environment 
.I 2822
homily humble standard copyright associate comput machinery general permission republish profit part material grant provid acm copyright notice reference made publicate data issue fact reprint privilege grant permission associate comput machinery 
.I 2823
status women minority academic computer science result survey concern women minority student faculty computer science dur year present analysis data effective affirmative action program recruitment graduate degree program need enlarge number women minority qualifi later employment computer science discriminate employment women minority graduate student reveal 
.I 2824
improvement martins algorithm computate linear precedence function 
.I 2825
bmd bmdp series statistical computer program 
.I 2826
interactive skeleton technique enhanc motion dynamic key frame animate significant increase capable controll motion dynamic key frame animate achieve skeleton control technique allow animate develop complex motion sequence animate stick figure representate image control sequence drive image sequence movement simplicity stick figure image encourages high level interaction dur design stage compatible basic key frame animate technique permit skeleton control appli selective component composite image sequence require enhancement 
.I 2827
parametric algorithm draw picture solid object compos quadric surface algorithm draw picture dimensional object surface made patches quadric surface describ emphasis algorithm calculate intersection quadric surface parameterize scheme quadric surface intersection curve qsic represent set coefficient parameter limit parameter represent point easily distinguish scheme find coordinate point quartic fourth order intersection curve equations order method parameterize type osic discuss surface bound hidden surface removal 
.I 2828
hierarchical geometric model visible surface algorithm geometric structure inherent definition shape dimensional object environment define relative motion placement assist solve problem system produc picture computer extension tradition structure informate geometric hierarchy significant improvement technique range complexity environment great increas visible complexity scene fix upper limit meaningful provid vary amount detail present scene clipp fast logarithmic search resolvable part environment field view fourth frame frame coherence clipp define graphical work set fraction total structure present primary store access visible surface algorithm final geometric structure suggest recursive descent visible surface algorithm computate time potential grow linearly visible complexity scene 
.I 2829
texture reflection computer generate image catmull develop algorithm render image bivariate surface patches paper describe extension algorithm area texture simulate light model parameterize patch define coordinate system key mapp pattern surface intensity pattern picture element comput weight average region pattern definition function shape size weight function chosen digital signal process theory patch render algorithm allow accurate computate surface normal patch picture element permitt simulate mirror reflection amount light com direction model similar manner texture mapp add intensity obtain texture mapp image synthesize technique includ 
.I 2830
practitioner guide address algorithm corrigendum 
.I 2831
analysis pff replacement algorithm semi markov model corrigendum 
.I 2832
faster retrieval context tree corrigendum context tree provide convenient stor data view hierarchy context note present algorithm improve previous context tree retrieval algorithm bas observate typical context change infrequent relative retrieval data cach spe retrieval retrieval start position previous retrieval auxiliary structure built make search rapid algorithm addition deletion data garbage collection outlin 
.I 2833
efficient incremental automatic garbage collector paper describe solve storage reclamate problem system lisp allocate storage automatical heap require programmer give item longer accessible reference count scheme reclaim non referential structure linearize compact copy scheme reorganize storage user discretion propos algorithm design work system multiple level storage large virtual address space depend fact cell referenc exact reference count ne accurate storage reclaim transaction store change reference count multiple reference table store count item referenc 
.I 2834
efficient generate binary reflect gray code applications algorithm present generate bit binary reflect gray code codeword fix weight code algorithm efficient time requir generate element constant applications generate combination things time composition integer permutations multiset discuss 
.I 2835
recursion analysis compiler optimize relative simple method detection recursive procedure present compiler optimize implementate considerations discuss modificate algorithm improve optimize analysis determine subset assum variable take relative small discrete set common parameter variable assum label procedure pascals enumerate type 
.I 2836
weight derivate tree node weight derivate tree associate weight function vocabulary context free grammar algorithm present construct optimal derivate tree structure weight derivate tree addition correctness algorithm establish method appli problem involve probabilistic pars combinatorial optimize 
.I 2837
upper bound selection worst case minimum number comparison complexity vin th selection problem consider upper bound vin improve bound standard hadian sobel algorithm generalize kirkpatrick hadian sobel algorithm extend kirkpatrick method wider range applicate generalize compare favorable recent algorithm hyafil 
.I 2838
analysis algorithm real time garbage collection real time garbage collection system avoid suspend operation list processor long time garbage collection normal require perform garbage collection processor parallel list process operation single processor time shar algorithm recover discard list structure manner present analyz determine sufficient condition list processor need wait collector technique shown require process power regular garbage collector efficient average behavior program shown nearly equal worst case performance sufficient condition suitable measur typical behavior algorithm 
.I 2839
insertion technique sid height balanc tree restriction height balanc binary tree present seen restriction reduce extra memory requirement half extra bit node maintain fast search capability cost increas time requirement insert node 
.I 2840
protection operate system model protection mechanism comput system present appropriateness argu safety problem protection system model determine situate subject acquire object restrict case shown problem decidable algorithm determine system configurate safe general surprisingly weak assumption decid situate safe implications fact discuss 
.I 2841
design surface experimental system computer aid design free form surface dimension describ surface represent system parametric basis spline principal feature system surface render isoparametric line drawings head mount display design aid dimensional wand allow movement point controll shape surface interaction surface real time mathematical formulations assume knowledge user system examin feature part practical system design space form 
.I 2842
denotation semantic programm language paper tutorial introduction theory programm language semantic develop scott strachey applicate theory formal language specificate demonstrate applications survey language consider loop elementary definition mere introduce notate methodology approach semantic concept environment store continuations introduc model class programm language feature underly mathematical theory computate due scott motivate outlin final paper present formal definition language gedanken 
.I 2843
tool philosophy software educate paper describe set tool philosophy teach software found course mit past year tool include program simulators grader compiler monitor allow instructor augment basic concept relevant excit economical student project activity 
.I 2844
heap appli event driven mechanism 
.I 2845
buddy system variate disk storage allocate generalize buddy system storage allocate describ set permitt block size sizei satisfy condition sizeisizei sizei ki meaningful integral valu function make force logical storage block coincide physical storage block track cylinder 
.I 2846
compress trie paper present data structure call compress trie trie informate retrieval system underly ary tree structure trie parameter trie field node trie large hold key pointer field trie bit long analysis part paper shown collection key retrieval time measur term bit inspection key order logmn storage requirement order nmlog bit improvement storage requirement retrieval time achieve cost decreas flexible structure update cost increas trie analyz data structure method relative static database discuss 
.I 2847
sampl gamma distribution computer paper describe method generate gamma variate cost wallace recent suggest method large shape parameter cost computate proportion wallace method proportion experimentate robinson lewis small method suggest dominate method recent suggest dieter ahrens albeit method dominate large method suggest rejection technique 
.I 2848
synthesis decision rule decision table effective tool dur interview record logic process automate result interview structure complete decision table set decision rule purpose paper provide procedure synthesize decision rule provide aid develop structure complete decision table 
.I 2849
ethernet distribut packet switch local computer network ethernet branch broadcast communicate system carry digital data packet local distribut comput stations packet transport mechanism provid ethernet build system view local computer network loose coupl multiprocessor ethernet shar communicate facility ether passive broadcast medium central control coordinate access ether packet broadcast distribut contend transmitt stations controll statistical arbitrate switch packet destinations ether distribut receive stations packet address recognition design principle implementate describ bas experience operate ethernet node kilometer coaxial cable model estimate performance heavy load packet protocol error controll communicate includ completeness 
.I 2850
symbolic execution program test paper describe symbolic execution program supply normal input program number supply symbol represent arbitrary execution proceed normal execution symbolic formula input symbol difficult interest issue arise dur symbolic execution condition branch type statement system call effigy provide symbolic execution program test debugg describ interpretive execute program written simple pli style programm language include standard debugg feature able manage prove things symbolic expression simple program test manager program verifier discussion relationship symbolic execution program prove includ 
.I 2851
formal verificate parallel program formal model parallel computate present abstract conceptual model parallel program model model distinguish control data state model include capable representate infinite set control state allow arbitrarily instruction pointer process execut program induction principle present treat control data state set ground place variable observe correctness condition express enumerate set control state present induction principle demonstrate proof mutual exclusion shown assertion orient proof method special case induction principle special case assertion method call parallel place assertion shown incomplete formalize deadlock present concept norm introduc yield extension deadlock problem floyd technique prove terminate discuss extension program model allow process local variable permit shar global variable correctness form implementate discuss appendix includ relate work previous work satisfiable logical formula 
.I 2852
technology computer center management propos course graduate professional program computer science informate system mcfarlan nolan made strong case add course informate system administrate course propos acm curriculum committee computer educate management graduate professional program informate system paper report course entitl technology computer center management offer purdue past year course suitable graduate professional program informate system graduate professional program computer science 
.I 2853
number system permutations combination 
.I 2854
multiprocess compactify garbage collection corrigendum 
.I 2855
efficient list move algorithm constant workspace efficient algorithm present move arbitrary list structure storage program variable requir hold original list copy original list destroy move mark bit pointer copy distinguishable pointer original algorithm superior execution spe previous algorithm problem variation extension algorithm discuss 
.I 2856
synthetic approach decision table conversion previous approaches problem automatical convert decision table computer program bas decomposition stage condition select test smaller problem decision table condition create optimal program respect average execution time storage space locate implicit enumerate decision tree technique branch bound approach describ paper dynamic programm synthesize optimal decision tree program create approach efficiency create optimal program increas substantial permitt generate optimal program decision table ten twelve condition 
.I 2857
referenc list edge edge reference list structure pair pointer adjacent node reference require addition space yield efficient algorithm instance circular link end list redundant list referenc edge list traversal easier link null edge reference allow thread nonrecursive list replace header cell enhance famous exclusive trick double link list 
.I 2858
process determinate address variable length address algorithm present assignment instruction address format follow condition length instruction varies function distance instruction target exist optimal criterion imply preferential choice subject address constraint achieve smallest number long instruction case total code length minimize minimize assign address specifi point program algorithm suitable arbitrary program structure choice optimize criteria 
.I 2859
interference multiprocessor computer system interleave memory paper analyze memory interference caus processor simultaneous memory module exect result comput simple model system limit derive relative degree memory interference system size increase model limit behavior system yield approximate result simple model suggest result valid larger class model includ nearly real system simple model test measurement program behavior simulations system memory reference real program model result provide good performance expect real system type 
.I 2860
practitioner guide address algorithm paper consolidate number popular rule thumb suggest design record address algorithm discuss applicable rule large commercial database guidelines select identifier transformation overflow technique load factor bucket size load order consider attention focus reasonableness common heuristic determin primary secondary bucket size mathematical model explicit consider storage device characteristic timespace cost tradeoff analyze effect design parameter system cost specific design present solve 
.I 2861
production employment phd computer science 
.I 2862
analysis pff replacement algorithm semi markov model analytical model present estimate performance page fault frequency pff replacement algorithm model program behavior represent lru stack distance model pff replacement algorithm represent semi markov model model parameter inter page fault interval distribution probable number distinct page referenc dur inter page fault interval able analytical determin model evaluate parameter permit study performance replacement algorithm simulate page fault event page reference event significant reduce requir computate time estimate performance pff algorithm 
.I 2863
vmin optimal variable space page replacement algorithm criterion compar variable space page replacement algorithm present optimum page replacement algorithm call vmin describ shown optimum respect criterion result simulate vmin dennings work set page partition replacement algorithm virtual memory program present demonstrate improvement known realizable variable space algorithm 
.I 2864
characteristic program locality term local denote subset program segment referenc dur phase execution program behavior characterize term residence locality size lifetime transition locality paper concept local made explicit formal definition constitute phase localize reference behavior correspond mechanism detection locality actual reference strings definition provide existence hierarchy locality time reasonableness definition support actual program empirical data sample production algol program display distribution local size lifetime result discuss term implications model program behavior memory management virtual memory system 
.I 2865
verify property parallel program axiomatic approach axiomatic method prove number property parallel program present hoare set axioms partial correctness strong case paper define powerful deductive system sense complete partial correctness crucial axiom provide auxiliary variable add parallel program aid prove correct informate partial correctness proof prove property mutual exclusion freedom deadlock program terminate technique verify property present illustrate applicate din philosophers problem 
.I 2866
prove monitor interest schedul sequential property monitor prove state variable record monitor history defin extend proof rule wait signal operation technique defin discuss appli prove property freedom indefinite repeate overtak unnecessary wait upper bound queue length historical behavior 
.I 2867
modularize hierarchy family operate system paper describe design philosophy construction family operate system shown concept module level coincide hierarchy function family member share software result implementate run time module lowest system level 
.I 2868
reflection operate system design main feature general purpose multiaccess operate system develop cdc berkeley present good bad point discuss retrospect distinctive feature design capability protection organize system sequence layer build facility provid earlier protect malfunction later problem maintain protection layer level add memory hierarchy problem discuss solution describ 
.I 2869
security kernel validate practice security kernel software hardware mechanism enforce access control computer system correctness security kernel pdp prove paper describe technique carry step proof validate formal specificate program respect axiom secure system 
.I 2870
lattice model secure informate flow paper investigate mechanism guarantee secure informate flow computer system mechanism examin mathematical framework suitable formulate requirement secure informate flow security class central component model lattice structure derive security class justifi semantic informate flow lattice property permit concise formulations security requirement exist system facilitate construction mechanism enforce security model provide unify view system restrict informate flow enable classificate accord security objective suggest approaches lead construction automatic program certificate mechanism verify secure flow informate program 
.I 2871
logical analysis program present system verificate computer program incomplete intermediate inductive assertion provid user terminate proven incorrect program treate unifi solution problem paper suggest conduct logical analysis program invariant express actual occurr program part paper devot technique automatic generate invariant part provide criteria invariant check simultaneous correctness includ terminate incorrectness part examine implications approach automatic diagnosis correction logical error 
.I 2872
counterintuitive computer pag corrigendum 
.I 2873
lg language analytic geometry conversation programm language analytic geometry describ aspect implementate language allow flexible definition geometric object element compute parameter display result provide capable geometric figure collection parameter display loci correspond parameter characteristic consist language design user orient language lg specifical design nonprogrammer easy learn close natural language geometry 
.I 2874
comparative evaluate version basic inception basic language grown term usage scope usage feature article compare ten version basic earlier version propos standard minimal basic comparison arrang feature version computation comparison computate time process cost 
.I 2875
development internation system legal protection computer program 
.I 2876
intention resolution privacy protection database system traditional privacy protection database system understood control informate user database paper concern independent dimension privacy protection control user allow piece informate suppli database able condition supply informate intend call intention resolution privacy protection practical importance intention resolution demonstrate realize discuss shown intention resolution achieve involve radical change tradition approach process user database interaction database impose amount control internal behavior user program interact model user database interaction admit control develop 
.I 2877
program data flow analysis procedure global data relationship program expos codifi static analysis method describ paper procedure determine definition reach node control flow graph program definition live edge graph procedure interval order edge list data structure handle reducible irreducible graph indistinguishable 
.I 2878
join policy multipriority multiclass batch computer system consider multipriority batch computer system user class join toll service wait charge system formulate semi markov decision process aim arrive user minimize expect los optimal join policy arrive user join system queue control limit policy single control number queue user class newly arrive user join queue fill control number correspond queue user class paper control number lower upper bound control number capacity system queue derive 
.I 2879
computer science empirical inquiry symbol search 
.I 2880
fast division technique constant divisor fast algorithm division constant divisor present method prove implement microcode ona binary machine adapt direct hardware mathematical foundations algorithm present performance measure 
.I 2881
counterintuitive computer pag counterexample exhibit natural conjecture concern optimal group record page independent reference model computer pag organize optimal recent miss ratio minimize 
.I 2882
stochastic evaluate model database organize data retrieval system experimental work valuate large scale data retrieval system scarce due difficulty prohibitive cost paper discuss simulate model data retrieval system effect significant reduc cost experimentate enable research attempt model design estimate retrieval workload alternative data retrieval system data retrieval system organize database organization includ invert list thread list cellular list organization hybrid combination system effectiveness methodology demonstrate model study effect database organization data retrieval system impact query complexity analyz 
.I 2883
applicate heuristic search method edge contour detection paper present method detect edge contour noisy picture property edge embedd figure merit edge detection problem problem minimize figure merit problem represent shortest path problem graph solve known graph search algorithm relation representate minimize problem dynamic programm approach discuss show graph search method lead substantial improvement comput time heuristic search method comput time depend amount noise picture experimental result show informate shape contour object embedd figure merit allow extraction contour noisy picture separate touch object 
.I 2884
permutate enumerate permutate algorithm classical permutate enumerate algorithm encounter special case requir addition computate nth permutate generate permutations mark algorithm attribute special case occur nn permutations algorithm produce permutate single exchange mark algorithm infrequent exchange mark rule generate permutate simple performance test count execution assignment statement comparison arithmetic operation subscript array reference shown superiority algorithm compar boothroyds implementate algorithm ehrlichs implementate johnson trotter algorithm 
.I 2885
organize sequential search heuristic paper examine class heuristic maintain sequential list approximate optimal order respect average time requir search specifi element assum element search fix probable independent previous searches perform move front transposition heuristic shown optimal constant factor transposition rule shown efficient empirical evidence suggest transposition fact optimal distribution search probability 
.I 2886
semantic evaluate left paper describe attribute grammar definition programm language compiler formal definition attribute grammar discussion important aspect includ paper concentrate evaluate semantic attribute pass left derivate tree program condition attribute grammar assure semantic program evaluate single pass derivate tree algorithm discuss decide pass left general attribute grammar notion explain term grammar describe scope rule algol practical question relative efficiency evaluate scheme ease adapt attribute grammar programm language left evaluate scheme discuss 
.I 2887
study error error proneness error diagnosis cobol paper provide data cobol error frequency correction error student orient compiler improvement teach change programm language cobol studi economic importance widespread usage error includ design lack research type error identifi pilot study error type found error classifi run cobol student error density high percent type percent total frequency imply high potential effectiveness software bas correction cobol surprisingly high frequency error error prone imply minimal error induc design percent cobol misspellings classifiable error category previous researcher imply cobol misspellings correctable existent algorithm reserve word usage error prone imply minimal interference usage reserve word percent error diagnosis found inaccurate feedback optimal user learn user cobol 
.I 2888
informate reference cod item business system identifi reference code later data code key associate data process system business system associate large collection integrate database vital assign code methodical control future extension change maintain correct program action principle methodical cod discuss logical connection data item reflect reference code framework shown set theoretic informate model 
.I 2889
performance height balanc tree paper present result simulations investigate performance height balanc hbk tree shown statistic hb tree avl tree function size tree time search item tree sufficient large tree execution time procedure maintain hb tree independent size tree average restructure requir insertion average node revisit restore hb property average restructure requir deletion average node revisit restore hb property moreoverthe execution time procedure maintain hbk tree independent size tree average number node revisit delete operate order restore hbk property trace back cost maintain hbk tree drops sharply allowable imbalance increase analytical experimental result show cost maintain hbk tree function discuss 
.I 2890
quadratic adaptive rout algorithm analytic model store forward communications network construct find optimal message rout illustrate equilibrium stationary state maintain adaptive rout algorithm model show adaptive rout satisfy condition optimal rout adaptive rout tend overuse direct path underuse alternate routes consider impact rout decision future state network form optimal condition suggest modificate adaptive algorithm result optimal modificate require substitution quadratic bias term linear rout table maintain network node simulate result present confirm theoretical analysis simple network 
.I 2891
anomaly disk schedul comparison fcfs sstf seek schedul empirical model disk access model disk access bas publish measurement develop model show highly probable condition fcfs seek schedul superior sstf schedul sense lower mean queue length simple arrival sequence illustrate anomaly present 
.I 2892
study line overhead arpanet form extent effect communicate line overhead arpanet consider source head separate level protocol hierarchy characteristic level summarize line efficiency model system studi measurement line efficiency arpanet present extrapolate measurement anticipate overhead heavily load network similar result derive recent propos network protocol compar system 
.I 2893
computer innovate american local government computer electronic data process major technological innovate operation american local government paper establishes substantial variate larger local government rate adopt computer technology level financial support provide edp extensiveness sophisticate automate applications central question address explain difference government extent adopt computer hypotheses test stream explanatory factor data city county government findings identify local government milieus conducive higher level computer innovate unexpect findings reveal significant impact distribution control edp decision dominant political government important factor include measur ne computer applications presence external fund support comput final paper suggest framework identify key determinant technological innovations 
.I 2894
methodology interactive computer service measurement measurement methodology applicable teractive computer service describ primary purpose enable external user orient assessment computer performance frequent ternal system measurement technique nbs network measurement system employ external measurement tool data collect analyz demonstrate methodology lead pragmatic figure merit evaluate result includ 
.I 2895
language formal problem specificate language tend behavior communicate parallel process describ specifications constrain order event computate occur language write specifications readerswriters problem writer priority readerswriters problem 
.I 2896
exercise prove parallel program correct parallel program dijkstra fly garbage collector prove correct proof method develop owicki fine degree terleave program make especial difficult understand complicate proof great difficulty prove parallel program correct discuss 
.I 2897
case study code generate technique compiler recent development optimize technique allow design compiler emerge compiler translate pars source code lower level code sequence step step expand higher level statement block lower level code perform optimizations result statement expansion task tailor code take advantage special case optimizations paper provide evidence strategy inde result good object code traditional difficult pli concatenate statement investigate detail set fairly simple optimizations identifi allow compiler produce good code elaborate optimizations improve object code context concatenate statement code produc compiler expansion optimize strategy describ compare favorable code produc convention pli optimize compiler 
.I 2898
conceptual framework nonprocedural programm language sequential programm language force programmer prescribe explicit order operation program execut order relevant solution problem requirement irrelevant sequenc remove language provide facility task nonprocedural manner general program specifi allow concurrent evaluate paper describe conceptual framework high level programm language provid nonprocedural sequential facility program nonprocedural sequential program module nest free 
.I 2899
survey computer science offerings small liberal art college recent curricular development computer science student terest pursu topic computer science usual programm course encourag small liberal art college expand offerings paper summarize result survey determine type computer science program offer college result half college computer science program offer programm course 
.I 2900
theorem aid solve allocate problem allocate problem problem find optimal set network site locate copies known general polynomial complete heuristic aid find optimal optimal solution need paper present theorem appli priori site includ optimal allocate 
.I 2901
encod method multifield sort index sequence character strings order relate impos sequence consider encod scheme describ produce single order preserve str sequence strings original sequence recover encod str sequence strings precede encod precede encod strings variable length maximum length restriction symbol ne reserve control purpose symbol occur str scheme multifield sort multifield index applications order field important 
.I 2902
dynamic memory allocate computer simulate paper investigate performance dynamic memory allocate algorithm service simulate program represent test case algorithm performance measur term process time memory usage external memory fragmentate algorithm main tain separate free space list size memory block tend perform compar algorithm simple algorithm operate memory order list free list perform surprisingly algorithm employ power block size favorable process requirement general unfavorable memory usage algorithm employ lifo fifo memory order free list general perform poorly compar 
.I 2903
improve program introduction recursion technique program transformate call recursion troduction describ appli algorithm solve pattern match problem recursion troduction algorithm manipulate stack translate recursive algorithm stack operation occur algorithm subject transformate method recursion eliminate call tabulate produce program efficient runn time shown fast linear pattern match algorithm knuth morris pratt derive step simple nonlinear stack algorithm 
.I 2904
algorithm reduction operate strength simple algorithm index temporary table perform reduction operate strength strongly connect region present extension includ linear function test replacement discuss algorithm fit integrate package local optimize algorithm 
.I 2905
perfect hash function single probe retrieve method static set refinement hash allow retrieval item static table single probe consider set identifier method present build mechanical perfect hash function function transform element unique address method quotient reduction method shown complete sense set smallest table element stor retrieve perfect hash function construct method found nonuniformly distribut set method give sparse table method remainder reduction method complete sense give minimal minimal table kind set technique applicable direct small set method extend result larger set present rough comparison ordinary hash show method convenient practical applications 
.I 2906
high level programm language data process applications applicate development today labor tensive recent year high level language increasingly explor solution problem business definition language bdl language aim business data process problem concept bdl mimic evolve year business method result sublanguage component defin business form describ business organize writ calculation 
.I 2907
optimal approach recursive program classical fix poin approach recursive program suggest choos defin fix poin solution recursive program approach describ troduction optimal fix point contrast defin fix poin embody maximal amount valuable informate embedd program practical implications approach discuss technique prove property optimal fix poin presentate informal emphasis 
.I 2908
note reflection free permutate enumerate 
.I 2909
unnecessary diversity notate syntactic definition 
.I 2910
equivalence hough curve detection template match 
.I 2911
anomalous behavior fifty percent rule dynamic memory allocate paper report simulate data show dynamic memory allocate average free allocate block ratio differ considerable direction prediction percent rule derivate shown previous derivations make assumption violate frequent basis simulate data derivate hypothesize anomalous behavior result combin effect systematic placement statistic release process addition simulations support hypothesis systematic placement refer natural convention allocate storage request end free block select allocate strategy tend order block contiguous group accord allocate time degree anomalous behavior depend extent allocate block releas order allocate non markovian release process extent correlate allocate order release order varies approximate inverse coefficient variate memory residence time distribution simulations show allocate efficiency depend strongly residence time distribution efficiency decrease distribution coefficient variate increase practical implications briefly discuss 
.I 2912
concurrent read writ problem shar data asynchronous process consider assum process time modify data concurrent read writ permitt general theorem prove algorithm present illustrate include solution general problem read repeate obtain incorrect result technique transmitt message process solution assume synchronize mechanism data written process read process 
.I 2913
alias problem computer generate shad image defect jagg edge disappear detail long annoyance digital generate shad image increas resolution defocus display attenuate understand defect lead effective method paper explain observe defect term alias phenomenon inherent sampl signal discuss prefilter recognize cure method evaluate filter present applicate prefilter hidden surface algorithm discuss implementate filter tiler shown accompani effectiveness 
.I 2914
lru stack depth distribution simulate pag behavior family probable distribution need virtual memory simulate model headway page fault distribution work set size distribution member family derive lru stack depth distribution simple expression computate kind distribution final family distribution comput publish stack depth distribution 
.I 2915
considerations future programm language standard activity paper review state programm language standard activity respect anomaly exist publish propos standard fortran cobol pli basic proposal made inclusion formalisms future standard extension standard include addition item error condition documentate 
.I 2916
fast str search algorithm algorithm present searches locate occurrence character str pat str str dur search operate character pat match start character pat informate gain start match end pattern allow algorithm proce large jump text search algorithm unusual property case character str inspect number character actual inspect average decrease function length pat random english pattern length algorithm typical inspect character str find match algorithm implement average fewer ipatlen machine instruction execut conclusion support empirical evidence theoretical analysis average behavior algorithm worst case behavior algorithm linear ipatlen assum array space table linear patlen size alphabet 
.I 2917
sitar interactive text process system small computer corrigendum 
.I 2918
multiprocessor memory organize memory interference structure shar memory multiprocessor computer system examin attention nonin terleave memory alternative memory organization compar shown home memory organize processor associate memory address space concentrate effective reduc memory terference home memory organize shown suit specialize computate problem possess advantage term terference reliable general purpose computate result terleave memory drawn previous work comparison trace driven simulations verify conclusion analysis 
.I 2919
programmer workbench machine software development software development project assumption made program development function machine eventual system run production machine unavailable programm environment total inadequate alternative consider paper suggest situations advantageous separate program development main tenance function specialize computer dedicate purpose computer call programmer workbench basic section paper troduce subjectoutline general concept discuss area approach prove beneficial describe operation system utilize concept 
.I 2920
game interpretate deadlock avoidance problem deadlock avoidance problem defin informal determinate priori informate process resource operate system safe situations realize endanger smooth runn system process future need flowchart ne defin step global approach phenomenon terpretate game operate system process allow formalize risk safety concept bipartite graph representate game construct explicit set safe state study property 
.I 2921
regular part grammar parser paper troduce alternative context free grammar call regular part rrp grammar resemble pascal syntax diagram formal rrp grammar production part nondeterministic finite state machine fsms special case regular expression convert fsms rrp grammar describe syntax programm language concise understandable cf grammar troduc class parser rrp lrm parser include cf lrk parser provide advantage informal rrp lrm parser determine end handle consider symbol handle left end end found consider symbol left handle mechanism determin left end requir bound length handle 
.I 2922
level control structure nondeterministic programm basic idea nondeterministic programm critical reconsider single proper attitude programm style language allow direct control nondeterministic feature propos attitude aim retain purity nondeterministic formulate search process level attempt level deferr coordinate problem solve effort choice level feasible recognize level discuss stress structure manag choice level free context leave computation environment hold alternative inspection node associate choice poin accord propos programm style generative function associate choice poin express desir choice strategy main advantage approach localize search strategy nonterminal node tree track state computate choice poin interrogate hold time strategy coordinate alternative term nd lisp extension lisp design implement accord guidelines 
.I 2923
high level data flow analysis contrast predominant low level termediate text high level data flow analysis deal program essential source level exploit control flow informate implicit parse tree ne high level flow analysis arise aspect recent work advanc method program certificate optimize paper propose simple general method high level data flow analysis allow free escape jump statement avoid large graph compil large program facilitate update data flow informate reflect program change derive global informate helpful solve familiar global flow analysis problem illustrative applicate live variable analysis present graph involve construct analyz program compil avoid cost low level method incur repeatedly compile time 
.I 2924
interactive computer graphic approach surface representate teractive computer graphic method develop rapid generate arbitrary shap dimensional surface method synthesis spline theory algorithm teractive mean man machine communicate software static dynamic graphic display basic technique employ modifi loft method section curve represent uniform spline surface terpolate section cardinal spline feature method algorithm enable teractive modificate spline representate section curve stage process spatial informate graphical display user complex surface create combinate number shape separate generate automatical join system successfully terfac variety analytical routine structural medical graphical applications 
.I 2925
optimal surface reconstruction planar contour scientific technical endeavor dimensional solid reconstruct serial section aid comprehension object structure facilitate automatic manipulate analysis paper present general solution problem construct surface set cross section contour surface compos triangular tiles construct separate determin optimal surface pair consecutive contour determin surface reduc problem find minimum cost cycle direct toroidal graph fast algorithm find cycle utilize develop clos form expression term number contour poin upper bound number operation requir execute algorithm illustrate involve construction minimum area surface describ human head includ 
.I 2926
paginate tree variable length record strategy present paginate tree variable length record record length uniformly distribut wide distribution record length exist strategy result shallow tree fast access time performance strategy applicate present compar strategy analyz 
.I 2927
upper bound generate prime number integer computation complexity find prime modifi sieve eratosthenes double link list yield algorithm arithmetic complexity upper bound shown equivalent theoretical lower bound sieve method preprocess preprocess technique involve space time additive multiplicative tradeoff reduce upper bound onlog logn bit complexity logn log log logn storage requirement describ lognlog logn bit 
.I 2928
hardware estimate process primary memory requirement minor hardware extension honeywell processor demonstrate allow primary memory requirement process multics approximate addition hardware requir estimate comput consist program accessible register miss rate associative memory page table word primary memory requirement estimate employ experimental version multics control level multiprogramm system bill memory usage result system tun parameter display configurate insensitive conjectur system track shift referenc characteristic workload system tune 
.I 2929
analysis inline substitution structur programm language optimize technique known inline substitution analyz optimize consist replac procedure invocate modifi copy procedure body general problem inline substitution minimize execution time subject size constrain formulate approximate algorithmic solution propos algorithm depend run time statistic program optimize preliminary result clu structur programm language program low degree recursion percent procedure call eliminate increase size compil code small savings execution time conclusion bas result present 
.I 2930
gre advanc test computer science report describe advanc test computer science recent troduc graduate record examinate program gre program describ general event lead establishment advanc computer science test discuss content specifications rationale set sample question includ 
.I 2931
logic programm language logic long terest answer question computable principle outcome put bound possibility formalize recent precise comparison efficiency decision method development complexity theory applications logic big question method logic significance direction appli part computable theory programm language offer obvious opportunity syntactic formalize advanc semantical theory complete give wide rang mathematical answer query machine computable process machine simulate process program natural enter give description process definition precise mean program require explain object computate static problem transform dynamic theory automata net terest dynamic formalize portion field concentrate finite state algebraic aspect understand higher level program feature involve infinite object force pass level explanate conceptual idea final simulate real machine level made mathematical exact find abstraction represent structure experience independent worker method data type lattice partial orderings informate content order continuous mappings demonstrate flexible approach provid definition proof clean undue dependence implementations remain show abstract conceptualizations actualize say unifi theory 
.I 2932
complexity computation framework research theory complexity computation describ emphasize terrelate seemingly diverse problem method illustrative practical theoretical significance direction research discuss 
.I 2933
advantage keyword notate parameter communicate subprogram 
.I 2934
comment comput shortest path graph 
.I 2935
production employment phd computer science corrigendum 
.I 2936
efficient data structure simulate event set recent algorithm present realize event schedul routine suitable general purpose discrete event simulate system exhibit performance superior commonly simple link list algorithm paper event schedul algorithm present improve aspect previous publish algorithm algorithm performance insensitive skew distribution worst case complexity number event set test conduct estimate average complexity show nearly independent 
.I 2937
experimental evaluate data type convention language program written substantial effect reliable result program paper discuss experiment compare programm reliable subject statical typ language typeless language analysis number error number run error show environment statical typ language increase programm reliable detail analysis error made subject programm solution reasonable small problem show subject difficulty manipulate representate data 
.I 2938
discipline real time programm programm divid major category increas complexity reason program validate sequential programm multiprogramm real time programm adher strict programm discipline suitable high level language mold discipline complexity reason concurrency execution time constrain drastical reduc practical make real time system analytical verifiable ultimate reliable discipline outlin express term language modula 
.I 2939
abstraction mechanism clu clu programm language design support abstraction program construction work programm methodology realize kind abstraction procedural control especial data abstraction programm process procedural abstraction support convention language procedure subroutine clu provide addition procedure linguistic mechanism support data control abstraction paper provide troduction abstraction mechanism clu mean programm utility kind abstraction program construction illustrate shown clu program written implement abstraction clu library permit incremental program development complete type check perform compile time discuss 
.I 2940
abstraction verificate alphard defin iterate generators alphard form provide programmer great deal control implementate abstract data type paper abstraction technique extend simple data representate function definition iterate statement important poin interaction data control structure language mean specialize alphard loop operate abstract entity explicit dependence representate entity troduc specificate verificate technique allow property generators iterations express form proof rule develop result obtain common special case loop essential identical correspond construct language mean show generate terminate provid 
.I 2941
early experience mesa experience mesa user primarily implementers discuss implications mesa similar programm language suggest specific topic address module structure defin abstraction data structur facility mesa equivalence algorithm type type coercions benefit type system breach occasional difficulty mak treatment variant record safe 
.I 2942
algol bas implementate snobol pattern 
.I 2943
lucid nonprocedural language iterate lucid formal system program written proof program carri proof easy follow straightforward produce statement lucid program simply axiom proof proceed convention logical reason help axiom rule inference special lucid function programm language lucid unconvention things order statement irrelevant assignment statement equations lucid program ne look iterative program convention structur programm language assignment condition statement loop 
.I 2944
shift garbage collection overhead compile time paper discuss technique enable automatic storage reclamate overhead partial shift compile time paper assume transaction orient collection scheme propos deutsch bobrow feature summarize implement describ optimizations require global flow analysis perform source program shown compile time program action affect reference count cell deduc informate find action cancel code execut group achieve improve efficiency 
.I 2945
certificate program secure informate flow paper present certificate mechanism verify secure flow informate program exploit property lattice structure security class procedure sufficient simple easily includ analysis phase exist compiler semantic present prove correct important applicate confinement problem mechanism prove program supposedly nonconfidential result depend confidential input data 
.I 2946
alternative event queue synchronize monitor monitor concept propos brinch hansen hoare event synchronize paper describe synchronize primitive nearly expressive condition wait implement efficient implementate primitive term operation correctness proof present reader writer problem problem informate stream shar finite buffer pool 
.I 2947
sitar interactive text process system small computer sitar low cost teractive text handl text analysis system nontechnical user comparable teractive bibliographical search retrieval system addition feature implement pdp time shar computer invok crt microprogramm edit function simple command language designate function search template consist textual str desir strings delimit context hit deliver extensive experience sitar show combin power simple command str orientate circular structure crt local memory conversation comput produce system powerful sum part 
.I 2948
terminal orient communicate system paper describe system full duplex communicate time shar computer terminal system consist communications computer direct connect time shar system number small remote computer terminal attach connect medium spe telephone line service large number terminal type system design present algorithm solve specific problem local echo error detection correction telephone line multiplex character output 
.I 2949
correctness proof topology informate main tenance protocol distribut computer network order node distribut computer network communicate node informate network topology node link crash scheme need update informate major constrain topology informate scheme involve central controller topology informate protocol implement merit computer network present explain protocol general implement computer network bas barans hot potato heuristic rout doctrine correctness proof topology informate protocol present 
.I 2950
unify approach schedul paper present scheme classify schedul algorithm bas abstract model schedul system formalize notion priority class schedul algorithm defin relate exist algorithm criterion implementate efficiency algorithm develop result definition time invariant algorithm include commonly implement time invariant algorithm dependence process rate priority derive abstract model provide framework implement flexible scheduler real operate system policy driven scheduler bernstein sharp discuss implementate 
.I 2951
dynamic response time prediction computer network ultimate aim comput network resource shar human component technical component network fully investigate achieve goal research step assist user participate vast store resource network analytical simulate statistical performance evaluate tool employ investigate feasible dynamic response time monitor capable provid comparative response time informate user wish process comput applications network comput node research clearly reveal sufficient system data obtainable diverse arpa network system studi detail describe predict response time network time shar system depend measure system active load level 
.I 2952
function realizable word parallel logical complement addition instruction 
.I 2953
note recursion eliminate method recursion eliminate appli schematic recursive procedure proc sx px nx sfx sgx mx fi procedure general form arise connection tree traversal sort algorithm method recursion removal involve stack solution compar basis runn time 
.I 2954
bound storage algorithm copy cyclic structure algorithm present copies cyclic list structure bound workspace linear time unlike previous similar algorithm make assumption storage allocate system operation high level language distinctive feature algorithm technique travers structure spann tree case left left 
.I 2955
buddy system algorithm present implement class buddy system dynamic storage allocate buddy system correspond set recurrence relation relate block size provid analyses ternal fragmentate binary buddy system fibonacci buddy system weight buddy system comparative simulate result present ternal external total fragmentate 
.I 2956
idea data type high level language number issue explor concern notion data type set set primitive operation ne notate iterate element finite set narrow notate domain array data type ne simple notate allow type parameter parameter restrictive fashion result problem conversion type 
.I 2957
database abstraction aggregate aggregate troduc abstraction important conceptualize real world aggregate transform relationship object higher level object data type call aggregate develop criteria definedness aggregate abstraction relation database defin collection aggregate structur hierarchy ary relation main tain definedness update operation database preserve invariant defin relation distinct relation normal form shown notion complementary important database design top methodology database design describ separate decision concern aggregate structure decision concern key identificate suggest aggregate type type support real world abstraction troduc implementate detail incorporate programm language 
.I 2958
abstract data type development data structure abstract data type play significant role development software reliable efficient flexible paper present discuss applicate algebraic technique specificate abstract data type present top development symbol table block structur language discussion proof correctness paper discussion problem involve construct algebraic specifications consistent complete 
.I 2959
system business automate sba programm language system business automate sba system applicate experts nonprogrammer describe execute applications computer user sba view applicate manipulate informate dimensional picture table business form report display terminal gradual automate applicate give system manipulate informate query database language subset sba programm language 
.I 2960
view data abstraction 
.I 2961
experimental investigations utility detail flowchart programm paper describe previous research flowchart series controll experiment test utility detail flowchart aid program composition comprehension debugg modificate statistical significant difference flowchart nonflowchart group shown call question utility detail flowchart program research suggest 
.I 2962
production employment phd computer science statistic present production employment phd computer science calendar year data include profile graduate student faculty phd produc department breakdown degree grant specialty area significant trend comparison comparable data gather calendar year made 
.I 2963
fast algorithm comput longest common subsequence previous publish algorithm find longest common subsequence sequence length case runn time algorithm problem present runn time nlog total number order pair position sequence match worst case algorithm runn time log applications position sequence match relative position sequence runn time log expect 
.I 2964
approach optimal design storage parameter database 
.I 2965
optimal evaluate boolean expression online query system 
.I 2966
choice reference poin match search improvement exhaustive search method match search previous achieve preprocess step involve calculate distance reference poin paper discuss proper choice reference poin extend previous algorithm reference poin shown reference poin locate data cluster result computer simulations present show large improvement achieve proper choice locate multiple reference poin 
.I 2967
comparison hardware software associative memory context computer graphic associative process line drawings apld system utilize hardware associative memory create modify delete store retrieve dimensional line drawings consist poin line rectangle triangle apld function duplicate tx computer mit lincoln laboratory leap language data structure comparison hardware approach software simulate illustrate advantage hardware associative memory area process spe storage requirement flexible major problem area hardware associative memory technology inputoutput cost effectiveness address 
.I 2968
comparison tree balanc algorithm algorithm height balance avl extension weight balance bb wb total restructur build balanc binary search tree compar criteria comparison encompass theoretical aspect path length implementate independent machinealgorithm dependent measure run time detail analysis code present level believe language compiler independent qual result tree overhead spent build analyz guidelines efficient method insertion subsequent query operation terest pure avl tree present quality 
.I 2969
optimal program data locations computer network optimize procedure allocate program data computer network present algorithm take account dependency program occur real heterogeneous computer network insight convert program computer gain model search procedure locate problem describ applicate model 
.I 2970
achieve specific accuracy simulate output analysis paper extend regenerative property queue system analysis simulate output describe sequential estimate method regenerative property allow result obtain specifi statistical accuracy method include test check normal assumption sequential procedure relies paper illustrate method empty idle state regenerative state describe frequent enter state regenerative state reduce chance mak cost error preliminary simulate run paper describ variance reduction method due page obtain specifi accuracy considerable fewer job completion requir variance reduction technique appli 
.I 2971
spk system teach computer programm spk compatible subset pli language design teach programm feature spk language chosen encourage structur problem solve computer make language easy learn eliminate confus redundant construct make language easy compile result language suitable troduc programm concept applications includ business data process scientific calculation non numeric computate spk actual sequence language subset call sp spsp subset troduce programm language construct retain construct preced subset subset precise defin learn implement follow subset 
.I 2972
proof technique hierarchical structur program method describ structur program simplify proof correctness present method formal represent program term level abstraction level describ nonprocedural specificate proof program structur level proof describ paper method applicable semi automatic automatic proof preliminary result encourag method appli large program operate system 
.I 2973
sort mesh connect parallel computer algorithm present sort element mesh connect processor array require rout comparison step previous algorithm take time log algorithm paper shown optimal time small constant factor extension higher dimensional array 
.I 2974
comment weight increment linear search scatter table 
.I 2975
remark uniform insertion structur data structure 
.I 2976
approximate block access database organization 
.I 2977
stage hypothesis curve contradictory evidence paper present result study test shap budget curve nolan stage model computer development organize research data process budget california county fail support shap curve budget basis stage model result invalidate concept stage model analysis suggest alternative model budget growth separate model budget growth growth stage development computer resource 
.I 2978
analysis design alternative virtual memory indexes class index structure virtual memory environment describ design alternative class index structure analyz alternative include choice search strategy page index structur key compress average cost retrieve entry indexes express wieght sum cost basic key comparison cost cross page boundary index structure formula retrieval cost combination design alternative numerical case study compare retrieval cost alternative qualitative comparison main tenance cost insertion deletion reorganize design alternative includ 
.I 2979
study machine cognition game poker progress report present research effort concern human decision mak uncertainly risk human problem solve learn process hand machine learn large scale programm system programm technique terest human make deductive inductive inference form optimize heuristic rule machine reach similar result vehicle investigations game poker conceptual framework provid fairly wide range applicable model human judgment choice decision mak incorporate large scale complex program represent descriptive normative theory behavior teractive game environment recent establish usefulness experiment game play enable human construct machine strategy line question answer advice tak mode 
.I 2980
edit picture segmentations local analysis graph major problem picture process eliminate large number spurious region result initial segmentate region grow technique region eliminate basis semantic informate basis size contrast scheme present perform eliminations basis local property region adjacency graph scheme bas definition graph property satisfi spurious region present edit equivalent fast graph operation number shown 
.I 2981
subgoal induction proof method subgoal induction present alternative supplement commonly inductive assertion method major virtue prove loop correctness direct input output specificate invariant relate subgoal induction commonly induction rule explor shown subgoal induction view specialize form computate induction set sufficient condition present guarantee input output specificate strong induction step proof subgoal induction valid 
.I 2982
storage requirement precedence pars 
.I 2983
comparison fit fit fit 
.I 2984
costutilize measure system performance method present evaluate computer system performance term costutilize factor measure imbalance coefficient extent total system cost effective utilize method include technique visual representate system performance 
.I 2985
effect chargeout usermanager attitude relationship ternal pric system computer service chargeout system user management attitude computer bas informate system investigate evidence provid relationship conform general pattern expect hypothesis stage edp growth result chargeout system characteristic advanc edp stage environment associate relative high level positive user attitude mark increase edp train user factor important usermanager involvement effective control computer bas system development main tenance computer bas system assert category organization change felt ne change part usermanager prerequisite change tak place research method behavioral science appli investigate usermanager environment effect chargeout 
.I 2986
operation sparse relation computation relation boolean matrices direct graph computate precedence relation context free grammar practical algorithm asymptotical faster common compute operate precedence wirth weber precedence relation step shown compute linear precedence function step shown compute linear precedence function step size grammer heart algorithm general theorem give sufficient condition expression operands sparse relation operators composition transitive closure union inverse comput efficient 
.I 2987
representate sid polygon polygonal line rapid process representate polygon polygonal line describ allow set consecutive side collective examin set side arrang binary tree hierarchy inclusion fast algorithm test inclusion poin sid polygon spe algorithm discuss ideal practical shown poin intersection polygonal line locate essential binary tree search algorithm practical discuss representate overcome disadvantage associate fix grid method represent curve region 
.I 2988
memory management response time paper present computational tractable methodology includ accurate effect finite memory size workload memory requirement queue network model computer system empirical analyses analytic study bas apply methodology actual multiaccess teractive system report relation workload variable memory requirement distribution job swap time performance measure response time memory utilize graphical display multiphase analytical soluble model propos broadly applicable analysis teractive computer system nonpag memory 
.I 2989
empirical evaluate feature instruction set processor architecture paper present method empirical evaluate feature instruction set processor isps isp feature evaluate term time save feature method bas analysis trace program execution concept register life troduc answer question register simultaneous sufficient time time overhead number register reduc register dur live paper discuss problem detect desirable non exist instruction problem briefly discuss experimental result present obtain analyz program runn dec system isp 
.I 2990
effective informate retrieval term accuracy performance informate retrieval system evaluate number publish evaluate work bas measur retrieval performance average user query unfortunate formal proof difficult construct average case present study retrieval evaluate bas optimize performance specific user query concept query term accuracy troduc probable occurrence query term document relevant query relate term accuracy frequency occurrence term document collection give formal proof effectiveness respect user query number automatic index system successfully experimental situations inverse document frequency weight thesaurus construction phrase generate 
.I 2991
improve access time random access cluster key set decreas smooth key address transformate add shadow bucket open chain key pre hash address division remove effect sequential property key set shadow bucket key search sequence reduce effect nonuniformity load decrease number maximum probe need locate record combin effect technique lead improve performance secondary storage device shown empirical study 
.I 2992
number system binary tree 
.I 2993
occurrence cycl phenomena aris class linear programm model investigate average queue size class queue result formulate linear programm problem ill condition case attempt solve linear programm model ibm mp package instance cycl encounter small perturbations input data result problem cycle fact observe phenomena suggest primary reason cycl known occur frequent round error computation perturb problem sufficient prevent cycl prevent indefinite cycl case maximize minimize objective function subject constrain set attempt mp solve give infeasible 
.I 2994
linear algorithm incremental digital display circular arcs circular arcs drawn incremental display device cathode ray tube digital plotter matrix prin ter sign test elementary addition subtraction paper describe methodology produc dot step pattern closet true circle 
.I 2995
decomposable instability saturate multiprogramm system corrigendum 
.I 2996
transient free work set statistic transient free average work set size transient free miss page rate finite sample reference str defin statistic content work set start record str unknown stationarity condition hold statistic provide unbias estimate expect work set size miss page probability terreference distance probability pair estimators shown bias expression transient free statistic obtain term terval statistic method computate discuss usefulness depend length sample number distinct reference amount main storage computer perform calculation method describ handl long strings distinct page 
.I 2997
convex hull finite set poin dimension convex hull set poin dimension determin log operation present algorithm divide conquer technique recursive apply merge procedure nonin tersect convex hull convex hull algorithm require log operation time complexity propos algorithm optimal multiplicative constant 
.I 2998
empirical study list structure lisp static measurement list structure large lisp program report analyz paper measurement reveal substantial regularity predictable poin ter atoms especial poin ter list pointer atoms found obey roughly zipfs law govern word frequency natural language poin ter list usual poin locate physical nearby memory regularity space efficient representate list structure discuss linearize list successive cdrs cars plac consecutive memory locations great strengthen observe regularity list structure shown reasonable assumption entropy informate content car cdr pair program measur bit linearize bit 
.I 2999
approach multidimensional data array process computer recent work development general purpose computer bas statistical data process capability handl multidimensional array data present attention general problem multidimensional table array process follow summary recent development array process capability world bank system identifi wrapsworld bank retrieval array process system 
.I 3000
segment size lifetime algol program characteristic virtual memory requirement sample algol program measur distribution present thesize memory request hold time lifetime result present term johnstons contour model simple abstract machine provide empirical evidence aspect construction behavior real program implications design virtual memory system present discuss 
.I 3001
detection combin occurrence paper suppos variable xxn finite range variable xi tak pi variable chang time suppos desir detect occurrence subset variable achieve final suppos problem involve detection large number combin occurrence large number change variable efficient solution problem describ method unusual property faster system sum pn larger solution error free suitable case solution slight elegant allow negate conjunction subject error error analysis method empirical study report 
.I 3002
record partition model main objective design system reduction storage data transfer cost paper present model request access system request require informate variable length data item probability access distribution data item length assum known mutual independent system storage device record partition subrecords stor device subrecords designate primary record request record made primary record access subrecords access pertinent informate stor primary record model present paper nonlinear programm model mix integer programm model general type system derive selection parameter model optimize library routine storage large scale operate system 
.I 3003
survey literature computer science educate curriculum bibliography approximate hundr reference computer science educate literature publicate curriculum present bibliography preced descriptive material organize reference category survey report activity professional organization philosophy program description program description course material 
.I 3004
structur programm cobol approach applicate programmer technique design writ cobol program present previous work structur programm drawn adapt presentate informal terminology nonmathematical theorem prove frequent top program design implement structur flowchart disciplin specifications step step verificate form cobol program defin proper cobol cod practice discuss 
.I 3005
implications structur programm machine architecture bas empirical study line program text written goto language machine architecture specifical design structur program propos assignment call statement account percent executable statement special care ensure statement implement efficient highly compact instruction encod scheme present reduce program size factor unlike huffman code utilize variable length field method fix length byte op code address field frequent instruction consist single byte field consequence instruction decod time minimize machine efficient respect space time 
.I 3006
anomaly variable partition pag algorithm type anomalous behavior occur pag virtual memory operate system redefin type anomaly concern fact reference strings pag algorithm increase mean memory allocate result increase fault rate pag algorithm examin term anomaly potential reference str anomaly present pag algorithm property inclusion property generalize inclusion property discuss anomaly implications property present 
.I 3007
complexity computation corrigendum 
.I 3008
preserve average proximity array programmer data structure designer forc choose alternative structure stor structure preserve logical adjacency proximity usual important considerate combinatorial problem stor array kind list structure examin embeddings graph model los proximity involve storage scheme elementary proof array stor linear list bound los proximity present average los proximity consider shown array stor linear list bound los average proximity stor binary tree result imply instance row major order asymptotical optimal storage strategy array 
.I 3009
insertion deletion sid height balanc tree recent hirschberg establish insertion sid height balanc tree logn step prove deletion perform logn step answer open problem pos hirschberg 
.I 3010
orientate computer science student technological nontechnological orientations investigate special attention complexity structure computer science student close associate technology contrast social science student technological aloof confirm ratings student university minnesota computer science major found complex structure social science major 
.I 3011
management utilize computer american local government tradition concept management informate system mis bear relate informate system top management local government exist management orient comput involve relative unsophisticate applications despite unsophisticate nature system management comput surprisingly common vari extent local government management comput prevalent government professional management practice top management supportive comput tend control comput decision department user control design implementate activity final management comput clearly impact top manager involve improvement decision informate 
.I 3012
interactive informate storage retrieval system medical research paper present result study interactive computerize storage retrieval system monitor built computer system provid usage data study addition data user reaction gathe questionnaire result show important role play frequent chosen laboratory reference leaders influenc system implications study design similar system discuss 
.I 3013
method detect step edge digital picture note describe operators respond step edge ramp similar digital laplacian max sum difference difference mean median gray level neighborhood output obtain operators appli set test picture compar standard digital laplacian gradient operate distance center centroid neighborhood edge briefly consider turn equivalent standard digital approximations gradient 
.I 3014
intermittent assertion prove program correctness paper explore technique prove correctness terminate program simultaneous approach intermittent assertion method involve document program assertion true time control pass correspond point ne true time method introduc burstall promise provide valuable complement convention method intermittent assertion method present number correctness terminate proof proof markedly simpler convention counterparts hand shown proof correctness terminate convention technique rephras direct proof intermittent assertion final shown intermittent assertion method appli prove validity program transformation correctness continuous operate program 
.I 3015
relaxate method image reconstruction problem recover image function variable experimental integral grayness thin strips great importance large number scientific area important version problem medicine obtain exact density distribution human body ray projectionsone approach solve problem consist translate informate system linear inequality size sparsity result system typical inequality fewer percent coefficient nonzero make method successive relaxations computational attractive compar solve system inequality paper shown consistent system linear inequality sequence relaxarion parameter ly strict generate sequence vector converge solution assumption system linear equations relaxate method converge minimum norm solution previous propos technique shown special case procedure choice relaxate parameter practical consequence image reconstruction choice relaxate parameter discuss 
.I 3016
comparison numerical technique markov model paper present numerical method obtain stationary probable vector markovian model nearly decomposable system consider result obtain method examin post mortem reveal standard technique fail yield correct result final mean estimate error inherent decomposition model present 
.I 3017
tree re examin tree variant increas frequency propos basic storage structure multiuser database applications potential problem dealt structure arise tradition static directory structure problem performance penalty 
.I 3018
cover edge clique regard keyword conflict intersection graph kellerman present method determin keyword conflict describ heuristic algorithm solve combinatorial optimize problem connection method optimize problem shown equivalent problem cover edge graph complete subgraph objective minimize number complete subgraph relationship edge clique cover problem graph color problem establish allow algorithm problem construct algorithm consequence relationship keyword conflict problem edge clique cover problem shown np complete pnp admit polynomial time approximate algorithm produce solution factor optimum 
.I 3019
gre advanc test computer science 
.I 3020
systematic recursion removal recursion removal algorithm present strong walker amplifi appli relative complex pli program aim demonstrate systematic recursion removal technique someth complex knuth sturdy toddler obtain measurement cost procedure linkage pli savings achievable procedure integrate presence recursion paper describe recursion removal process illustrate recursion removal appli major part final result process display performance comparison result present conclusion briefly discuss 
.I 3021
method obtain digital signature public key cryptosystems encryption method present property publicly reveal encryption key reveal correspond decryption key important consequence couriers secure mean need transmit key message encipher encryption key publicly reveal intend recipient decipher message know correspond decryption key message sign private held decryption key verify signature correspond publicly reveal encryption key signature forg signer later deny validity signature obvious applications electronic mail electronic fund transfer system message encrypt represent number rais publicly specifi power tak remainder result divid publicly specifi product large secret prime number decryption similaronly secret power modp security system rest part difficulty factor publish divisor 
.I 3022
computer science faculty status minority women result survey conduct fall determine status women minority faculty member academic computer science present faculty member compar respect professional background salary teach load publicate record research grant analysis data verdict general equal women minority men 
.I 3023
architecture ibm system paper discuss design considerations architectural extension distinguish system system comment experience original objective system effort achieve describe reason objective extend architecture cover virtual storage program control data manipulate instruction tim facility multiprocess debugg monitor error handl inputoutput operation final section tabulate important parameter ibm machine implement architecture 
.I 3024
cray computer system paper describe cray discuss evolution architecture give account problem overcome dur manufacture cray computer built date satisfy erdas class vi requirement computer capable process million floate point operation cray fortran compiler cft design give scientific user access benefit cray vector process architecture optimize compiler cft vectorizes innermost loop compatible ansi fortran standard commonly support fortran extension cft require source program modifications addition nonstandard fortran statement achieve vectorize user investment hundreds man month effort develop fortran program contemporary computer protect 
.I 3025
evolution dec system dec system known pdp evolve pdp circa generation implementations present include system cover price range origin evolution hardware operate system language describ term technological change user requirement user development pdp contribution comput technology include accelerate transition batch orient time shar comput system transferr hardware technology dec minicomputer design manufactur support minicomputer hardware software development serve model single user timeshar interactive minicomputermicrocomputer system 
.I 3026
evolution sperry univac series tory analysis projection series system sperry univac large scale main frame computer system beginn series progress succession compatible computer model latest system introduc series hardware architecture bas bit word complement structure obtain operand storage high spe register operand high spe register operate system design support symmetrical multiprocessor configurate simultaneous provid multiprogramm batch timeshar transaction environment 
.I 3027
development mu computer system follow outline background mu project aim idea mu discuss description instruction set include number feature conducive production efficient compil code high level language source program design processor trac initial idea associative address store final multistage pipeline structure involve prediction mechanism instruction prefetch function queue array element access view complete mu complex present performance 
.I 3028
manchester mark atlas torical perspective year computer design manchester university system stand mark develop period atlas paper place computer torical context describe architecture system software present day terminology design concept address generate store management evolve progression mark atlas wider impact manchester innovations area discuss contemporary performance mark atlas evaluate 
.I 3029
foreword special issue computer architecture 
.I 3030
hierarchical design proof hierarchical programm increasingly recognize helpful construction large program user hierarchical technique claim predict substantial increase productive reliable program produc paper describe formal method hierarchical program specificate implementate proof apply method significant list process problem discuss number extension programm language ease hierarchical program design proof 
.I 3031
abstract data type software validate data abstraction natural specifi algebraic axiom virtue axiom permit representate independent formal specificate data type show employ algebraic axiom successive level implementate major thrust paper twofold shown algebraic axiomatizations simplify process prove correctness implementate abstract data type semi automatic tool describ automate proof correctness derive implementate axiom implementate allow limit test program design time convention implementate accomplish 
.I 3032
reverse path forward broadcast packet broadcast packet delivery node network algorithm accomplish delivery store forward packet switch computer network include transmission separate address packet multidestinate address hot potato forward spann tree forward source bas forward list algorithm add reverse path forward broadcast rout method exploit rout procedure data structure packet switch reverse path forward practical algorithm broadcast rout store forward packet switch computer network algorithm describ practical optimal accord metric develop analysis paper implement exist network complexity requir known alternative 
.I 3033
optimize decision tree heuristical guid search optimal decision table conversion tackl literature approaches dynamic programm branch bound technique effective time space requirement independent easy table produce good quasi optimal solution branch bound technique good heuristic direct search clutter enormous search space number solution increase number test variable accord double exponential paper suggest heuristical guid top search algorithm dynamic programm recognize identical subproblem find optimal quasi optimal solution heuristic search method introduc paper combine positive aspect technique compress table large number variable handl derive expand table 
.I 3034
detection logical error decision table program paper algorithm detect logical error limit entry decision table loop free program embedd decision table develop condition decision table assum inequality equality relate linear expression assum action decision table linear variable occur condition stub decision table table control transferr table algorithm bas determin set linear inequality solution algorithm describ paper implement fortran iv 
.I 3035
strategic plann methodology comput effort higher educate empirical evaluate findings study design address press problem associate strategic plann comput effort higher educate present plann methodology develop test implementate university year methodology implement effectiveness plann methodology assess term improvement delivery comput service major institution role instruction research administrate control institution employ contrast improvement test institution result research plann methodology significant enhanc delivery comput service 
.I 3036
selection optimal tab settings generate computer terminal allow tab settings select set computer feature reduce number character need represent document transmission print note algorithm select optimal set tab stops minimize number character transmitt implementate algorithm reduc number character transmitt percent require prepass document compute matrix determin optimal set tab stops fix tab stops heuristic alternative achieve percent optimal prepass 
.I 3037
linear sieve algorithm find prime number algorithm present find prime algorithm execute time proportion assum multiplicate integer larger perform unit time method arithmetic complexity algorithm present mairson version simpler elegant easily extend find prime factorize integer time proportion 
.I 3038
encryption authenticate large network computer encryption achieve authenticate communicate computer network discuss protocol present establishment authenticate connection management authenticate mail signature verificate document integrity guarantee convention public key encryption algorithm consider basis protocol 
.I 3039
fly garbage collection exercise cooperate cooperate sequential process mutual interference despite frequent manipulations large shar data space technique develop allow nearly active need garbage detection collection perform addition processor operate con processor devot computate proper exclusion synchronize constraint weak achieve severe complexity engender illustrate 
.I 3040
synthesize constraint expression constraint network representate present combinatorial search problem find set variable subject set constraint theory consistency level network formulate relate problem backtrack tree search efficiency algorithm develop achieve level consistency desir order preprocess problem subsequent backtrack search function alternative backtrack search explicit determin solution 
.I 3041
median split tree fast lookup technique frequent occur key split tree technique search set key highly skew frequency distribution split tree binary search tree node key node maximal frequent key subtree split partition remain key respect lexical order left subtree median split tree mst lexical median node descendents split force search tree perfect balanc achieve space efficient representate tree high search spe unlike frequency order binary search tree cost successful search mst log bound stable minimal mst built key order set frequency time log oppos optimum binary search tree discussion applicate mst dictionary lookup english present performance obtain contrast technique 
.I 3042
power tree class pk tree present height balance maintain node iy path number node pk tree asymptotical grow power height worst case procedure node insertion class tree consider restrict ipk tree buildable procedure average behavior tree studi extensive set simulate run close avl tree family ipo tree main advantage reduc number restructurings requir node insertion analyz 
.I 3043
distribut process concurrent programm concept language concept concurrent process common variable introduc process communicate synchronize mean procedure call guard region concept propos real time applications controll microcomputer network distribut storage paper give distribut process show include procedure coroutines class monitor process semaphore buffer path expression inputoutput special case 
.I 3044
note condition expression evaluate condition expression succe decid predicate diverge alternative record node field content 
.I 3045
simple recovery procedure simple precedence parser simple method describ enable simple precedence parser recover syntax error attempt repair error made pars semantic process continue result good approximate syntax error handl negligible increase pars time space complexity parser table generate 
.I 3046
computer generate gamma random variable ii rejection method propos generate gamma variate nonintegral shape parameter method similar method fishman wallace tadikamalla faster method core storage requirement programm effort propos method similar wallace tadikamalla method computation time propos method remain fairly constant medium large superior time obtain ahrens dieter method propos method simpler ahrens dieter method 
.I 3047
synthetic image register real image surface model number image analysis task benefit registrate image model surface imag automatic navigate visible light radar image require exact alignment image digital terrain model addition automatic classificate terrain satellite imagery require alignment deal correct effect vary sun angle surface slope inspection technique industrial part improve mean achieve requir alignment match real image synthetic image obtain surface model known position light source synthetic image intensity calculate reflectance map convenient describ surface reflection function surface gradient illustrate technique landsat image digital terrain model 
.I 3048
performance evaluate highly concurrent computer deterministic simulate simulate present practical technique performance evaluate alternative configurations highly concurrent computer technique describ construct detail deterministic simulate model system model control stream replace instruction data stream real system simulate system model yield tim resource usage statistic need performance evaluate necessity emulate system case study implementate simulate model cpu memory subsystem ibm describ result evaluate alternative system design discuss experiment reveal case study major bottleneck system memory unit fix point unit sophisticate pipelin buffer technique simplement architecture ibm high spe cache memory ibm 
.I 3049
simply extend modifi batch environment graphical system sembegs sembegs complete batch environment graphical system component handl graphical data display content variety graphical hardware perform graphical batch input operation sembegs easy extend modify meet grow need large batch environment extendable fully interactive system paper present conceptual view graphic lead design sembegs outline major component system design sembegs found basic assumption true aim computer graphic describe graphical entity commonly held provide graphical input output function capability sembegs built basic graphical data management system bagdams provide common mean communicate description graphical entity component sembegs bagdams provide facility stor retrieve manipulate description graphical entity provid receive applicate program graphic package graphical device 
.I 3050
system design educate gam approach problem fac manager computer installations problem configur computer system meet demand made mix job computer center service paper present management game allow player configure computer system meet hypothetical job mix control game administrate vari simulate variety real world situations io bound job compute bound job player game receive set detail report cost choice simulate run center operate choice 
.I 3051
comparison heap tl structure simulate event set 
.I 3052
cold start warm start mis ratio level computer storage hierarchy mis ratio measurement made cold start made level store initial empty large capacity effect measur mis ratio miss incurr fill level store significant long reference strings warm start cold start mis ratio cast doubt widespread belief observe shape lifetime reciprocal mis ratio versus capacity curve property behavior program maintain constant number page main storage hand cold start mis ratio measur function capacity measurement length study system operate program periodical interrupt task switches shown obtain simple assumption cache mis ratio multiprogramm cold start mis ratio obtain approximate cold start mis ratio warm start mis ratio 
.I 3053
pack scatter table scatter table open address benefit recursive entry displacement cutoff unsuccessful searches auxiliary cost function compar convention method technique provide substantial improve table resemble exact solution optimal packings displacement depth limit approximations enumerative exhaustive optimize pack cost remain linear table size technique primarily suit important fix large table reference frequency known op code tablesspell dictionary access array introduction frequency weight improve retrieval enhancement degrade cutoff 
.I 3054
implement quicksort program paper practical study implement quicksort sort algorithm variant real computer includ apply code optimize technique detail implementate combin effective improvement quicksort discussion implement assemble language analytic result describ performance program summarize variety special situations consider practical standpoint illustrate quicksort wide applicable internal sort method require negligible extra storage 
.I 3055
analysis algorithm dutch nation flag problem solution dutch nation flag problem dijkstra meyer dijkstra start simple program arrive improve program refinement algorithm dijkstra shown expect number swap differ swap asymptotical swap algorithm meyer shown expect swap complexity 
.I 3056
count large number event small register small counter approximate count large number result expect error precise controll bit counter byte track event relative error substantial independent number event relative error expect percent percent time ieo technique advantage multichannel count hardware software monitor experiment process 
.I 3057
optimal togram match monotone gray level transformate paper investigate problem optimal togram match monotone gray level transformate assign picture point gray level gray level ti ti tj objective find transform digital picture picture sum absolute error gray level togram transform picture reference picture minimize equivalent plac linearly order object size linearly order boxes assort size accumulate error space pack overpack boxes minimize placement function monotonic ensure polynomial time solution problem tree search algorithm optimal togram match present time complexity ok monotone property dropp problem np complete restrict 
.I 3058
jump search fast sequential search technique sequential structure binary search feasible jump search appeal alternative paper explore variant classic jump search scheme optimum jump size square root number record multiple level variable size jump strategy explor applications discuss performance evaluate 
.I 3059
model parallel process program applicate cpuio ioio overlap approximate queue model internal parallel process individual program multiprogramm system develop paper solution technique develop network decomposition model formulate term cpuio ioio overlap appli analysis problem percentage performance improvement cpuio overlap found greatest system approximate cpuio utilize balance low degree multiprogramm percentage improvement ioio overlap found greatest systemtems io system utilize cpu 
.I 3060
fortran standard fortran official title american nation standard programm language fortran commonly referr fortran development complet replace fortran standard designate paper describe feature fortran provide informate standard develop 
.I 3061
simulations dynamic sequential search algorithm 
.I 3062
real time plott approximate contour map 
.I 3063
note virtual memory indexes 
.I 3064
event manipulate discrete simulations requir large number event event manipulate system present consist major part part address familiar problem event schedul efficiency number schedul event grow large part deal apparent problem provid efficiency flexible schedul event access execut addition feature problem dealt include proper handl simultaneous event event create schedul execut point simulate time infinite loop caus concatenate time event diagnos maintain event count practical economical capable handl time displaceable event desirable 
.I 3065
brother tree insertion deletion provid class sid brother tree log performance importance result stem close relationship brother tree insertion algorithm operate log insertion deletion carri log time brother tree insertion algorithm inherent difficult deletion algorithm reverse usual obtain 
.I 3066
controll experiment program test code walkthroughsinspections paper describe experiment program test employ highly experienc data process professional method test small pli program result show popular code walk throughinspection method effective computer bas method find error effective method term error found cost employ pair subject test program independent pool findings study show tremendous amount variable subject able detect type error varies method method 
.I 3067
generalize work set segment reference strings work set concept extend program reference segment size generalize work set policy gws resident set segment retention cost exce retrieval cost gws model entire class demand fetch memory policy satisfy resident set inclusion property generalize optimal policy gopt defin operate point minimize aggregate retention swapp cost special case cost structure allow gws gopt simulate known stack algorithm work set vmin efficient procedure comput demand curve show swapp load function memory usage develop gws gopt policy empirical data actual system includ 
.I 3068
model verificate data security operate system program verificate appli kernel architecture form promis method provid uncircumventable secure shar computer system precise definition data security develop term general model operate system model suitable basis verify property operate system assure reliable enforcement security applicate approach ucla secure operate system discuss 
.I 3069
practical interprocedural data flow analysis algorithm interprocedural data flow analysis algorithm present analyz algorithm associate procedure program informate variable modifi preserve call procedure subcalls algorithm sufficient powerful recursive program deal shar variable arise reference parameter algorithm unique compute informate single pass requir prepass compute call relationship shar pattern algorithm asymptotical optimal time complexity implement practical program large 
.I 3070
hybrid simulate model computer system paper describe structure operate hybrid simulate model discrete event simulate analytic technique combin produce efficient accurate system model bas simple hypothetical computer system discrete event simulate model arrival activate job central server queue network model system processor accuracy efficiency hybrid technique demonstrate compar result computation cost hybrid model equivalent simulate model 
.I 3071
algorithm symbolic technique bel petrov classificate gravitation field note algorithm present symbolic calculate algebraic invariant weyl tensor permit determinate bel petrov type gravitation field algorithm specialize dinverno russell clark require special coordinate system spin coefficient formal algorithm implement formac design complete classificate scheme propos petrov book appendix illustrate algorithm 
.I 3072
feedback coupl resource allocate policy multiprogramm multiprocessor computer system model study integrate feedback driven schedul system multiprogramm multiprocessor computer system present basic control variable data flow rate process execut cpu model system feature simulate continuous flow preempt resume schedul input output active attention amount memory resource requir effective process io active buffer space assignment model study distribution driven trace driven technique relative simple dynamic scheduler shown improve system performance measur user cpu time optimal optimal static scheduler imbed identical system structure workload environment improvement greatest heavy io demand workload 
.I 3073
communicate sequential process paper suggest input output basic primitive programm parallel composition communicate sequential process fundamental program structur method combin development dijkstra guard command concept surprisingly versatile illustrate sample solution variety familiar programm exercise 
.I 3074
time space efficient garbage compaction algorithm area storage scatter mark node differ size wish rearrange compact mass end area revis pointer mark node show locations algorithm describ accomplishes task linear time relative size storage area space order bit pointer algorithm operate reversible encod situate collection locations point single locate linear list emanate point locate pass point locations terminate point locations transplant content 
.I 3075
fast parallel sort algorithm parallel bucket sort algorithm present require time olog processor algorithm make technique require space product processor time realistic model model memory contention permitt procedure present sort number time ok log processor arbitrary integer model computate procedure permit simultaneous fetches memory locate 
.I 3076
conflict social choice electronic fund transfer system development dur year computer bas system automate transfer record debits credit begun implement large scale system promise financial benefit institution potential convenience customer raise significant social legal technical question resolve full scale system electronic fund transfer eft problem larger public solve paper examine incentive eft development social problem raise context conflict position implicit analyses propos eft arrangement conflict reflect relative importance problem specific group position implicit eft proposal help organize analyses market arrangement system reliable privacy transaction topic analyz article relate position held concern party public learn social quality eft arrangement pace eft development discuss context social choice 
.I 3077
programm liberate von neumann style function style algebra program convention programm language grow enormous stronger inherent defect basic level fat weak primitive word time style programm inherit common ancestor von neumann computer close coupl semantic state transition division programm world expression world statement inable effective powerful combin form build program exist lack mathematical property reason program alternative function style programm found combin form create program function program deal structur data nonrepetitive nonrecursive hierarchical construct argument require complex machinery procedure declarations general applicable combin form high level program build higher level style convention language associate function style programm algebra program variable range program operation combin form algebra transform program solve equations unknown program transform equations high school algebra transformation algebraic law carri language program written combin form chosen programm power power associate algebraic law general theorem algebra give detail behavior terminate condition large class program class comput system function programm style programm language state transition rule unlike von neumann language system semantic loose coupl state state transition occur major computate 
.I 3078
analysis computer system computer aid algebra analytical result relate computer system construct unreliable processor present paper result obtain computer aid algebraic manipulate technique major purpose paper demonstrate difficulty obtain analytical solution markov process considerable reduc applicate symbol manipulate program physical system model markov semi markov process potential range applicate technique wider problem analyz 
.I 3079
algorithm reason equal simple technique reason equality fast complete ground formula function symbol equal present proof correctness 
.I 3080
prove correctness heuristical optimize code system prove program written high level language correct translate low level language describ primary system post optimize step code generate low level language program ne generate compiler fact hand cod usefulness system interest result able handle program implement recursion bypass start program detection pinpoint wide class error low level language program demonstrate optimize genre paper result substantial faster operate save memory term program stack size 
.I 3081
shallow bind lisp shallow bind scheme allow variable access bound amount computate elegant model shallow bind lisp present context switch environment tree transformate call reroot reroot complete general reversible option sense lisp interpreter operate correct reroot invok context change reroot leave assoc invariant variable environment programmer access reroot primitive shallow give dynamic control access shallow deep affect spe execution program semantic addition multiple process active environment structure long reroot indivisible operate final concept reroot shown combine concept shallow bind lisp dijkstra display algol general model shallow bind 
.I 3082
time clock order event distribut system concept event happen distribut system examin shown define partial order event distribut algorithm synchronize system logical clock total order event total order illustrate method solve synchronize problem algorithm specialize synchronize physical clock bound derive synchrony clock 
.I 3083
pseudochain hash table paper present pseudochain collision resolution method pseudochain half open address chain owes fact link field present cell hash table permit chain overflow item table efficiency method derive tradeoff analysis 
.I 3084
interpolate search log logn search interpolate search method retrieve desir record key order key statistical distribution key shown average log logn access requir retrieve key assum key uniformly distribut number extra access estimate shown low hold cumulative distribution function key known computation experiment confirm result 
.I 3085
algorithm determin optimal computate order matrix chain product paper discuss computate matrix chain product form mn mis matrices order matrices comput affect number operation sufficient condition associate matrices optimal order present algorithm find order computate take percent longer optimal time topt present case algorithm yield optimal order order take percent longer topt percent average 
.I 3086
complexity comput measure uai bi decision tree complexity comput measure union overlapp interval shown log comparison linear function interval endpoints allow existence log lower bound determine real number demonstrate problem provide excellent opportunity discuss effect computation model ease analysis result produc 
.I 3087
english language question answer system large relation database typ request english casual user able obtain explicit answer large relation database aircraft flight maintenance data system call plane design implementate system describ illustrate detail operate system component system operate language process portion system number augment transition network matches phrase specific mean context register tory keepers concept case frame judg meaningfulness question generate dialogue clarify partial understood question resolve ellipsis pronoun reference problem system component construct formal query relation database optimize order search relation method discuss handl vague complex question provid brows able includ discussion important issue programm natural language system limit domain relationship system 
.I 3088
general equations idealize cpu io overlap configurations general equations derive estimate maximum utilize main storage partition cpu io device condition idealize cpu io overlap model multiprogramm computer system equations direct applicable configurate consist set identical cpu io processor main storage partition user task provid illustrate equations compute effective process time record expect timeshar response time balanc unbalanc resource utilize condition 
.I 3089
performance rollback recovery system intermittent failure mathematical model transaction orient system intermittent failure propos system assum operate checkpoint rollbackrecovery method ensure reliable informate process model derive principal performance measure includ response time system saturate point 
.I 3090
automate welfare client track service integrate political economy comput impact automate client track system client caseworkers administrators operation welfare agency report major impact system enhance administrative attractiveness agency eye funders increase internal administrative efficiency impact joint product technical feature computer bas system organization demand plac agency administrators caseworkers illustrate successful automate informate system fit political economy group 
.I 3091
basic determinant computer programm productive propose research examine relationship process characteristic program experience characteristic programmer program development time ultimate objective develop technique predict amount time create computer program fifteen program characteristic hypothesize associate increase programm time requir objective measurable preprogramm specifications programmer characteristic experience relate measurable programm task begun program characteristic emerg major influence program development time associate increas program development time programmer characteristic found relate reduc program development time multiple regression equate programmer characteristic program characteristic gave evidence good predictive power forecast program development time 
.I 3092
characteristic applicate software maintenance maintenance enhancement applicate software consume major portion total life cycle cost system rough estimate total system programm resource consum range high percent category area attention literature analyze problem area questionnaire develop pretest submitt organization respondents total response analyz sps statistical package result analysis maintenance enhancement consume total resource system programm group maintenance enhancement tend view management important applicate software development maintenance enhancement problem management orientate tend significant technical orientate user demand enhancement extension constitute important management problem area 
.I 3093
automatic error recovery lr parser paper present scheme detect recover syntax error program scheme bas lr pars driven informate direct automatical obtainable informate present lr parser approach pattern levy graham rhodes provide error recovery simple powerful 
.I 3094
analyses deterministic pars algorithm paper describe approach determin minimum maximum average time parse sentence acceptable deterministic parser quantity present form symbolic formula call time formula variable formula represent length input str time perform elementary operation push popp subscript iterate bind variable actual numerical correspond compiler machine configurate determine execution time configurate time formula derive examin grammar rule program represent algorithm wishes analyze approach describ specific grammar define simple arithmetic expression deterministic parser analyz top recursive descent ll parser bottom slr parser paper provide estimate relative efficiency parser estimate applicable specific machine pdp present substantiate buy benchmarks final paper illustrate propos approach apply analyses parser simple programm language 
.I 3095
selective traversal algorithm binary search tree problem select data item binary search tree accord list range condition consider process visit minimal number node retrieve data satisfy range condition call selective traversal present paper algorithm selective traversal tag field node tree algorithm efficient examinate data time consum examinate tag field 
.I 3096
optimal method deletion sid height balanc tree sid height balanc tree binary tree node subtree height equal exact greater height left subtree advantage general avl tree bit balanc informate requir bit requir acl tree shown deletion arbitrary node tree accomplish ologn operation number node tree method optimal sense complexity reduc order magnitude result coupl earlier result hirschberg basic problem insertion deletion retrieval insertion adverse affect modificate avl tree 
.I 3097
optimal shift strategy block transfer ccd memory purpose paper block transfer ccd memory compos serial shift register shift rate vary definite minimum shift rate refresh rate definite maximum shift rate bit iin shift register number block bit transferr start bit shift strategy block transfer request occurr random time wait minimal amount time bit reach minimum shift rate requirement allow simply park bit wait transfer request optimal strategy involve shift slowly bit pass shift quickly critical boundary reach short bit come call hurry wait strategy known computer field block transfer ccd memory view pag drum variable bound rotate spe 
.I 3098
computer generate gamma random variable method generate random variable gamma distribution nonintegral shape parameter propos method similar method recent wallace fishman compar fishman ahrens dieter method core storage requirement programm effort method similar fishman method propos method fishman method faster fishman method propos method simpler ahrens dieter method faster 
.I 3099
sufficient optimal condition integer programm applicate purpose report present class sufficient optimal condition pure mix integer programm problem set sufficient condition present thought generalizations optimal condition bas primal dual complementarity linear programm sufficient condition construction difficult integer programm problem known optimal solution problem test andor benchmark integer programm code 
.I 3100
interference match technique induc abstraction method induc knowledge abstraction sequence train describ propos method interference match induce abstraction find relation property common exemplars task solve program interference match algorithm present problem concern description train adequacy interference match discuss direction future research consider 
.I 3101
sl procedure mechanism paper describe integrate procedure mechanism permit procedure recursive function coroutines integrate accomplish treate procedure activate record call environment data object decompos procedure invocate separate component source language level addition argument bind control programmer permitt definition method argument transmission source language result procedure mechanismwhich part sl programm language suit goal orient problem problem readily programm coroutines 
.I 3102
incorporate unit programm language issue programm language aid track physical unit feet sec discuss method introduction relationship unit watt voltsamps yard feet subsequent automatic conversion bas relationship proposal syntax consider 
.I 3103
automatic data structure selection overview level abstraction prove helpful construct maintain program program design abstract data type set list programmer time save automate process fill low level implementate detail past programm system provid single general purpose implementate abstract type program produc abstract type inefficient space time paper system automatical choos efficient implementations abstract type library implementations discuss process discuss detail program general issue data structure selection review 
.I 3104
test data aid prove program correctness proof program correctness tend long tedious test detect error usual guarantee correctness paper introduce technique test data prove program correctness addition simplify process prove correctness method simplify process provid accurate specificate program applicable technique procedure recursive program demonstrate 
.I 3105
language extension express constraint data access controll shar informate need desirable applications support operate system access control mechanism paper show extend programm language provide controll shar extension permit expression access constraint shar data access constraint apply simple object object component larger object bank account record bank data base constraint state declarative enforc static check similar type check approach extend strongly typ language suitable extend language support notion abstract data type 
.I 3106
fast algorithm copy list structure algorithm present copy arbitrarily link list structure block contiguous storage locations destroy original list fix number program variable auxiliary storage stack algorithm need mark bit operate linear time shown significant faster fisher algorithm fastest previous linear time algorithm problem spe come mainly efficient list traversal technique fold process stack structure built classificate list cell type enable process operation optimize type 
.I 3107
generate beta variate nonintegrel shape parameter rejection method describ generate beta variate method compar previous publish method theoretical computer timings suggest method advantage spe programm simplicity previous method especial difficult combination parameter 
.I 3108
economical encod commas strings method insertion delimiters strings symbol present length strings increase extra cost term prolongate vanishingly small compar length strings 
.I 3109
data structure manipulate priority queue data structure describ represent collection priority queue primitive operation insertion deletion union update search item earliest priority 
.I 3110
assemble code machine span dependent instruction modern computer instruction length depend distance instance instruction operand instruction paper consider problem minimize length program machine efficient solution present case operand span dependent instruction label assemble time expression restrict formif restriction relax allow operand general assemble time expression problem shown np complete 
.I 3111
secure communications insecure channel accord tradition conception cryptographic security transmit key secret mean encrypt message secure paper show select key open communications channel fashion communications security maintain method describ force enemy expend amount work increase square work requir communicants select key method provide logical kind protection passive eaves dropper suggest research topic highly reward theoretical practical sense 
.I 3112
list process real time serial computer real time list process system time requir elementary list operation con car cdr rplaca replacd eq atom lisp bound small constant classical implementations list process system lack property allocate list cell heap garbage collection process require time proportion heap size finish real time list process system present continuous reclaim garbage includ direct cycle linearize compact accessible cell contiguous locations avoid fragment free storage pool program small require time shar interrupt mak suitable microcode final system require average time space classical implementate space requirement reduc approximate classical proportion compact list representate array size program stack hash link simple extension system reference count found inferior applications 
.I 3113
optimal conversion extend entry decision table general cost criteria general dynamic programm algorithm convert limit extend mix entry decision table optimal decision tree present take account rule frequency probability minimum time andor space cost criteria common action set compress rule rule sequenc constraint condition test excludable combination condition ambiguity interrupt rule mask 
.I 3114
technique isolate difference simple algorithm describ isolate difference applicate compar version source program order display difference algorithm isolate difference correspond close intuitive notion difference easy implement computational efficient time linear length applications algorithm isolate difference similar isolate longest common subsequence applicate algorithm merge independent generate change single algorithm generate efficient encodings form difference datum permitt reconstruction original difference datum 
.I 3115
orderly enumerate nonsingular binary matrices appli text encryption nonsingular binary matrices order nonsingular field initial segment natural number plac correspondence natural number correspond intermediate vector vector mapp nonsingular binary matrix complete enumerate nonsingular binary matrices produc mapp intermediate vector matrices mapp applicate vernam encipherment method pseudorandom number sequence bit str form form byte text data encryption key representate natural number natural number transform nonsingular binary matrix key leverage obtain matrix ase shift register sequence pseudorandom number generate 
.I 3116
interference detection solid surface industrial environment determine interference component potential interference problem product made assembly component product manufactur test typical drawings attempt detect unwant interference dimensional static draft medium show interference dimensional move part paper present computer representate solid surface algorithm carry interference check object represent object represent polyhedra piecewise planar surface type interference check discuss detection intersection object fix position detection collision object move specifi trajectory 
.I 3117
impact computer technology police past decade significant growth computer technology police department growth slower rate predict early computer applications extend routine nonroutine effort resource allocate computer aid dispatch system machine begin tool decision mak strategic plann personmachine interaction result technology date mix paper report case study survey provinsights implementate impact police computer technology relationship technology law enforcement society 
.I 3118
permutate data block bubble memory common internal organize bubble memory consist set minor loop connect major loop problem obtain give permutate minor loop content minimum time studi paper lower bound number step requir buy permutate algorithm derive class optimum algorithm identifi 
.I 3119
impact distribution discipline multiple processor system simple queue model study performance tradeoff multiple processor system issue consider include impact cpu service discipline distribution level multiprogramm multitask job priority 
.I 3120
event driven compil technique due linear structure source text difficulty arise pass compilate process difficulty occur entity process forward reference informate obtainable subsequent entity classic solution ask data structure case technique present control structure event process work compiler writer easier conceptual practice forget problem outset avoid special process problem technique appli construction algol compiler implementate describ discuss 
.I 3121
syntactic source source transform program manipulate syntactic transform source source program transformation preserve history computate modify execution time combin small number primitive semantic transform provide powerful tool program manipulate catalogue syntactic transform solution system program equations derivate complex source source transformation present case study illustrate syntactic semantic source source transformation development clear simple reasonable efficient program 
.I 3122
production employment phd computer science 
.I 3123
employment characteristic doctoral level computer scientist 
.I 3124
recursive data structure apl mathematical study approaches defin nest array apl present theorem exhibit relationship definition system illustrate graph representation approaches define apl array recursive data structure equivalent tree structure data stor leave homogeneous array number character extension apl propos include primitive function manipulate nest level array operators assist construction data driven algorithm 
.I 3125
global optimize suppression partial redundancy eliminate redundant computation move invariant computation loop separate invariant move outward loop loop propose move expression direct entrance outermost loop invariant solve general problem eliminate computation perform execution path computation term partial redundant algorithm require graphical informate restriction shape program graph test algorithm shown execution cost nearly linear size program lead smaller optimize require execution time 
.I 3126
comment perfect hash function single probe retrieve method static set 
.I 3127
thoth portable real time operate system thoth isa real time operate system design portable large set machine runn minicomputer architecture system applicate program written high level language system implement software hardware interface user program applicate program thoth highly portable thoth encourage structur program network communicate process provid efficient interprocess communicate primitive 
.I 3128
synchronize eventcounts sequencers synchronize concurrent process require controll relative order event process synchronize mechanism propos abstract object call eventcounts sequencers allow process control order event direct mutual exclusion protect manipulations shar variable control order event direct control order simplify correctness argument simplify implementate distribut system mechanism defin formal relationship mechanism protection mechanism system explain eventcounts shown applicable situations confinement informate matter implementate eventcount sequencers system shar memory describ 
.I 3129
optimal storage allocate serial computer system serial reside direct access storage device storage space limit record add job batch process mode line transaction transaction job generate demand vector designate space requir record addition run space system reorganize paper consider criteria allocate storage space 
.I 3130
curriculum recommendations undergraduate program computer science report recommendations undergraduate degree program computer science curriculum committee computer science associate comput machinery acm core curriculum common computer science undergraduate program present term elementary level topic course intermediate level course elective course round undergraduate program discuss entire program includ computer science component material present issue relate undergraduate computer science educate service course support area continu educate facility staff articulate present 
.I 3131
focus microcomputer number system focus number system support computation algorithm especial microcomputer control signal process applications focus wide rang character floate point number uniformity state distribution give focus twofold accuracy advantage equal word length floate point system focus computation typical time faster single precision fix point integer arithmetic mixture operation comparable spe hardware arithmetic applications algorithm bit bit implementations focus includ 
.I 3132
experiment algorithm find central solution pattern classificate class pattern recognition standard technique algorithm find hyperplanes separate class linearly separable train set tradition method find hyperplane separate point hyperplane necessarily center empty space class central hyperplane favor class lower error rate classify point noncentral hyperplane algorithm find central hyperplane test data set frequent practice modifi relaxate algorithm poor algorithm defin paper found good 
.I 3133
logic semantic network extend form semantic network defin regard syntactic variant clausal form logic virtue relationship logic extend semantic network provid precise semantic inference rule procedural interpretate hand regard semantic network abstract data structure representate clause provide theorem prover potential index scheme path follow strategy guid search proof 
.I 3134
normal multiplicate table informate storage retrieval paper describe method organize retrieval attribute bas informate system normal multiplicate table directory informate system algorithm organize retrieval informate describ method suitable query request group informate item possess set attribute attribute result respect number disk access disk space compar common approaches algorithm evaluate appropriateness approach informate system describ class informate system normal multiplicate table method yield rapid retrieval economical space requirement convention system method incorporate improve modificate invert technique 
.I 3135
detection dimensional pattern atom chemical structure algorithm detect occurrence dimensional pattern object larger structure present search technique present geometric structure pattern define characteristic demand candidates match case property atom consider individual adequate limit number set matchings applications technique field chemistry pharmacology search common constellate atom molecules possess similar biological activity ray crystallography fitt structure structural fragment set peak electron density distribution fourier map chemical documentate retrieve structure specifi substructure 
.I 3136
priceperformance pattern computer system econometric model computer market develop study relationship system price hardware performance single measure priceperformance groschs law shown simplifi meaningless multiple regression model predict system cost function hardware characteristic reveal market dichotomy hand exist stable price predictable market larger general purpose computer system market develop small business computer system market relative unstable low price predictable 
.I 3137
methodology design distribut informate system macro model distribut informate system present model describe major cost informate system perspective end user mak evident effect design operate parameter cost transaction technique illustrate applicate design interactive transaction process system 
.I 3138
mathematical programm update method modifi transformation appli lp problem efficient numerical stable method present problem update orthogonal decomposition matrix column row vector fundamental idea add column row analogous add addition row data linear square problem column row dropp formal scal imaginary unit follow square addition column row eliminate process procedure successive ssive applicate transformate modifi efficient form idea illustrate implementate revis simplex method algorithm general purpose account structure sparsity equations suggest computation test determin sign controll parameter revis simplex algorithm mention simple mean construct test case sample comput time present 
.I 3139
method color vertices graph paper describe efficient heuristic method color vertices graph re comparison degree structure graph method develop exact bipartite graph important part heuristic procedure find maximal clique general graph final exact method perform randall brown algorithm able color larger graph heuristic method classical method exact method compar 
.I 3140
social process proof theorem program argu formal verifications program matter obtain play key role development computer science software engineer proof mathematics absence continuity inevitable change complexity specificate significant real program make form al verificate process difficult justify manage felt ease formal verificate dominate program language design 
.I 3141
improve algorithm decentralize extrema find circular configurations process note present improvement lelanns algorithm find largest smallest set unique number process arrang circle central controller exist number process known priori decentralize algorithm technique selective message extinction order achieve average number message pass order log 
.I 3142
consumer difficulty computerize transaction empirical investigate prevalence error encounter end target computerize process assess type error occur easily correct reaction consumer error failure correct learn designer large management package data result show present state art approximate percent individual households average contacts type account experience error year eighty percent relate bill attempt correct error turn difficult successful conflict computer organization public role poor man agement package includ poor software management system adequate result survey raise concern timeliness number design large link program package eft instance 
.I 3143
reason array variety concept law notation present facilitate reason array basic concept include interval partition function restriction image pointwise extension relation order single point variate function equivalence relation array concatenate effectiveness idea illustrate informal description algorithm binary search merg short formal proof 
.I 3144
model discussion multi interpreter system multi interpreter system system program execute virtue interpret program interpret nest interpreter run direct host machine model reveal anatomy interpreter differ procedure exhibit link protection domain multiprocessor architecture 
.I 3145
implementate structur walk teach cobol programm effectiveness structur walk teach introductory cobol programm empirical assess sample graduate business administrate major cobol proficiency measur final examinate test knowledge language rule able read debug program able write program analysis multiple covariance statistical adjust test scores age condition reason scores findings provide empirical support incorporate structur walk programm learn process effective develop student proficiency writ cobol program 
.I 3146
academic program provid realistic train software engineer academic program harvey mudd college call clinic program bring project industry campus studi solve student teams objective clinic provide student work small teams careful faculty supervision opportunity work real world problem sufficient magnitude complexity program student acquire essential skill software engineer team work software project management software design methodology communicate skill realistic environment sample software project undertaken clinic describ experience shown program viable transition academic industrial world 
.I 3147
model automate program design business applicate system paper discuss model find efficient implementate business applicate system logical specifications determin advance model view program design problem systematical coordinate configurations datasets computation straight forward search technique determine aggregations computation aggregations datasets device organize key order data set key order computate access method dataset computate pair computation result present sample problem involve computation dataset main point paper underly model work computational simple adapt design situations 
.I 3148
high level programm distribut comput programm distribut loose coupl system problem grow interest paper describe approach distribut comput level general purpose programm language bas primitive notion module message transaction key methodology shown independent language machine programm wide range task part ambitious program development advanc programm language relation aspect project discuss 
.I 3149
cyclic order property vertices aid scene analysis cyclic order property defin bodies bound smooth curve face property shown analyz picture bodies line data extract picture imperfect property augment previous known grammatical rule determine existence dimensional bodies correspond dimensional line structure data 
.I 3150
programm language computer technology matures grow able create large system lead basic change nature programm programm language concept adequate build maintain system complexity call task attempt high level language enable programmer escape intricacy machine order code higher level programm system provide mean understand manipulate complex system component order develop system ne shift attention detail specificate algorithm description property package object build paper analyze shortcomings programm language exist lay direction future research 
.I 3151
optimal real time algorithm planar convex hull algorithm describ construction real time convex hull set point plane data structure algorithm construct convex hull successive update tak time olog achieve total process time log 
.I 3152
storage reorganize technique matrix computate pag environment order multiply matrices minimize number page fetches requir efficient reorganize data submatrix form block multiplicate known algorithm leave matrices stor row column orient form efficient method accomplish reorganize make derivate asymptotical bound multiplicate matrices row orient form adapt technique strassen reorganize data reorganizationblock multiplicate scheme shown advantageous matrices page realistic size strassen adaptate scheme shown advantageous transpose matrices addition cost 
.I 3153
control response time multi class system memory allocations give qual service job class regulate memory allocate examin context pag computer system parameterize algorithm partition main memory class job consider initial clos system consist process pag device fix number job studi determine optimal degree multiprogramm proportion processor time devot class apply decomposition approach treate clos system single server response time open system external arrival studi object investigate effect memory alocate parameter expect response time algorithm numerical solution economical lower bound expect response time function control parameter obtain apply result system job class 
.I 3154
algorithm logic control algorithm regard consist logic component knowledge solve problem control component determine problem solve strategy mean knowledge logic component determine mean algorithm control component affect efficiency efficiency algorithm improve control component chang logic algorithm argue computer program correct easily improve modifi logic control aspect identifi separate program text 
.I 3155
paradigm programm 
.I 3156
comput connect component parallel computer present parallel algorithm processor find connect component undirect graph vertices time ologn ologn time bound achieve nnlogn processor algorithm find transitive closure symmetric boolean matrix assume processor access common memory simultaneous access locate permitt fetch instruction store instruction 
.I 3157
prove terminate multiset orderings common tool prove terminate program found set set order admit infinite descend sequence basic approach find terminate function map program variable found set terminate function repeatedly reduc computate terminate function requir difficult find complexity proportion program considerate multiset bags found set set admit multiple occurrence element order induce order finite multiset multiset order shown found multiset order enable relative simple intuitive terminate function difficult terminate proof multiset order prove terminate production system program defin term set rewrit rule 
.I 3158
secure personal comput insecure network method implement secure personal comput network central facility propos method employ public key encryption device hardware key user responsible security ne re security central facility communicate link user safe store confidential central facility transmit confidential data user network 
.I 3159
remark stable update mean standard deviate estimate 
.I 3160
rejuvenate experimental computer science report bas result nsf sponsor workshop held wasington dc november author report gordon bell digital equipment corporate bernard galler university michigan patricia goldberg ibm corporate john hamblen university missouri rolla elliot pinson bell telephone laboratory ivan sutherland california institute technology participate workshop representative nsf government agency addition author number people contribut content report preparate original workshop doctorate grant computer science department nate ask comment suggestion problem experimental computer science version report date january circulate department number industrial government group criticism editor author final version gratefully acknowledge contribution large number people stage preparate report note follow presentate report position paper crisis experimental computer science written acm executive committee 
.I 3161
acm executive committee position crisis experimental computer science 
.I 3162
improve worst case runn time boyer moore str match algorithm shown modify boyer moore str match algorithm worst case runn time linear multiple occurrence pattern present text 
.I 3163
optimal insertion algorithm sid height balanc binary search tree algorithm insert element sid height balanc oshb binary search tree present algorithm operate time olog number node tree represent improvement previous ly known insertion algorithm hirschberg kosaraju require time olog olog complexity optimal earlier result shown deletion structure perform olog time result paper give negative answer question tree kind deletion smaller time complexity insertion conclud insertion deletion retrieval oshb tree perform time correspond operation general avl tree constant factor insertion deletion algorithm oshb tree complicate correspond algorithm avl tree 
.I 3164
progressive acyclic digraphs tool database integrity progressive acyclic digraph pad algorithm accept request maintain graph acyclic state request create cycle node detach enter acyclical process important area database implementate constraint permissible sequence action pad algorithm present simple path matrix representate list artificial gradient experiment suggest large considerable faster asymptotical onr number node expect number node reachable path node 
.I 3165
approximate polygonal map cellular map approximate polygonal thematic map cellular map important operate geographical data process analyz data organize represent polygonal map wide segment bas data structure class label identify region border segment side approximate algorithm present operate organize eliminate ne recognition region boundary segment examin versatility organize illustrate outline algorithm area computate point inclusion algorithm appli set soil map convert computer readable form mean coordinate digitize 
.I 3166
comput standard deviations accuracy algorithm numerical computate standard deviate unweight sampl data analyz algorithm known statistical computation literature algorithm specifical intend automatic computate discussion expository emphasis reach suitable definition accuracy algorithm analyz condition accurate conclude algorithm provide accurate answer problem algorithm substantial accurate difficult problem 
.I 3167
update mean variance estimate improve method method improve efficiency update mean variance weight sampl data addition data includ set evidence present method stable accurate exist update method 
.I 3168
comment optimal evaluate boolean expression online query system 
.I 3169
note optimal evaluate boolean expression online query system 
.I 3170
proof correctness calendar program formal specificate simple calendar program derivate proof correctness program sketch specificate easy understand correctness manifest human 
.I 3171
line number made cheap technique describ run time line number administrate implementations high level language suitable circumstances method require absolute overhead time space dur execution program 
.I 3172
algorithm plann collision free path polyhedral obstacles paper describe collision avoidance algorithm plann safe path polyhedral object move known polyhedral object algorithm transform obstacles represent locus forbidden position arbitrary reference point move object trajectory reference point avoid forbidden region free collision trajectory found search network vertex transform obstacles vertices reach safe 
.I 3173
psychology learn basic paper address question person know follow learn basic programm underly conceptual structure identifi transaction event occur computer involve operate object locate prestatement set transaction correspond line code chunks frequent occurr configurations prestatement correspond line code 
.I 3174
password security case history paper describe history design password security scheme remote access time shar system present design result counter observe attempt penetrate system result compromise extreme security ease 
.I 3175
break substitution cipher relaxate algorithm substitution cipher code letter alphabet fix substitute word division change paper problem break substitution cipher represent probabilistic label problem code letter assign probability represent plain text letter probability update parallel code letter joint letter probability iterate update scheme result improve estimate final lead break cipher method apply successfully 
.I 3176
stor sparse table problem stor search large sparse table ubiquitous computer science standard technique stor table hash hash poor worst case performance propose good worst case method stor static table entry integer method require word storage allow ologn access time method complicate practice analysis show simpler algorithm compress lr pars table work 
.I 3177
share secret paper show divide data piece easily reconstructable piece complete knowledge piece reveal olute informate technique enable construction robust key management scheme cryptographic system function secure reliable misfortunes destroy half piece security breaches expose remain piece 
.I 3178
introduction eft symposium 
.I 3179
overview eft symposium increasingly recognize large scale technology eft potential aid solution societal problem technology generate problem symposium present select paper conference sought discover known eft impact society research need future 
.I 3180
cost payments system bank industry public policy makers good informate comparative cost alternative payment system cash check credit card eft transaction result eft system service implement valid assessment cost justifi lst justifi term criteria 
.I 3181
public protection educate eft research reveal existence widespread misinformate lack knowledge eft business government consumer result effort stimulate meaningful public participate decision introduction eft system require coordinate education effort considerable scale addition research reveal shortcomings present system defin responsibility liability avenue recourse article present alternative improve system ongo research need assure action responsive chang environment consumer need 
.I 3182
vulnerability eft intentional caus loss hypothesis consumer provid greater accuracy freedom error fraud electronic fund transfer system eft discuss light technical capability potential computer protect accidental intentional caus loss nomenclature business crimes remain depository financial service system fraud theft embezzlement characteristic crimes change result accelerate eft continual technological advance broaden scope security issue examin factor backup requirement regulatory legislative action economic give rise urgency research solution emerg eft relate vulnerability 
.I 3183
policy eft research anatomy research agenda emerg recognition eft system potential vast alter payment fund transfer system american society number force actors involve evolution vary significant depend individual institution perspective conflict highlight part research agenda technological issue eft eft impact people economic impact eft regulate control eft evaluate monitor eft system 
.I 3184
revis report algorithmic language algol report give complete defin description internation algorithmic language algol language suitable express large class numerical process form sufficient concise direct automatic translate language programm automatic computer 
.I 3185
humble programmer programm job provid approach task full appreciate tremendous difficulty provid stick modest elegant programm language provid respect intrinsic limitations human mind approach task humble programmer 
.I 3186
statement considerd harmful 
.I 3187
certificate algorithm quickersort quickersort compil run correction aldep translate cdc comparison average sort item recent publish algorithm demonstrate quickersort superior performance 
.I 3188
semiotics programm language bas paper semiotics dimension insert point language aspect pragmatic semantic syntactic cover project aspect semiotic dimension strong tendency today 
.I 3189
algebraic compiler fortran assemble program algebraic compiler written add fortran assemble program compiler expand algebraic statement follow operation addition subtraction multiplicate division compile multi level expression floate point arithmetic easily revis fix point 
.I 3190
correction economy scale ibm system page typical instruction mix id discuss tim comput outlin page undetect programm error time result regression equate slight error 
.I 3191
generate permutations nest cycl purpose letter twofold give due credit tompkins paige algorithm clarify comment hill cr review program permutations 
.I 3192
lincoln keyboard typewriter keyboard design computer input flexible typewriter keyboard direct punch paper tape computer input replace usual commercial keyboard character chosen convenience programmer lincoln keyboard expect facilitate programm algorithmic process allow considerable flexible assemble utility routine 
.I 3193
work progress formula cod technique allow direct entry computer formulae typ character flexo writer flexo writer modifi automatic half line advance retract carriage permit complete general superscript 
.I 3194
non heuristic program prove elementary logical theorem paper discuss problem involve design device capable distinguish speech event normal recognize native speakers language parallel problem chemical analysis point 
.I 3195
reiterate acm policy standardize periodic change officers chairman editor usual follow election occasional result change policy case department radical change proper time reiterate underline acm policy respect standardize computer area 
.I 3196
reactive typewriter program character keyboard includ alphabetical upper lower case good readable machine restrict single case lower case preferr reactive typewriter portable reactive typewriter operate commercial dial type telephone voice telegraph telex line leas nondial telegraph line interchangeable 
.I 3197
structure standard process organization computer area line acm policy statement comm acm nov follow organization description provid order describe standardize activity pertinent computer informate process 
.I 3198
microprogramm emulators programm language problem concern convert language action intellectual energy mechanical energy medium purpose language preoccupi subject language area language investigate concentrate formalize syntax semantic 
.I 3199
algem algebraic manipulate algem package subprogram written slip fortran iv map ii manipulate algebraic expression algem basic algebraic operation addition subtraction multiplications division exponentiate capable handl number single letter variable variable exponents find highest common factor polynomial includ function substitution differentiate determin coefficient specifi variable solve linear equate basic io routine special purpose arithmetic routine major innovate algem manipulators assignment type expression standard order procedure 
.I 3200
formac program solution linear boundary initial problem computer program describ develop obtain approximate solution linear initial boundary problem involve differential equations problem input program include equations symbolic form satisfi differential equations equations describ auxiliary condition boundary condition numerical description region equations satisfi set function symbolic form linear combination approximate solution function give input program generate approximate solution specifi problemm term specifi function optimum square sense 
.I 3201
symbolic manipulate poisson series poisson series variable manageable symbolical set formal subroutine written partial ibm machine language call fortran language fortran program effort made supply operation requir celestial mechanics routine entire subroutine require standard fortran inputoutput unit design avoid waste overflow core storage space 
.I 3202
manip computer system algebra analytic differentiate mathematical expression operate written fortran notate stor computer str bcd character blank remove complicate desir parentheses nest restriction long entire expression subsequent form exce character problemm perform algebraic operation obtain analytic derivative translate identify manipulate character sequence program result written fortran iv cdc discuss detail 
.I 3203
grad assistant program symbolic algebraic manipulate differentiate general recursive algebra differentiate assistant grad assistant development set lisp function symbolical manipulate abd differentiate algebraic expression design problemm large amount routine manipulate program human intervention grad recognize simplifications external guidance complicate expression notable involve nest radical trigonometric function yield complete present version prove inde 
.I 3204
line program non numerical algebra goal program make step te design automate mathematical assistant requirement program easy access result obtain reasonable short time program written time shar computer computer system development corporate santa monica california chosen lisp compiler programm debugg remote teletype console stanford university 